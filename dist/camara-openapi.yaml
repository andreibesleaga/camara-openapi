openapi: 3.0.3
info:
  title: CAMARA Complete Unified API (Recursive Discovery)
  version: "2025-10-20T00:01:29.112Z"
  description: A single OpenAPI spec generated by recursively discovering and merging all CAMARA project APIs.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/camara
    description: Example Production Server
paths:
  /customerinsights/scoring/retrieve:
    post:
      security:
        - openId:
            - customer-insights:scoring:read
      tags:
        - CustomerInsights
      summary: Retrieves Scoring information
      description: |-
        Retrieves Scoring information, for the user associated with the provided `idDocument`, `phoneNumber` or the combination of both parameters.
        It also allows to select the type of the Scoring scale measurement.
      operationId: CustomerInsights_retrieveScoring
      parameters:
        - $ref: "#/components/parameters/CustomerInsightsx-correlator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerInsightsScoringRequest"
            examples:
              INPUT_GAUGE_METRIC:
                summary: Gauge Metric
                description: Gauge Metric score request, with no additional information. Default three-legged access mode for Gauge Metric
                value:
                  scoringType: gaugeMetric
              INPUT_VERITAS_INDEX:
                summary: Veritas Index
                description: Veritas Index score request, with no additional information. Default three-legged access mode for Veritas index
                value:
                  scoringType: veritasIndex
              INPUT_GAUGE_METRIC_PHONENUMBER:
                summary: Gauge Metric with phoneNumber
                description: Gauge Metric score request, with phoneNumber. Default two-legged access mode for Gauge Metric
                value:
                  phoneNumber: "+556253423432"
                  scoringType: gaugeMetric
              INPUT_VERITAS_INDEX_PHONENUMBER:
                summary: Veritas Index with phoneNumber
                description: Veritas Index score request, with phoneNumber. Default two-legged access mode for Veritas index
                value:
                  phoneNumber: "+556253423432"
                  scoringType: veritasIndex
              INPUT_GAUGE_METRIC_ID_DOCUMENT:
                summary: Gauge Metric with idDocument
                description: Gauge Metric score request, with idDocument.
                value:
                  idDocument: "987654321"
                  scoringType: gaugeMetric
              INPUT_VERITAS_INDEX_ID_DOCUMENT:
                summary: Veritas Index with idDocument
                description: Veritas Index score request, with idDocument.
                value:
                  idDocument: "987654321"
                  scoringType: veritasIndex
              INPUT_GAUGE_METRIC_PHONENUMBER_ID_DOCUMENT:
                summary: Gauge Metric with phoneNumber and idDocument
                description: Gauge Metric score request, with phoneNumber and idDocument.
                value:
                  idDocument: "987654321"
                  phoneNumber: "+556253423432"
                  scoringType: gaugeMetric
              INPUT_VERITAS_INDEX_PHONENUMBER_ID_DOCUMENT:
                summary: Veritas Index with phoneNumber and idDocument
                description: Veritas Index score request, with phoneNumber and idDocument.
                value:
                  idDocument: "987654321"
                  phoneNumber: "+556253423432"
                  scoringType: veritasIndex
      responses:
        "200":
          description: Scoring result.
          headers:
            x-correlator:
              $ref: "#/components/headers/CustomerInsightsx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerInsightsScoringResponse"
              examples:
                GAUGE_METRIC:
                  summary: Gauge Metric Response
                  description: Scoring with Gauge Metric index
                  value:
                    scoringType: gaugeMetric
                    scoringValue: 600
                VERITAS_INDEX:
                  summary: Veritas Index Response
                  description: Scoring with Veritas Index
                  value:
                    scoringType: veritasIndex
                    scoringValue: 4
        "400":
          $ref: "#/components/responses/CustomerInsightsGeneric400"
        "401":
          $ref: "#/components/responses/CustomerInsightsGeneric401"
        "403":
          $ref: "#/components/responses/CustomerInsightsGeneric403"
        "404":
          $ref: "#/components/responses/CustomerInsightsGeneric404"
        "422":
          $ref: "#/components/responses/CustomerInsightsGeneric422"
        "429":
          $ref: "#/components/responses/CustomerInsightsGeneric429"
  /deviceswap/retrieve-date:
    post:
      tags:
        - DeviceSwap
      summary: Get last device swap date
      description: Get timestamp of last device swap for a mobile user account provided with phone number.
      operationId: DeviceSwap_retrieveDeviceSwapDate
      security:
        - openId:
            - device-swap
        - openId:
            - device-swap:retrieve-date
      parameters:
        - $ref: "#/components/parameters/DeviceSwapx-correlator"
      requestBody:
        description: |
          Create a device swap date request for a phone number.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceSwapCreateDeviceSwapDate"
            examples:
              RETRIEVE_3LEGS:
                $ref: "#/components/examples/DeviceSwapRETRIEVE_3LEGS"
              RETRIEVE_2LEGS:
                $ref: "#/components/examples/DeviceSwapRETRIEVE_2LEGS"
        required: true
      responses:
        "200":
          description: Contains information about Device swap change
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSwapDeviceSwapInfo"
              examples:
                RETRIEVE_DATE:
                  $ref: "#/components/examples/DeviceSwapRETRIEVE_DATE"
                RETRIEVE_MONITORED_PERIOD:
                  $ref: "#/components/examples/DeviceSwapRETRIEVE_MONITORED_PERIOD"
                RETRIEVE_MONITORED_NULL:
                  $ref: "#/components/examples/DeviceSwapRETRIEVE_MONITORED_NULL"
        "400":
          $ref: "#/components/responses/DeviceSwapGeneric400"
        "401":
          $ref: "#/components/responses/DeviceSwapGeneric401"
        "403":
          $ref: "#/components/responses/DeviceSwapGeneric403"
        "404":
          $ref: "#/components/responses/DeviceSwapGeneric404"
        "422":
          $ref: "#/components/responses/DeviceSwapGeneric422"
  /deviceswap/check:
    post:
      tags:
        - DeviceSwap
      summary: Check last device swap date
      description: Check if device swap has been performed during a past period
      operationId: DeviceSwap_checkDeviceSwap
      security:
        - openId:
            - device-swap
        - openId:
            - device-swap:check
      parameters:
        - $ref: "#/components/parameters/DeviceSwapx-correlator"
      requestBody:
        required: true
        description: |
          Create a check device swap request for a phone number.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceSwapCreateCheckDeviceSwap"
            examples:
              CHECK_3LEGS:
                $ref: "#/components/examples/DeviceSwapCHECK_3LEGS"
              CHECK_2LEGS:
                $ref: "#/components/examples/DeviceSwapCHECK_2LEGS"
      responses:
        "200":
          description: Returns whether a device swap has been performed during a past period
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSwapCheckDeviceSwapInfo"
        "400":
          $ref: "#/components/responses/DeviceSwapGeneric400Check"
        "401":
          $ref: "#/components/responses/DeviceSwapGeneric401"
        "403":
          $ref: "#/components/responses/DeviceSwapGeneric403"
        "404":
          $ref: "#/components/responses/DeviceSwapGeneric404"
        "422":
          $ref: "#/components/responses/DeviceSwapGeneric422"
  /knowyourcustomerageverification/verify:
    post:
      tags:
        - KnowYourCustomerAgeVerification
      summary: Verify Age Threshold
      description: |
        Verify that the age of the subscriber associated with a phone number is equal to or greater than the specified age threshold value.

        As it is possible that the person holding the contract and the end-user of the subscription may not be the same, the endpoint also admits a list of optional properties to be included in the request to improve the identification. The response may optionally include the `identityMatchScore` property with a value that indicates how certain it is that the information returned relates to the person that the API Client is requesting. To increase the reliability of the information returned, the API Provider may include in the response the `verifiedStatus` property, indicating whether the identity information in its possession has been verified against an identification document legally accepted as an age verification document (Note). Note: Depending on the country, credit-check or other mechanism can be used instead of official identification for Age Verification. For details, please contact API Provider.

        If the API Client indicates request properties `includeContentLock` or `includeParentalControl` with value `true` and the API Provider implements this functionality, then the response will also include `contentLock` and `parentalControl` properties to indicate if the subscription has any kind of content filtering enabled. On the other hand, if the request properties are not included or the API Client specifies value `false`, then the response properties will not be returned. If the API Provider doesn't implement this functionality, request properties will be ignored and response properties won't be returned in any case.
      operationId: KnowYourCustomerAgeVerification_verifyAge
      security:
        - openId:
            - kyc-age-verification:verify
      parameters:
        - $ref: "#/components/parameters/KnowYourCustomerAgeVerificationx-correlator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowYourCustomerAgeVerificationVerifyRequestBody"
            examples:
              Two-Legged Access Token Example:
                value:
                  ageThreshold: 18
                  phoneNumber: "+34629255833"
                  idDocument: 66666666q
                  name: Federica Sanchez Arjona
                  givenName: Federica
                  familyName: Sanchez Arjona
                  middleNames: Sanchez
                  familyNameAtBirth: YYYY
                  birthdate: "1978-08-22"
                  email: federicaSanchez.Arjona@example.com
                  includeContentLock: true
                  includeParentalControl: true
              Three-Legged Access Token Example:
                value:
                  ageThreshold: 18
                  idDocument: 66666666q
                  name: Federica Sanchez Arjona
                  givenName: Federica
                  familyName: Sanchez Arjona
                  middleNames: Sanchez
                  familyNameAtBirth: YYYY
                  birthdate: "1978-08-22"
                  email: federicaSanchez.Arjona@gmail.com
                  includeContentLock: true
                  includeParentalControl: true
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowYourCustomerAgeVerificationVerifyResponseBody"
              examples:
                KYC_200Example:
                  value:
                    ageCheck: "true"
                    verifiedStatus: true
                    identityMatchScore: 90
                    contentLock: "false"
                    parentalControl: "true"
        "400":
          $ref: "#/components/responses/KnowYourCustomerAgeVerificationGeneric400"
        "401":
          $ref: "#/components/responses/KnowYourCustomerAgeVerificationGeneric401"
        "403":
          $ref: "#/components/responses/KnowYourCustomerAgeVerificationGeneric403"
        "404":
          $ref: "#/components/responses/KnowYourCustomerAgeVerificationGeneric404"
        "422":
          $ref: "#/components/responses/KnowYourCustomerAgeVerificationGeneric422"
  /knowyourcustomerfill-in/fill-in:
    post:
      tags:
        - KnowYourCustomerFill-in
      summary: Providing information related to a customer identity stored the account data bound to the customer's phone number.
      operationId: KnowYourCustomerFill-in_KYC_Fill-in
      security:
        - openId:
            - kyc-fill-in:set-all
        - openId:
            - kyc-fill-in:phoneNumber
        - openId:
            - kyc-fill-in:idDocument
        - openId:
            - kyc-fill-in:idDocumentType
        - openId:
            - kyc-fill-in:idDocumentExpiryDate
        - openId:
            - kyc-fill-in:name
        - openId:
            - kyc-fill-in:givenName
        - openId:
            - kyc-fill-in:familyName
        - openId:
            - kyc-fill-in:nameKanaHankaku
        - openId:
            - kyc-fill-in:nameKanaZenkaku
        - openId:
            - kyc-fill-in:middleNames
        - openId:
            - kyc-fill-in:familyNameAtBirth
        - openId:
            - kyc-fill-in:address
        - openId:
            - kyc-fill-in:streetName
        - openId:
            - kyc-fill-in:streetNumber
        - openId:
            - kyc-fill-in:postalCode
        - openId:
            - kyc-fill-in:region
        - openId:
            - kyc-fill-in:locality
        - openId:
            - kyc-fill-in:country
        - openId:
            - kyc-fill-in:houseNumberExtension
        - openId:
            - kyc-fill-in:birthdate
        - openId:
            - kyc-fill-in:email
        - openId:
            - kyc-fill-in:gender
        - openId:
            - kyc-fill-in:cityOfBirth
        - openId:
            - kyc-fill-in:countryOfBirth
        - openId:
            - kyc-fill-in:nationality
      parameters:
        - $ref: "#/components/parameters/KnowYourCustomerFill-inx-correlator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowYourCustomerFill-inKYC_FillinRequest"
            examples:
              KYC_FillInBodyExample:
                value:
                  phoneNumber: "+34629255833"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowYourCustomerFill-inKYC_FillinResponse"
              examples:
                KYC_Fillin200Example:
                  value:
                    phoneNumber: "+34629255833"
                    idDocument: 66666666q
                    idDocumentType: passport
                    idDocumentExpiryDate: "2027-07-12"
                    name: Federica Sanchez Arjona
                    givenName: Federica
                    familyName: Sanchez Arjona
                    nameKanaHankaku: federica
                    nameKanaZenkaku: Ｆｅｄｅｒｉｃａ
                    middleNames: Sanchez
                    familyNameAtBirth: YYYY
                    address: Tokyo-to Chiyoda-ku Iidabashi 3-10-10
                    streetName: Nicolas Salmeron
                    streetNumber: "4"
                    postalCode: "1028460"
                    region: Tokyo
                    locality: ZZZZ
                    country: JP
                    houseNumberExtension: "36"
                    birthdate: "1978-08-22"
                    email: abc@example.com
                    gender: MALE
                    cityOfBirth: Madrid
                    countryOfBirth: ES
                    nationality: ES
        "400":
          $ref: "#/components/responses/KnowYourCustomerFill-inGeneric400"
        "401":
          $ref: "#/components/responses/KnowYourCustomerFill-inGeneric401"
        "403":
          $ref: "#/components/responses/KnowYourCustomerFill-inGeneric403"
        "404":
          $ref: "#/components/responses/KnowYourCustomerFill-inGeneric404"
        "422":
          $ref: "#/components/responses/KnowYourCustomerFill-inGeneric422"
  /knowyourcustomermatch/match:
    post:
      tags:
        - KnowYourCustomerMatch
      summary: Matching a customer identity by checking a set of attributes related against the account data bound to their phone number.
      description: |-
        Verify matching of a number of attributes related to a customer identity against the verified data bound to their phone number in the Operator systems. Regardless of whether the `phoneNumber` is explicitly stated in the request body, at least one of the other fields must be provided, otherwise a `HTTP 400 - KNOW_YOUR_CUSTOMER.INVALID_PARAM_COMBINATION` error will be returned.

        In order to proceed with the match check, some Operators may have the requirement to perform an additional level of validation based on the `idDocument` property. This means that, in those cases, the `idDocument` is required and the provided value needs to match the one stored in the Operator system associated with the indicated `phoneNumber`. This validation will be done before proceeding with the match check of the rest of the properties. The following two rules apply only in the cases where the Operator have the requirement to validate the `idDocument`:
        - If no `idDocument` is provided, then a `HTTP 403 - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_REQUIRED` error will be returned.
        - If the provided `idDocument` does not match the one stored in the Operator systems, then a `HTTP 403 - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_MISMATCH` error will be returned.

        The API will return the result of the matching process for each requested attribute. This means that the response will **only** contain the attributes for which validation has been requested. Possible values are:
          - **true**: the attribute provided matches with the one in the Operator systems, which is equal to a `match_score` of 100.
          - **false**: the attribute provided does not match with the one in the Operator systems.
          - **not_available**: the attribute is not available to validate.
      operationId: KnowYourCustomerMatch_KYC_Match
      security:
        - openId:
            - kyc-match:match
      parameters:
        - $ref: "#/components/parameters/KnowYourCustomerMatchx-correlator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowYourCustomerMatchKYC_MatchRequestBody"
            examples:
              Two-Legged and Three-leg Access Token Example:
                value:
                  phoneNumber: "+34629255833"
                  idDocument: 66666666q
                  idDocumentType: passport
                  idDocumentExpiryDate: "2027-07-12"
                  name: Federica Sanchez Arjona
                  givenName: Federica
                  familyName: Sanchez Arjona
                  nameKanaHankaku: federica
                  nameKanaZenkaku: Ｆｅｄｅｒｉｃａ
                  middleNames: Sanchez
                  familyNameAtBirth: YYYY
                  address: Tokyo-to Chiyoda-ku Iidabashi 3-10-10
                  streetName: Nicolas Salmeron
                  streetNumber: "4"
                  postalCode: "1028460"
                  region: Tokyo
                  locality: ZZZZ
                  country: JP
                  houseNumberExtension: VVVV
                  birthdate: "1978-08-22"
                  email: abc@example.com
                  gender: OTHER
                  cityOfBirth: Madrid
                  countryOfBirth: ES
                  nationality: ES
              Three-Legged Without Phone Number Example:
                value:
                  idDocument: 66666666q
                  idDocumentType: passport
                  idDocumentExpiryDate: "2027-07-12"
                  name: Federica Sanchez Arjona
                  givenName: Federica
                  familyName: Sanchez Arjona
                  nameKanaHankaku: federica
                  nameKanaZenkaku: Ｆｅｄｅｒｉｃａ
                  middleNames: Sanchez
                  familyNameAtBirth: YYYY
                  address: Tokyo-to Chiyoda-ku Iidabashi 3-10-10
                  streetName: Nicolas Salmeron
                  streetNumber: "4"
                  postalCode: "1028460"
                  region: Tokyo
                  locality: ZZZZ
                  country: JP
                  houseNumberExtension: VVVV
                  birthdate: "1978-08-22"
                  email: abc@example.com
                  gender: OTHER
                  cityOfBirth: Madrid
                  countryOfBirth: ES
                  nationality: ES
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowYourCustomerMatchKYC_MatchResponse"
              examples:
                KYC_Match200Example:
                  value:
                    idDocumentMatch: "true"
                    idDocumentTypeMatch: "true"
                    idDocumentExpiryDateMatch: "true"
                    nameMatch: "true"
                    givenNameMatch: not_available
                    familyNameMatch: not_available
                    nameKanaHankakuMatch: "true"
                    nameKanaZenkakuMatch: "false"
                    middleNamesMatch: "true"
                    familyNameAtBirthMatch: "false"
                    familyNameAtBirthMatchScore: 90
                    addressMatch: "true"
                    streetNameMatch: "true"
                    streetNumberMatch: "true"
                    postalCodeMatch: "true"
                    regionMatch: "true"
                    localityMatch: not_available
                    countryMatch: "true"
                    houseNumberExtensionMatch: not_available
                    birthdateMatch: "false"
                    emailMatch: "false"
                    emailMatchScore: 87
                    genderMatch: "false"
                    cityOfBirthMatch: "false"
                    cityOfBirthMatchScore: 86
                    countryOfBirthMatch: "true"
                    nationalityMatch: "true"
        "400":
          $ref: "#/components/responses/KnowYourCustomerMatchGeneric400"
        "401":
          $ref: "#/components/responses/KnowYourCustomerMatchGeneric401"
        "403":
          $ref: "#/components/responses/KnowYourCustomerMatchGeneric403"
        "404":
          $ref: "#/components/responses/KnowYourCustomerMatchGeneric404"
        "422":
          $ref: "#/components/responses/KnowYourCustomerMatchGeneric422"
  /tenure/check-tenure:
    post:
      tags:
        - Tenure
      summary: The KYC Tenure service API
      description: |
        Verifies a specified length of tenure, based on a provided date, for a network subscriber to establish a level of trust for the network subscription identifier.
      security:
        - openId:
            - kyc-tenure:check-tenure
      operationId: Tenure_checkTenure
      parameters:
        - in: header
          name: x-correlator
          description: Correlation id for the different services
          required: false
          schema:
            $ref: "#/components/schemas/TenureXCorrelator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenureTenure"
      responses:
        "200":
          description: Respond with tenure information
          headers:
            x-correlator:
              $ref: "#/components/headers/TenureX-Correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenureTenureInfo"
        "400":
          $ref: "#/components/responses/TenureGeneric400"
        "401":
          $ref: "#/components/responses/TenureGeneric401"
        "403":
          $ref: "#/components/responses/TenureGeneric403"
        "404":
          $ref: "#/components/responses/TenureGeneric404"
        "422":
          $ref: "#/components/responses/TenureGeneric422"
  /numberrecycling/check:
    post:
      security:
        - openId:
            - number-recycling:check
      tags:
        - NumberRecycling
      summary: Check whether the subscriber of the phone number has changed.
      description: Check whether the subscriber of the phone number has changed.
      operationId: NumberRecycling_checkNumberRecycling
      parameters:
        - $ref: "#/components/parameters/NumberRecyclingx-correlator"
      requestBody:
        description: |
          Check whether the subscriber of the phone number has changed.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NumberRecyclingCreateCheckNumRecycling"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/NumberRecyclingGeneric200"
        "400":
          $ref: "#/components/responses/NumberRecyclingGeneric400"
        "401":
          $ref: "#/components/responses/NumberRecyclingGeneric401"
        "403":
          $ref: "#/components/responses/NumberRecyclingGeneric403"
        "404":
          $ref: "#/components/responses/NumberRecyclingGeneric404"
        "422":
          $ref: "#/components/responses/NumberRecyclingGeneric422"
  /otpvalidation/send-code:
    post:
      tags:
        - OTPValidation
      summary: Sends a message including an OTP code to the given phone number
      description: Sends an SMS with the desired message and an OTP code to the received phone number.
      operationId: OTPValidation_sendCode
      parameters:
        - $ref: "#/components/parameters/OTPValidationx-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OTPValidationSendCodeBody"
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/OTPValidationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPValidationSendCodeResponse"
        "400":
          $ref: "#/components/responses/OTPValidationGeneric400"
        "401":
          $ref: "#/components/responses/OTPValidationGeneric401"
        "403":
          $ref: "#/components/responses/OTPValidationSendCodeForbiddenError403"
        "404":
          $ref: "#/components/responses/OTPValidationGeneric404"
        "429":
          $ref: "#/components/responses/OTPValidationGeneric429"
      security:
        - openId:
            - one-time-password-sms:send-validate
  /otpvalidation/validate-code:
    post:
      tags:
        - OTPValidation
      summary: Verifies the OTP received as input
      description: Verifies the code is valid for the received authenticationId
      operationId: OTPValidation_validateCode
      parameters:
        - $ref: "#/components/parameters/OTPValidationx-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OTPValidationValidateCodeBody"
        required: true
      responses:
        "204":
          description: The OTP was successfully validated
          headers:
            x-correlator:
              $ref: "#/components/headers/OTPValidationx-correlator"
        "400":
          $ref: "#/components/responses/OTPValidationValidateCodeBadRequestError400"
        "401":
          $ref: "#/components/responses/OTPValidationGeneric401"
        "403":
          $ref: "#/components/responses/OTPValidationGeneric403"
        "404":
          $ref: "#/components/responses/OTPValidationGeneric404"
        "429":
          $ref: "#/components/responses/OTPValidationGeneric429"
      security:
        - openId:
            - one-time-password-sms:send-validate
  /callforwardingsignal/unconditional-call-forwardings:
    post:
      tags:
        - CallForwardingSignal
      security:
        - openId:
            - call-forwarding-signal:unconditional-call-forwardings:read
      summary: Retrieve the information about the status of the unconditional call forwarding service on a phone number (PhoneNumber)
      description: This endpoint provides information about the status of the unconditional call forwarding, being active or not.
      operationId: CallForwardingSignal_retrieveUnconditionalCallForwarding
      parameters:
        - $ref: "#/components/parameters/CallForwardingSignalx-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallForwardingSignalCreateCallForwardingSignal"
        required: true
      responses:
        "200":
          description: OK.
          headers:
            x-correlator:
              $ref: "#/components/headers/CallForwardingSignalx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallForwardingSignalUnconditionalCallForwardingSignal"
        "400":
          $ref: "#/components/responses/CallForwardingSignalGeneric400"
        "401":
          $ref: "#/components/responses/CallForwardingSignalGeneric401"
        "403":
          $ref: "#/components/responses/CallForwardingSignalGeneric403"
        "404":
          $ref: "#/components/responses/CallForwardingSignalGeneric404"
        "422":
          $ref: "#/components/responses/CallForwardingSignalGeneric422"
        "429":
          $ref: "#/components/responses/CallForwardingSignalGeneric429"
  /callforwardingsignal/call-forwardings:
    post:
      tags:
        - CallForwardingSignal
      security:
        - openId:
            - call-forwarding-signal:call-forwardings:read
      summary: Retrieve the information about the type of call forwarding service active on a phone number (PhoneNumber)
      description: This endpoint provides information about which type of call forwarding service is active. More than one service can be active, e.g. conditional and unconditional. This endpoint exceeds the main scope of the Call Forwarding Signal API, for this reason an error code 501 can be returned.
      operationId: CallForwardingSignal_retrieveCallForwarding
      parameters:
        - $ref: "#/components/parameters/CallForwardingSignalx-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallForwardingSignalCreateCallForwardingSignal"
        required: true
      responses:
        "200":
          description: OK.
          headers:
            x-correlator:
              $ref: "#/components/headers/CallForwardingSignalx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallForwardingSignalCallForwardingSignal"
        "400":
          $ref: "#/components/responses/CallForwardingSignalGeneric400"
        "401":
          $ref: "#/components/responses/CallForwardingSignalGeneric401"
        "403":
          $ref: "#/components/responses/CallForwardingSignalGeneric403"
        "404":
          $ref: "#/components/responses/CallForwardingSignalGeneric404"
        "422":
          $ref: "#/components/responses/CallForwardingSignalGeneric422"
        "429":
          $ref: "#/components/responses/CallForwardingSignalGeneric429"
        "501":
          $ref: "#/components/responses/CallForwardingSignalGeneric501"
  /devicelocation/subscriptions:
    post:
      tags:
        - DeviceLocation
      summary: Create a geofencing subscription for a device
      description: Create a subscription for a device to receive notifications when the device enters or exits a specified area.
      operationId: DeviceLocation_createGeofencingSubscription
      parameters:
        - $ref: "#/components/parameters/DeviceLocationx-correlator"
      security:
        - openId:
            - geofencing-subscriptions:org.camaraproject.geofencing-subscriptions.v0.area-entered:create
            - geofencing-subscriptions:org.camaraproject.geofencing-subscriptions.v0.area-left:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
            examples:
              CIRCLE_AREA_ENTERED:
                $ref: "#/components/examples/DeviceLocationREQUEST_CIRCLE_AREA_ENTERED"
              REQUEST_CIRCLE_AREA_ENTERED_MULTIPLE_IDENTIFIERS:
                $ref: "#/components/examples/DeviceLocationREQUEST_CIRCLE_AREA_ENTERED_MULTIPLE_IDENTIFIERS"
        required: true
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: notifications callback
              description: |
                Important: This endpoint is to be implemented by the API consumer.
                The Geofencing server will call this endpoint whenever a Geofencing event occurs.
                The `operationId` value will have to be replaced accordingly with WG API specific semantics.
              operationId: DeviceLocation_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/DeviceLocationx-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/DeviceLocationCloudEvent"
                    examples:
                      CIRCLE_AREA_ENTERED:
                        $ref: "#/components/examples/DeviceLocationCIRCLE_AREA_ENTERED"
                      CIRCLE_AREA_LEFT:
                        $ref: "#/components/examples/DeviceLocationCIRCLE_AREA_LEFT"
                      SUBSCRIPTION_STARTED:
                        $ref: "#/components/examples/DeviceLocationSUBSCRIPTION_STARTED"
                      SUBSCRIPTION_UPDATED:
                        $ref: "#/components/examples/DeviceLocationSUBSCRIPTION_UPDATED"
                      SUBSCRIPTION_ENDED:
                        $ref: "#/components/examples/DeviceLocationSUBSCRIPTION_ENDED"
                      SUBSCRIPTION_UNPROCESSABLE:
                        $ref: "#/components/examples/DeviceLocationSUBSCRIPTION_UNPROCESSABLE"
              responses:
                "204":
                  description: Successful notification.
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/DeviceLocationx-correlator"
                "400":
                  $ref: "#/components/responses/DeviceLocationGeneric400"
                "401":
                  $ref: "#/components/responses/DeviceLocationGeneric401"
                "403":
                  $ref: "#/components/responses/DeviceLocationGeneric403"
                "410":
                  $ref: "#/components/responses/DeviceLocationGeneric410"
                "429":
                  $ref: "#/components/responses/DeviceLocationGeneric429"
              security:
                - notificationsBearerAuth: []
                - {}
      responses:
        "201":
          description: Created (Successful creation of subscription).
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLocationSubscription"
        "202":
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLocationSubscriptionAsync"
        "400":
          $ref: "#/components/responses/DeviceLocationCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/DeviceLocationGeneric401"
        "403":
          $ref: "#/components/responses/DeviceLocationGeneric403"
        "422":
          $ref: "#/components/responses/DeviceLocationCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/DeviceLocationGeneric429"
    get:
      tags:
        - DeviceLocation
      summary: Retrieve a list of geofencing event subscription
      description: Retrieve a list of geofencing event subscription(s).
      operationId: DeviceLocation_retrieveGeofencingSubscriptionList
      parameters:
        - $ref: "#/components/parameters/DeviceLocationx-correlator"
      security:
        - openId:
            - geofencing-subscriptions:read
      responses:
        "200":
          description: List of event subscription details.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/DeviceLocationSubscription"
        "400":
          $ref: "#/components/responses/DeviceLocationGeneric400"
        "401":
          $ref: "#/components/responses/DeviceLocationGeneric401"
        "403":
          $ref: "#/components/responses/DeviceLocationGeneric403"
  /devicelocation/subscriptions/{subscriptionId}:
    get:
      tags:
        - DeviceLocation
      summary: Operation to retrieve a subscription based on the provided ID
      description: Retrieve Geofencing subscription information for a given subscription ID.
      operationId: DeviceLocation_retrieveGeofencingSubscription
      security:
        - openId:
            - geofencing-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/DeviceLocationSubscriptionId"
        - $ref: "#/components/parameters/DeviceLocationx-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLocationSubscription"
        "400":
          $ref: "#/components/responses/DeviceLocationSubscriptionIdRequired"
        "401":
          $ref: "#/components/responses/DeviceLocationGeneric401"
        "403":
          $ref: "#/components/responses/DeviceLocationGeneric403"
        "404":
          $ref: "#/components/responses/DeviceLocationGeneric404"
    delete:
      tags:
        - DeviceLocation
      summary: Delete a Geofencing event subscription
      operationId: DeviceLocation_deleteGeofencingSubscription
      description: Delete a given Geofencing subscription.
      security:
        - openId:
            - geofencing-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/DeviceLocationSubscriptionId"
        - $ref: "#/components/parameters/DeviceLocationx-correlator"
      responses:
        "202":
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLocationSubscriptionAsync"
        "204":
          description: Geofencing subscription deleted.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceLocationx-correlator"
        "400":
          $ref: "#/components/responses/DeviceLocationSubscriptionIdRequired"
        "401":
          $ref: "#/components/responses/DeviceLocationGeneric401"
        "403":
          $ref: "#/components/responses/DeviceLocationGeneric403"
        "404":
          $ref: "#/components/responses/DeviceLocationGeneric404"
  /populationdensitydata/retrieve:
    post:
      tags:
        - PopulationDensityData
      summary: Retrieves population density information in a specified area
      description: Retrieves population density estimation together with the estimation range related for a time slot for a given area (described as a polygon) as a data set consisting of a sequence of equally-sized objects covering the input polygon area.
      operationId: PopulationDensityData_retrievePopulationDensity
      parameters:
        - $ref: "#/components/parameters/PopulationDensityDatax-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PopulationDensityDataPopulationDensityRequest"
            example:
              area:
                areaType: POLYGON
                boundary:
                  - latitude: 45.754114
                    longitude: 4.860374
                  - latitude: 45.753845
                    longitude: 4.863185
                  - latitude: 45.75249
                    longitude: 4.861876
                  - latitude: 45.751224
                    longitude: 4.861125
                  - latitude: 45.751442
                    longitude: 4.859827
              startTime: "2024-04-23T14:44:18.165Z"
              endTime: "2024-04-23T14:44:18.165Z"
              precision: 7
        required: true
      callbacks:
        populationDensityDataCallback:
          "{$request.body#/sink}":
            post:
              tags:
                - Population Density Data
              summary: Population Density Data callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The Population Density Data server will call this endpoint when the request result is ready.
              operationId: PopulationDensityData_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/PopulationDensityDatax-correlator"
              requestBody:
                description: Population density data result.
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/PopulationDensityDataPopulationDensityAsyncResponse"
                    examples:
                      PopulationDensitySupportedAreaAsyncResponseExample:
                        $ref: "#/components/examples/PopulationDensityDataPopulationDensitySupportedAreaAsyncResponseExample"
                      PopulationDensityAreaNotSupportedAsyncResponseExample:
                        $ref: "#/components/examples/PopulationDensityDataPopulationDensityAreaNotSupportedAsyncResponseExample"
                      PopulationDensityPartOfAreaNotSupportedAsyncResponseExample:
                        $ref: "#/components/examples/PopulationDensityDataPopulationDensityPartOfAreaNotSupportedAsyncResponseExample"
                      PopulationDensityOperationNotCompletedExample:
                        $ref: "#/components/examples/PopulationDensityDataPopulationDensityOperationNotCompletedExample"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/PopulationDensityDatax-correlator"
                "400":
                  $ref: "#/components/responses/PopulationDensityDataGeneric400"
                "401":
                  $ref: "#/components/responses/PopulationDensityDataGeneric401"
                "403":
                  $ref: "#/components/responses/PopulationDensityDataGeneric403"
                "410":
                  $ref: "#/components/responses/PopulationDensityDataGeneric410"
                "429":
                  $ref: "#/components/responses/PopulationDensityDataGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "200":
          description: Population density data result.
          headers:
            x-correlator:
              $ref: "#/components/headers/PopulationDensityDatax-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopulationDensityDataPopulationDensityResponse"
              examples:
                PopulationDensitySupportedAreaResponseExample:
                  $ref: "#/components/examples/PopulationDensityDataPopulationDensitySupportedAreaResponseExample"
                PopulationDensityAreaNotSupportedResponseExample:
                  $ref: "#/components/examples/PopulationDensityDataPopulationDensityAreaNotSupportedResponseExample"
                PopulationDensityPartOfAreaNotSupportedResponseExample:
                  $ref: "#/components/examples/PopulationDensityDataPopulationDensityPartOfAreaNotSupportedResponseExample"
        "202":
          description: Population density data requested. This response is returned when the behaviour of the API is asynchronous.
          headers:
            x-correlator:
              $ref: "#/components/headers/PopulationDensityDatax-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopulationDensityDataAcceptedAsyncResponse"
        "400":
          $ref: "#/components/responses/PopulationDensityDataRetrieveLocationBadRequest400"
        "401":
          $ref: "#/components/responses/PopulationDensityDataGeneric401"
        "403":
          $ref: "#/components/responses/PopulationDensityDataGeneric403"
        "404":
          $ref: "#/components/responses/PopulationDensityDataGeneric404"
        "422":
          $ref: "#/components/responses/PopulationDensityDataRetrieveLocationUnprocessableContent422"
        "429":
          $ref: "#/components/responses/PopulationDensityDataGeneric429"
      security:
        - openId:
            - population-density-data:read
  /regiondevicecount/count:
    post:
      tags:
        - RegionDeviceCount
      summary: API operation to get the device count in the specified area during a certain time interval.
      description: |
        Get the number of devices in the specified area during a certain time interval.
        - The query area can be a circle or a polygon composed of longitude and latitude points.
        - If the areaType is circle, the circleCenter and circleRadius must be provided; if the area is a polygon, the point list must be provided.
        - If starttime and endtime are not passed in,this api should return the current number of devices in the area.
        - If the device appears in the specified area at least once during the certain time interval, it should be counted.
      operationId: RegionDeviceCount_count
      parameters:
        - $ref: "#/components/parameters/RegionDeviceCountx-correlator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionDeviceCountRegionDeviceCountRequestBody"
            examples:
              LOCATION_CIRCLE:
                $ref: "#/components/examples/RegionDeviceCountRETRIEVAL_CIRCLE"
              LOCATION_POLYGON:
                $ref: "#/components/examples/RegionDeviceCountRETRIEVAL_POLYGON"
        required: true
      callbacks:
        regionDeviceCountCallback:
          "{$request.body#/sink}":
            post:
              tags:
                - Region Device Count
              summary: Region Device Count Callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The Region Device Count server will call this endpoint when the request result is ready.
              operationId: RegionDeviceCount_callback_postRegionDeviceCountNotification
              parameters:
                - $ref: "#/components/parameters/RegionDeviceCountx-correlator"
              requestBody:
                description: Region device count result.
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/RegionDeviceCountRegionDeviceCountResponse"
                    examples:
                      SUPPORTED_AREA:
                        $ref: "#/components/examples/RegionDeviceCountSUPPORTED_AREA"
                      PART_OF_AREA_NOT_SUPPORTED:
                        $ref: "#/components/examples/RegionDeviceCountPART_OF_AREA_NOT_SUPPORTED"
                      AREA_NOT_SUPPORTED:
                        $ref: "#/components/examples/RegionDeviceCountAREA_NOT_SUPPORTED"
                      DENSITY_BELOW_PRIVACY_THRESHOLD:
                        $ref: "#/components/examples/RegionDeviceCountDENSITY_BELOW_PRIVACY_THRESHOLD"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/RegionDeviceCountx-correlator"
                "400":
                  $ref: "#/components/responses/RegionDeviceCountGeneric400"
                "401":
                  $ref: "#/components/responses/RegionDeviceCountGeneric401"
                "403":
                  $ref: "#/components/responses/RegionDeviceCountGeneric403"
                "410":
                  $ref: "#/components/responses/RegionDeviceCountGeneric410"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/RegionDeviceCountx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionDeviceCountRegionDeviceCountResponse"
              examples:
                SUPPORTED_AREA:
                  $ref: "#/components/examples/RegionDeviceCountSUPPORTED_AREA"
                PART_OF_AREA_NOT_SUPPORTED:
                  $ref: "#/components/examples/RegionDeviceCountPART_OF_AREA_NOT_SUPPORTED"
                AREA_NOT_SUPPORTED:
                  $ref: "#/components/examples/RegionDeviceCountAREA_NOT_SUPPORTED"
                DENSITY_BELOW_PRIVACY_THRESHOLD:
                  $ref: "#/components/examples/RegionDeviceCountDENSITY_BELOW_PRIVACY_THRESHOLD"
        "400":
          $ref: "#/components/responses/RegionDeviceCountGeneric400"
        "401":
          $ref: "#/components/responses/RegionDeviceCountGeneric401"
        "403":
          $ref: "#/components/responses/RegionDeviceCountGeneric403"
        "429":
          $ref: "#/components/responses/RegionDeviceCountGeneric429"
      security:
        - openId:
            - region-device-count:count
  /webrtc/sessions:
    post:
      tags:
        - WebRTC
      summary: Creates voice and/or video session
      description: Creates a voice and/or video session
      operationId: WebRTC_createSession
      parameters:
        - $ref: "#/components/parameters/WebRTCx-correlator"
        - $ref: "#/components/parameters/WebRTChdrRegistrationId"
      security:
        - openId:
            - webrtc-call-handling:sessions:create
      requestBody:
        description: Provide the information required for session creation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebRTCMediaSessionInformation"
            examples:
              Media session request:
                $ref: "#/components/examples/WebRTCexampleMediaSessionRequest"
      responses:
        "201":
          description: Created
          headers:
            x-correlator:
              $ref: "#/components/headers/WebRTCx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebRTCMediaSessionInformation"
              examples:
                SessionCreated:
                  $ref: "#/components/examples/WebRTCexampleMediaSessionResponse"
        "400":
          $ref: "#/components/responses/WebRTCGeneric400"
        "401":
          $ref: "#/components/responses/WebRTCGeneric401"
        "403":
          $ref: "#/components/responses/WebRTCGeneric403"
  /webrtc/sessions/{mediaSessionId}:
    get:
      tags:
        - WebRTC
      summary: Get the media session information
      description: |
        Get the media Session description based on `mediaSessionId`.

        ** The client shall construct the API path using the `mediaSessionId` supplied
        in the session creation response (origination) or in the invitation notification
        (termination). **
      operationId: WebRTC_getSessionDetailsById
      parameters:
        - $ref: "#/components/parameters/WebRTCx-correlator"
        - $ref: "#/components/parameters/WebRTCpathParamMediaSessionId"
      security:
        - openId:
            - webrtc-call-handling:sessions:read
      responses:
        "200":
          description: A session information
          headers:
            x-correlator:
              $ref: "#/components/headers/WebRTCx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebRTCMediaSessionInformation"
        "400":
          $ref: "#/components/responses/WebRTCGeneric400"
        "401":
          $ref: "#/components/responses/WebRTCGeneric401"
        "403":
          $ref: "#/components/responses/WebRTCGeneric403"
        "404":
          $ref: "#/components/responses/WebRTCGeneric404"
    delete:
      tags:
        - WebRTC
      summary: Cancel or Terminate the media session
      description: |
        Cancel a 1-1 media session (as originator),
        Decline a 1-1 media session (as receiver),
        Terminate a 1-1 an ongoing media session
        ** The client shall construct the API path using the mediaSessionId supplied in the session creation response (origination) or in the invitation notification (termination). **'
      operationId: WebRTC_deleteSessionById
      parameters:
        - $ref: "#/components/parameters/WebRTCx-correlator"
        - $ref: "#/components/parameters/WebRTCpathParamMediaSessionId"
      security:
        - openId:
            - webrtc-call-handling:sessions:delete
      responses:
        "204":
          description: Session deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/WebRTCx-correlator"
        "400":
          $ref: "#/components/responses/WebRTCGeneric400"
        "401":
          $ref: "#/components/responses/WebRTCGeneric401"
        "403":
          $ref: "#/components/responses/WebRTCGeneric403"
        "404":
          $ref: "#/components/responses/WebRTCGeneric404"
  /webrtc/sessions/{mediaSessionId}/status:
    put:
      tags:
        - WebRTC
      summary: Update the status of the media session
      description: |
        Update the status of the media session, this may include updating SDP media

        The API consumer shall construct the API path using the `mediaSessionId` supplied in the session creation response (origination) or in the invitation notification (termination).
      operationId: WebRTC_updateSessionStatus
      parameters:
        - $ref: "#/components/parameters/WebRTCx-correlator"
        - $ref: "#/components/parameters/WebRTCpathParamMediaSessionId"
      security:
        - openId:
            - webrtc-call-handling:sessions:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebRTCMediaSessionInformation"
            examples:
              Update inProgress (update media candidates):
                $ref: "#/components/examples/WebRTCexampleSessionStatus183InProgress"
              Update ringing (device user endpoint is ringing):
                $ref: "#/components/examples/WebRTCexampleSessionStatus180Ringing"
              Update connected (call is established):
                $ref: "#/components/examples/WebRTCexampleSessionStatus200Connected"
              Update hold (call has been placed on call waiting mode):
                $ref: "#/components/examples/WebRTCexampleSessionStatusHold"
              Update resume (call has been resumed):
                $ref: "#/components/examples/WebRTCexampleSessionStatusResume"
      responses:
        "200":
          description: |
            Updated the session status (with SDP data).
            It will confirm the status defined on the PUT operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebRTCMediaSessionInformation"
              examples:
                Update inProgress (update media candidates):
                  $ref: "#/components/examples/WebRTCexampleSessionStatus183InProgress"
                Update ringing (device user endpoint is ringing):
                  $ref: "#/components/examples/WebRTCexampleSessionStatus180Ringing"
                Update connected (call is established):
                  $ref: "#/components/examples/WebRTCexampleSessionStatus200Connected"
                Update hold (call has been placed on call waiting mode):
                  $ref: "#/components/examples/WebRTCexampleSessionStatusHold"
                Update resume (call has been resumed):
                  $ref: "#/components/examples/WebRTCexampleSessionStatusResume"
        "204":
          description: Updated the session status (no content)
        "400":
          $ref: "#/components/responses/WebRTCGeneric400"
        "401":
          $ref: "#/components/responses/WebRTCGeneric401"
        "403":
          $ref: "#/components/responses/WebRTCGeneric403"
        "404":
          $ref: "#/components/responses/WebRTCGeneric404"
  /connectivityinsights/subscriptions:
    post:
      tags:
        - ConnectivityInsights
      description: Create a Connectivity insights subscription for a device
      summary: Create a Connectivity insights subscription for a device
      operationId: ConnectivityInsights_createSubscription
      parameters:
        - $ref: "#/components/parameters/ConnectivityInsightsx-correlator"
      security:
        - openId:
            - connectivity-insights-subscriptions:org.camaraproject.connectivity-insights-subscriptions.v0.network-quality:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectivityInsightsSubscriptionRequest"
        required: true
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: Subscription notification callback
              description: |
                Important: this endpoint is to be implemented by the API
                consumer.The Connectivity Insights server will call this
                endpoint whenever a connectivity event occurs that changes
                the network's ability to meet the application's demands for
                a given device.
              operationId: ConnectivityInsights_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/ConnectivityInsightsx-correlator"
              requestBody:
                required: true
                content:
                  "application/cloudevents+json:":
                    schema:
                      $ref: "#/components/schemas/ConnectivityInsightsCloudEvent"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/ConnectivityInsightsx-correlator"
                "400":
                  $ref: "#/components/responses/ConnectivityInsightsGeneric400"
                "401":
                  $ref: "#/components/responses/ConnectivityInsightsGeneric401"
                "403":
                  $ref: "#/components/responses/ConnectivityInsightsGeneric403"
                "410":
                  $ref: "#/components/responses/ConnectivityInsightsGeneric410"
                "429":
                  $ref: "#/components/responses/ConnectivityInsightsGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "201":
          description: Created
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInsightsSubscription"
        "202":
          description: |
            Request accepted to be processed. It applies for async
            creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInsightsSubscriptionAsync"
        "400":
          $ref: "#/components/responses/ConnectivityInsightsCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/ConnectivityInsightsGeneric401"
        "403":
          $ref: "#/components/responses/ConnectivityInsightsSubscriptionPermissionDenied403"
        "409":
          $ref: "#/components/responses/ConnectivityInsightsGeneric409"
        "422":
          $ref: "#/components/responses/ConnectivityInsightsCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/ConnectivityInsightsGeneric429"
    get:
      tags:
        - ConnectivityInsights
      summary: Retrieve a list of apiName event subscription
      operationId: ConnectivityInsights_getSubscriptionList
      description: |
        Operation to list subscriptions authorized to be retrieved by the
        provided access token.
      parameters:
        - $ref: "#/components/parameters/ConnectivityInsightsx-correlator"
      security:
        - openId:
            - connectivity-insights-subscriptions:read
      responses:
        "200":
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/ConnectivityInsightsSubscription"
        "400":
          $ref: "#/components/responses/ConnectivityInsightsGeneric400"
        "401":
          $ref: "#/components/responses/ConnectivityInsightsGeneric401"
        "403":
          $ref: "#/components/responses/ConnectivityInsightsGeneric403"
  /connectivityinsights/subscriptions/{subscriptionId}:
    get:
      tags:
        - ConnectivityInsights
      summary: Operation to retrieve a subscription based on the provided ID
      operationId: ConnectivityInsights_getSubscription
      description: Retrieve a given subscription by ID
      security:
        - openId:
            - connectivity-insights-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/ConnectivityInsightsSubscriptionId"
        - $ref: "#/components/parameters/ConnectivityInsightsx-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInsightsSubscription"
        "400":
          $ref: "#/components/responses/ConnectivityInsightsSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/ConnectivityInsightsGeneric401"
        "403":
          $ref: "#/components/responses/ConnectivityInsightsGeneric403"
        "404":
          $ref: "#/components/responses/ConnectivityInsightsGeneric404"
    delete:
      tags:
        - ConnectivityInsights
      summary: Operation to delete a subscription
      operationId: ConnectivityInsights_deleteSubscription
      description: Delete a given subscription by ID
      security:
        - openId:
            - connectivity-insights-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/ConnectivityInsightsSubscriptionId"
        - $ref: "#/components/parameters/ConnectivityInsightsx-correlator"
      responses:
        "202":
          description: |
            Request accepted to be processed. It applies for async deletion
            process.
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectivityInsightsSubscriptionAsync"
        "204":
          description: apiName subscription deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectivityInsightsx-correlator"
        "400":
          $ref: "#/components/responses/ConnectivityInsightsSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/ConnectivityInsightsGeneric401"
        "403":
          $ref: "#/components/responses/ConnectivityInsightsGeneric403"
        "404":
          $ref: "#/components/responses/ConnectivityInsightsGeneric404"
  /qualityondemand/retrieve-qos-profiles:
    post:
      tags:
        - QualityOnDemand
      summary: Retrieve QoS profiles
      description: |
        Returns all QoS Profiles that match the given criteria.
        **NOTES:**
        - The access token may be either a 2-legged or 3-legged access token.
        - If the access token is 3-legged, all returned QoS Profiles will be available to the subject (device) associated with the access token.
        - If the access token is 2-legged and a device filter is provided, all returned QoS Profiles will be available to that device. If multiple device identifiers are provided within the device property, only QoS Profiles available to the device identifier chosen by the implementation will be returned, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
        - This call uses the POST method instead of GET to comply with the CAMARA Commonalities guidelines for sending sensitive or complex data in API calls. Since the device field may contain personally identifiable information, it should not be sent via GET. Additionally, this call may include complex data structures.
          [CAMARA API Design Guidelines](https://github.com/camaraproject/Commonalities/blob/r3.3/documentation/API-design-guidelines.md#post-or-get-for-transferring-sensitive-or-complex-data)
      security:
        - openId:
            - qos-profiles:read
      operationId: QualityOnDemand_retrieveQoSProfiles
      parameters:
        - $ref: "#/components/parameters/QualityOnDemandx-correlator"
      requestBody:
        description: Parameters to query QoS Profiles for a given device
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QualityOnDemandQosProfileDeviceRequest"
        required: true
      responses:
        "200":
          description: Contains information about QoS Profiles
          headers:
            x-correlator:
              $ref: "#/components/headers/QualityOnDemandx-correlator"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QualityOnDemandQosProfile"
              examples:
                List of QoS Profiles:
                  $ref: "#/components/examples/QualityOnDemandLIST_OF_QOS_PROFILES"
        "400":
          $ref: "#/components/responses/QualityOnDemandGeneric400"
        "401":
          $ref: "#/components/responses/QualityOnDemandGeneric401"
        "403":
          $ref: "#/components/responses/QualityOnDemandGeneric403"
        "404":
          $ref: "#/components/responses/QualityOnDemandGenericDevice404"
        "422":
          $ref: "#/components/responses/QualityOnDemandGeneric422"
        "429":
          $ref: "#/components/responses/QualityOnDemandGeneric429"
  /qualityondemand/qos-profiles/{name}:
    get:
      tags:
        - QualityOnDemand
      summary: Get QoS Profile for a given name
      operationId: QualityOnDemand_getQosProfile
      description: |
        Returns a QoS Profile that matches the given name.

        The access token may be either a 2-legged or 3-legged access token. If the access token is 3-legged, a QoS Profile is only returned if available to all subjects associated with the access token.
      security:
        - openId:
            - qos-profiles:read
      parameters:
        - name: name
          in: path
          description: Qos Profile name
          required: true
          schema:
            $ref: "#/components/schemas/QualityOnDemandQosProfileName"
        - $ref: "#/components/parameters/QualityOnDemandx-correlator"
      responses:
        "200":
          description: Contains information about QoS Profiles
          headers:
            x-correlator:
              $ref: "#/components/headers/QualityOnDemandx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QualityOnDemandQosProfile"
        "400":
          $ref: "#/components/responses/QualityOnDemandGeneric400"
        "401":
          $ref: "#/components/responses/QualityOnDemandGeneric401"
        "403":
          $ref: "#/components/responses/QualityOnDemandGeneric403"
        "404":
          $ref: "#/components/responses/QualityOnDemandGeneric404"
        "429":
          $ref: "#/components/responses/QualityOnDemandGeneric429"
  /deviceidentifier/retrieve-identifier:
    post:
      summary: Get details about the specific device being used by a given mobile subscriber
      description: Get details about the specific device being used by a given mobile subscriber
      operationId: DeviceIdentifier_retrieveIdentifier
      tags:
        - DeviceIdentifier
      security:
        - openId:
            - device-identifier:retrieve-identifier
      parameters:
        - $ref: "#/components/parameters/DeviceIdentifierx-correlator"
      requestBody:
        description: Parameters to create a new session
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceIdentifierRequestBody"
            examples:
              Identify Device By 3-Legged Access Token:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceBy3LeggedToken"
              Identify Device By Phone Number:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByPhoneNumber"
              Identify Device By IP Address:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByIPAddress"
              Identify Device By Multiple Identifiers:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByMultipleIdentifiers"
      responses:
        "200":
          $ref: "#/components/responses/DeviceIdentifier200RetrieveIdentifier"
        "400":
          $ref: "#/components/responses/DeviceIdentifier400BadRequest"
        "401":
          $ref: "#/components/responses/DeviceIdentifier401Unauthorized"
        "403":
          $ref: "#/components/responses/DeviceIdentifier403Forbidden"
        "404":
          $ref: "#/components/responses/DeviceIdentifier404NotFound"
        "422":
          $ref: "#/components/responses/DeviceIdentifier422UnprocessableContent"
        "429":
          $ref: "#/components/responses/DeviceIdentifier429TooManyRequests"
  /deviceidentifier/retrieve-type:
    post:
      summary: Get details about the type of device being used by a given mobile subscriber
      description: Get details about the type of device being used by a given mobile subscriber
      operationId: DeviceIdentifier_retrieveType
      tags:
        - DeviceIdentifier
      security:
        - openId:
            - device-identifier:retrieve-type
      parameters:
        - $ref: "#/components/parameters/DeviceIdentifierx-correlator"
      requestBody:
        description: Parameters to create a new session
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceIdentifierRequestBody"
            examples:
              Identify Device By 3-Legged Access Token:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceBy3LeggedToken"
              Identify Device By Phone Number:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByPhoneNumber"
              Identify Device By IP Address:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByIPAddress"
              Identify Device By Multiple Identifiers:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByMultipleIdentifiers"
      responses:
        "200":
          $ref: "#/components/responses/DeviceIdentifier200RetrieveType"
        "400":
          $ref: "#/components/responses/DeviceIdentifier400BadRequest"
        "401":
          $ref: "#/components/responses/DeviceIdentifier401Unauthorized"
        "403":
          $ref: "#/components/responses/DeviceIdentifier403Forbidden"
        "404":
          $ref: "#/components/responses/DeviceIdentifier404NotFound"
        "422":
          $ref: "#/components/responses/DeviceIdentifier422UnprocessableContent"
        "429":
          $ref: "#/components/responses/DeviceIdentifier429TooManyRequests"
  /deviceidentifier/retrieve-ppid:
    post:
      summary: Get a pseudonymous identifier for device being used by a given mobile subscriber
      description: Get a pseudonymous identifier for device being used by a given mobile subscriber
      operationId: DeviceIdentifier_retrievePPID
      tags:
        - DeviceIdentifier
      security:
        - openId:
            - device-identifier:retrieve-ppid
      parameters:
        - $ref: "#/components/parameters/DeviceIdentifierx-correlator"
      requestBody:
        description: Parameters to identify the mobile subscription when a 2-legged access token is being used
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceIdentifierRequestBody"
            examples:
              Identify Device By 3-Legged Access Token:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceBy3LeggedToken"
              Identify Device By Phone Number:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByPhoneNumber"
              Identify Device By IP Address:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByIPAddress"
              Identify Device By Multiple Identifiers:
                $ref: "#/components/examples/DeviceIdentifierIdentifyDeviceByMultipleIdentifiers"
      responses:
        "200":
          $ref: "#/components/responses/DeviceIdentifier200RetrievePPID"
        "400":
          $ref: "#/components/responses/DeviceIdentifier400BadRequest"
        "401":
          $ref: "#/components/responses/DeviceIdentifier401Unauthorized"
        "403":
          $ref: "#/components/responses/DeviceIdentifier403Forbidden"
        "404":
          $ref: "#/components/responses/DeviceIdentifier404NotFound"
        "422":
          $ref: "#/components/responses/DeviceIdentifier422UnprocessableContent"
        "429":
          $ref: "#/components/responses/DeviceIdentifier429TooManyRequests"
  /simswap/subscriptions:
    post:
      tags:
        - SimSwap
      summary: Create a sim swap event subscription for a phone number
      description: Create a sim swap event subscription for a phone number
      operationId: SimSwap_createSimSwapSubscription
      parameters:
        - $ref: "#/components/parameters/SimSwapx-correlator"
      security:
        - openId:
            - sim-swap-subscriptions:org.camaraproject.sim-swap-subscriptions.v0.swapped:create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimSwapSubscriptionRequest"
            examples:
              SUBSCRIPTION_REQUEST:
                $ref: "#/components/examples/SimSwapSUBSCRIPTION_REQUEST"
              SUBSCRIPTION_REQUEST_3LEGS:
                $ref: "#/components/examples/SimSwapSUBSCRIPTION_REQUEST_3LEGS"
        required: true
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The sim swap server will call this endpoint whenever a swapped event occurs.
              operationId: SimSwap_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/SimSwapx-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/SimSwapCloudEvent"
                    examples:
                      SWAPPED:
                        $ref: "#/components/examples/SimSwapSWAPPED"
                      SUBSCRIPTION_ENDS:
                        $ref: "#/components/examples/SimSwapSUBSCRIPTION_ENDS"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/SimSwapx-correlator"
                "400":
                  $ref: "#/components/responses/SimSwapGeneric400"
                "401":
                  $ref: "#/components/responses/SimSwapGeneric401"
                "403":
                  $ref: "#/components/responses/SimSwapGeneric403"
                "410":
                  $ref: "#/components/responses/SimSwapGeneric410"
                "429":
                  $ref: "#/components/responses/SimSwapGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "201":
          description: Created
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimSwapSubscription"
              examples:
                SUBSCRIPTION_RESPONSE:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTION_RESPONSE"
                SUBSCRIPTION_RESPONSE_3LEGS:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTION_RESPONSE_3LEGS"
        "202":
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimSwapSubscriptionAsync"
        "400":
          $ref: "#/components/responses/SimSwapCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/SimSwapGeneric401"
        "403":
          $ref: "#/components/responses/SimSwapSubscriptionPermissionDenied403"
        "409":
          $ref: "#/components/responses/SimSwapGeneric409"
        "422":
          $ref: "#/components/responses/SimSwapCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/SimSwapGeneric429"
    get:
      tags:
        - SimSwap
      summary: Retrieve a list of sim swap event subscription
      description: Retrieve a list of sim swap event subscription(s)
      operationId: SimSwap_retrieveSubscriptionList
      parameters:
        - $ref: "#/components/parameters/SimSwapx-correlator"
      security:
        - openId:
            - sim-swap-subscriptions:read
      responses:
        "200":
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/SimSwapSubscription"
              examples:
                SUBSCRIPTIONS:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTIONS"
                SUBSCRIPTIONS_3LEGS:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTIONS_3LEGS"
        "400":
          $ref: "#/components/responses/SimSwapGeneric400"
        "401":
          $ref: "#/components/responses/SimSwapGeneric401"
        "403":
          $ref: "#/components/responses/SimSwapGeneric403"
  /simswap/subscriptions/{subscriptionId}:
    get:
      tags:
        - SimSwap
      summary: Retrieve a sim swap event subscription for a phone number
      description: retrieve event subscription information for a given subscription.
      operationId: SimSwap_retrieveSubscription
      security:
        - openId:
            - sim-swap-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/SimSwapSubscriptionId"
        - $ref: "#/components/parameters/SimSwapx-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimSwapSubscription"
              examples:
                SUBSCRIPTION:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTION_RESPONSE"
                SUBSCRIPTION_3LEGS:
                  $ref: "#/components/examples/SimSwapSUBSCRIPTION_RESPONSE_3LEGS"
        "400":
          $ref: "#/components/responses/SimSwapSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/SimSwapGeneric401"
        "403":
          $ref: "#/components/responses/SimSwapGeneric403"
        "404":
          $ref: "#/components/responses/SimSwapGeneric404"
    delete:
      tags:
        - SimSwap
      summary: Delete a sim swap event subscription
      operationId: SimSwap_deleteSubscription
      description: delete a  given event subscription.
      security:
        - openId:
            - sim-swap-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/SimSwapSubscriptionId"
        - $ref: "#/components/parameters/SimSwapx-correlator"
      responses:
        "202":
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimSwapSubscriptionAsync"
        "204":
          description: Sim swap notification subscription deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/SimSwapx-correlator"
        "400":
          $ref: "#/components/responses/SimSwapSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/SimSwapGeneric401"
        "403":
          $ref: "#/components/responses/SimSwapGeneric403"
        "404":
          $ref: "#/components/responses/SimSwapGeneric404"
  /deviceroamingstatus/subscriptions:
    post:
      tags:
        - DeviceRoamingStatus
      summary: Create a device roaming status event subscription for a device
      description: Create a device roaming status event subscription for a device
      operationId: DeviceRoamingStatus_createDeviceRoamingStatusSubscription
      parameters:
        - $ref: "#/components/parameters/DeviceRoamingStatusx-correlator"
      security:
        - openId:
            - device-roaming-status-subscriptions:org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status:create
            - device-roaming-status-subscriptions:org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on:create
            - device-roaming-status-subscriptions:org.camaraproject.device-roaming-status-subscriptions.v0.roaming-off:create
            - device-roaming-status-subscriptions:org.camaraproject.device-roaming-status-subscriptions.v0.roaming-change-country:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
            examples:
              Create Subscription:
                $ref: "#/components/examples/DeviceRoamingStatusCREATE_SUBSCRIPTION"
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The Device status server will call this endpoint whenever any device roaming status related event occurs.
              operationId: DeviceRoamingStatus_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/DeviceRoamingStatusx-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
                    examples:
                      roaming-status:
                        $ref: "#/components/examples/DeviceRoamingStatusROAMING_STATUS"
                      roaming-change-country:
                        $ref: "#/components/examples/DeviceRoamingStatusROAMING_CHANGE_COUNTRY"
                      roaming-on:
                        $ref: "#/components/examples/DeviceRoamingStatusROAMING_ON"
                      roaming-off:
                        $ref: "#/components/examples/DeviceRoamingStatusROAMING_OFF"
                      subscription-started:
                        $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_STARTED"
                      subscription-updated:
                        $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_UPDATED"
                      subscription-ended:
                        $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_ENDED"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
                "400":
                  $ref: "#/components/responses/DeviceRoamingStatusGeneric400"
                "401":
                  $ref: "#/components/responses/DeviceRoamingStatusGeneric401"
                "403":
                  $ref: "#/components/responses/DeviceRoamingStatusGeneric403"
                "410":
                  $ref: "#/components/responses/DeviceRoamingStatusGeneric410"
                "429":
                  $ref: "#/components/responses/DeviceRoamingStatusGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "201":
          description: Created
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/DeviceRoamingStatusACTIVE_SUBSCRIPTION"
                Active Subscription With Device Disambiguation:
                  $ref: "#/components/examples/DeviceRoamingStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION"
        "202":
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionAsync"
        "400":
          $ref: "#/components/responses/DeviceRoamingStatusCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceRoamingStatusSubscriptionPermissionDenied403"
        "409":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric409"
        "422":
          $ref: "#/components/responses/DeviceRoamingStatusCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric429"
    get:
      tags:
        - DeviceRoamingStatus
      summary: Retrieve a list of device roaming status event subscription
      description: Retrieve a list of device roaming status event subscription(s)
      operationId: DeviceRoamingStatus_retrieveDeviceRoamingStatusSubscriptionList
      parameters:
        - $ref: "#/components/parameters/DeviceRoamingStatusx-correlator"
      security:
        - openId:
            - device-roaming-status-subscriptions:read
      responses:
        "200":
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
              examples:
                List of Subscriptions:
                  $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_LIST"
                Empty List of Subscriptions:
                  $ref: "#/components/examples/DeviceRoamingStatusEMPTY_SUBSCRIPTION_LIST"
        "400":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric400"
        "401":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric403"
  /deviceroamingstatus/subscriptions/{subscriptionId}:
    get:
      tags:
        - DeviceRoamingStatus
      summary: Retrieve a roaming status event subscription for a device
      description: retrieve device roaming status subscription information for a given subscription.
      operationId: DeviceRoamingStatus_retrieveDeviceRoamingStatusSubscription
      security:
        - openId:
            - device-roaming-status-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/DeviceRoamingStatusSubscriptionId"
        - $ref: "#/components/parameters/DeviceRoamingStatusx-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/DeviceRoamingStatusACTIVE_SUBSCRIPTION"
                Active Subscription With Device Disambiguation:
                  $ref: "#/components/examples/DeviceRoamingStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION"
                Subscription Activation Requested:
                  $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_ACTIVATION_REQUESTED"
                Subscription Deleted:
                  $ref: "#/components/examples/DeviceRoamingStatusSUBSCRIPTION_DELETED"
        "400":
          $ref: "#/components/responses/DeviceRoamingStatusSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric403"
        "404":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric404"
    delete:
      tags:
        - DeviceRoamingStatus
      summary: Delete a device-roaming-status event subscription for a device
      operationId: DeviceRoamingStatus_deleteDeviceRoamingStatusSubscription
      description: Delete a given device-roaming-status subscription by ID
      security:
        - openId:
            - device-roaming-status-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/DeviceRoamingStatusSubscriptionId"
        - $ref: "#/components/parameters/DeviceRoamingStatusx-correlator"
      responses:
        "202":
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionAsync"
        "204":
          description: device-roaming-status subscription deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
        "400":
          $ref: "#/components/responses/DeviceRoamingStatusSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric403"
        "404":
          $ref: "#/components/responses/DeviceRoamingStatusGeneric404"
  /devicereachabilitystatus/subscriptions:
    post:
      tags:
        - DeviceReachabilityStatus
      summary: Create a device reachability status event subscription for a device
      description: Create a device reachability status event subscription for a device
      operationId: DeviceReachabilityStatus_createDeviceReachabilityStatusSubscription
      parameters:
        - $ref: "#/components/parameters/DeviceReachabilityStatusx-correlator"
      security:
        - openId:
            - device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data:create
            - device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms:create
            - device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
            examples:
              Create Subscription:
                $ref: "#/components/examples/DeviceReachabilityStatusCREATE_SUBSCRIPTION"
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The Device status server will call this endpoint whenever any device reachability status related event occurs.
              operationId: DeviceReachabilityStatus_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/DeviceReachabilityStatusx-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
                    examples:
                      reachability-data:
                        $ref: "#/components/examples/DeviceReachabilityStatusREACHABILITY_DATA"
                      reachability-sms:
                        $ref: "#/components/examples/DeviceReachabilityStatusREACHABILITY_SMS"
                      reachability-disconnected:
                        $ref: "#/components/examples/DeviceReachabilityStatusREACHABILITY_DISCONNECTED"
                      subscription-started:
                        $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_STARTED"
                      subscription-updated:
                        $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_UPDATED"
                      subscription-ended:
                        $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_ENDED"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
                "400":
                  $ref: "#/components/responses/DeviceReachabilityStatusGeneric400"
                "401":
                  $ref: "#/components/responses/DeviceReachabilityStatusGeneric401"
                "403":
                  $ref: "#/components/responses/DeviceReachabilityStatusGeneric403"
                "410":
                  $ref: "#/components/responses/DeviceReachabilityStatusGeneric410"
                "429":
                  $ref: "#/components/responses/DeviceReachabilityStatusGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "201":
          description: Created
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/DeviceReachabilityStatusACTIVE_SUBSCRIPTION"
                Active Subscription With Device Disambiguation:
                  $ref: "#/components/examples/DeviceReachabilityStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION"
        "202":
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionAsync"
        "400":
          $ref: "#/components/responses/DeviceReachabilityStatusCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceReachabilityStatusSubscriptionPermissionDenied403"
        "409":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric409"
        "422":
          $ref: "#/components/responses/DeviceReachabilityStatusCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric429"
    get:
      tags:
        - DeviceReachabilityStatus
      summary: Retrieve a list of device reachability status event subscription
      description: Retrieve a list of device reachability status event subscription(s)
      operationId: DeviceReachabilityStatus_retrieveDeviceReachabilityStatusSubscriptionList
      parameters:
        - $ref: "#/components/parameters/DeviceReachabilityStatusx-correlator"
      security:
        - openId:
            - device-reachability-status-subscriptions:read
      responses:
        "200":
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
              examples:
                List of Subscriptions:
                  $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_LIST"
                Empty List of Subscriptions:
                  $ref: "#/components/examples/DeviceReachabilityStatusEMPTY_SUBSCRIPTION_LIST"
        "400":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric400"
        "401":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric403"
  /devicereachabilitystatus/subscriptions/{subscriptionId}:
    get:
      tags:
        - DeviceReachabilityStatus
      summary: Retrieve a device reachability status event subscription for a device
      operationId: DeviceReachabilityStatus_retrieveDeviceReachabilityStatusSubscription
      description: Retrieve a given subscription by ID
      security:
        - openId:
            - device-reachability-status-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/DeviceReachabilityStatusSubscriptionId"
        - $ref: "#/components/parameters/DeviceReachabilityStatusx-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/DeviceReachabilityStatusACTIVE_SUBSCRIPTION"
                Active Subscription With Device Disambiguation:
                  $ref: "#/components/examples/DeviceReachabilityStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION"
                Subscription Activation Requested:
                  $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_ACTIVATION_REQUESTED"
                Subscription Deleted:
                  $ref: "#/components/examples/DeviceReachabilityStatusSUBSCRIPTION_DELETED"
        "400":
          $ref: "#/components/responses/DeviceReachabilityStatusSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric403"
        "404":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric404"
    delete:
      tags:
        - DeviceReachabilityStatus
      summary: Delete a device reachability status event subscription for a device
      operationId: DeviceReachabilityStatus_deleteDeviceReachabilityStatusSubscription
      description: Delete a given subscription by ID
      security:
        - openId:
            - device-reachability-status-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/DeviceReachabilityStatusSubscriptionId"
        - $ref: "#/components/parameters/DeviceReachabilityStatusx-correlator"
      responses:
        "202":
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionAsync"
        "204":
          description: event subscription deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
        "400":
          $ref: "#/components/responses/DeviceReachabilityStatusSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric401"
        "403":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric403"
        "404":
          $ref: "#/components/responses/DeviceReachabilityStatusGeneric404"
  /connectednetworktype/subscriptions:
    post:
      tags:
        - ConnectedNetworkType
      summary: Create a subscription for receiving notifications on changes to the connected network type of a device
      description: Create a subscription for receiving notifications on changes to the connected network type of a device.
      operationId: ConnectedNetworkType_createConnectedNetworkTypeSubscription
      parameters:
        - $ref: "#/components/parameters/ConnectedNetworkTypex-correlator"
      security:
        - openId:
            - connected-network-type-subscriptions:org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
            examples:
              Create Subscription:
                $ref: "#/components/examples/ConnectedNetworkTypeCREATE_SUBSCRIPTION"
      callbacks:
        notifications:
          "{$request.body#/sink}":
            post:
              summary: notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The connectivity network type status server will call this endpoint whenever the connected network type of the device changes.
              operationId: ConnectedNetworkType_callback_postNotification
              parameters:
                - $ref: "#/components/parameters/ConnectedNetworkTypex-correlator"
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: "#/components/schemas/ConnectedNetworkTypeCloudEvent"
                    examples:
                      network-type-changed:
                        $ref: "#/components/examples/ConnectedNetworkTypeNETWORK_TYPE_CHANGED"
                      subscription-started:
                        $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_STARTED"
                      subscription-updated:
                        $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_UPDATED"
                      subscription-ended:
                        $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_ENDED"
              responses:
                "204":
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
                "400":
                  $ref: "#/components/responses/ConnectedNetworkTypeGeneric400"
                "401":
                  $ref: "#/components/responses/ConnectedNetworkTypeGeneric401"
                "403":
                  $ref: "#/components/responses/ConnectedNetworkTypeGeneric403"
                "410":
                  $ref: "#/components/responses/ConnectedNetworkTypeGeneric410"
                "429":
                  $ref: "#/components/responses/ConnectedNetworkTypeGeneric429"
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        "201":
          description: Created (Successful creation of subscription)
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/ConnectedNetworkTypeACTIVE_SUBSCRIPTION"
                Active Subscription With Device Identifier:
                  $ref: "#/components/examples/ConnectedNetworkTypeACTIVE_SUBSCRIPTION_WITH_DEVICE_IDENTIFIER"
        "202":
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionAsync"
        "400":
          $ref: "#/components/responses/ConnectedNetworkTypeCreateSubscriptionBadRequest400"
        "401":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric401"
        "403":
          $ref: "#/components/responses/ConnectedNetworkTypeSubscriptionPermissionDenied403"
        "409":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric409"
        "422":
          $ref: "#/components/responses/ConnectedNetworkTypeCreateSubscriptionUnprocessableEntity422"
        "429":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric429"
    get:
      tags:
        - ConnectedNetworkType
      summary: Retrieve a list of device connected network type event subscription
      description: Retrieve a list of device connected network type event subscription(s)
      operationId: ConnectedNetworkType_retrieveConnectedNetworkTypeSubscriptionList
      parameters:
        - $ref: "#/components/parameters/ConnectedNetworkTypex-correlator"
      security:
        - openId:
            - connected-network-type-subscriptions:read
      responses:
        "200":
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
              examples:
                List of Subscriptions:
                  $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_LIST"
                Empty List of Subscriptions:
                  $ref: "#/components/examples/ConnectedNetworkTypeEMPTY_SUBSCRIPTION_LIST"
        "400":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric400"
        "401":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric401"
        "403":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric403"
  /connectednetworktype/subscriptions/{subscriptionId}:
    get:
      tags:
        - ConnectedNetworkType
      summary: Retrieve a device connected network type event subscription for a device
      description: retrieve ConnectedNetworkType subscription information for a given subscription ID.
      operationId: ConnectedNetworkType_retrieveConnectedNetworkTypeSubscription
      security:
        - openId:
            - connected-network-type-subscriptions:read
      parameters:
        - $ref: "#/components/parameters/ConnectedNetworkTypeSubscriptionId"
        - $ref: "#/components/parameters/ConnectedNetworkTypex-correlator"
      responses:
        "200":
          description: OK
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
              examples:
                Active Subscription:
                  $ref: "#/components/examples/ConnectedNetworkTypeACTIVE_SUBSCRIPTION"
                Active Subscription With Device Identifier:
                  $ref: "#/components/examples/ConnectedNetworkTypeACTIVE_SUBSCRIPTION_WITH_DEVICE_IDENTIFIER"
                Subscription Activation Requested:
                  $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_ACTIVATION_REQUESTED"
                Subscription Deleted:
                  $ref: "#/components/examples/ConnectedNetworkTypeSUBSCRIPTION_DELETED"
        "400":
          $ref: "#/components/responses/ConnectedNetworkTypeSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric401"
        "403":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric403"
        "404":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric404"
    delete:
      tags:
        - ConnectedNetworkType
      summary: Delete connected network type event subscription for a device
      operationId: ConnectedNetworkType_deleteConnectedNetworkTypeSubscription
      description: delete a given ConnectedNetworkType subscription.
      security:
        - openId:
            - connected-network-type-subscriptions:delete
      parameters:
        - $ref: "#/components/parameters/ConnectedNetworkTypeSubscriptionId"
        - $ref: "#/components/parameters/ConnectedNetworkTypex-correlator"
      responses:
        "202":
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionAsync"
        "204":
          description: ConnectedNetworkType subscription deleted
          headers:
            x-correlator:
              $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
        "400":
          $ref: "#/components/responses/ConnectedNetworkTypeSubscriptionIdRequired400"
        "401":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric401"
        "403":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric403"
        "404":
          $ref: "#/components/responses/ConnectedNetworkTypeGeneric404"
components:
  schemas:
    CustomerInsightsXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    CustomerInsightsPhoneNumber:
      type: string
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      pattern: ^\+[1-9][0-9]{4,14}$
    CustomerInsightsScoringRequest:
      type: object
      properties:
        idDocument:
          type: string
          description: Identification number associated to the official identity document in the country. It may contain alphanumeric characters.
        phoneNumber:
          $ref: "#/components/schemas/CustomerInsightsPhoneNumber"
        scoringType:
          type: string
          description: |-
            Scoring type, i.e.: scale. API Client may use this field to indicate the Scoring in one of the defined scales; if this field is not informed, the API will return the Scoring in the scale configured by default in the system.

            Allowed values are:

            * `gaugeMetric`: ranges from index 850 (lowest risk) to index 300 (highest risk)
            * `veritasIndex`: ranges from index 0 (lowest risk) to index 19 (highest risk)
          enum:
            - gaugeMetric
            - veritasIndex
    CustomerInsightsScoringResponse:
      type: object
      description: Scoring information based on the individual's profile owned by a Telco Operator.
      required:
        - scoringType
        - scoringValue
      properties:
        scoringType:
          type: string
          description: |-
            Scoring measurement system.

            Allowed values are:

            * `gaugeMetric`: ranges from index 850 (lowest risk) to index 300 (highest risk)
            * `veritasIndex`: ranges from index 0 (lowest risk) to index 19 (highest risk)
          enum:
            - gaugeMetric
            - veritasIndex
        scoringValue:
          type: integer
          description: Result of the Scoring analysis expressed in the measure indicated in the `scoringType` field.
    CustomerInsightsErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    DeviceSwapXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    DeviceSwapDeviceSwapInfo:
      type: object
      required:
        - latestDeviceChange
      properties:
        latestDeviceChange:
          type: string
          format: date-time
          description: Timestamp of latest device swap performed. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          nullable: true
          example: "2023-07-03T14:27:08.312+02:00"
        monitoredPeriod:
          type: integer
          description: Timeframe in days for device change supervision for the phone number. It could be valued in the response if the latest Device swap occurred before this monitored period.
          example: 120
    DeviceSwapCreateDeviceSwapDate:
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceSwapPhoneNumber"
    DeviceSwapCreateCheckDeviceSwap:
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceSwapPhoneNumber"
        maxAge:
          type: integer
          example: 240
          description: |
            Period in hours to be checked for device swap.
          format: int32
          minimum: 1
          maximum: 2400
          default: 240
    DeviceSwapPhoneNumber:
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+34666111333"
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
    DeviceSwapCheckDeviceSwapInfo:
      type: object
      required:
        - swapped
      properties:
        swapped:
          type: boolean
          description: Indicates whether the device has been swapped during the period within the provided age.
    DeviceSwapErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        message:
          type: string
          description: A human-readable description of what the event represents
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
    KnowYourCustomerAgeVerificationVerifyRequestBody:
      type: object
      description: Request to verify the age threshold provided.
      required:
        - ageThreshold
      properties:
        ageThreshold:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationAgeThreshold"
        phoneNumber:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationPhoneNumber"
        idDocument:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationIdDocument"
        name:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationName"
        givenName:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationGivenName"
        familyName:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationFamilyName"
        middleNames:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationMiddleNames"
        familyNameAtBirth:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationFamilyNameAtBirth"
        birthdate:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationBirthdate"
        email:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationEmail"
        includeContentLock:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationIncludeContentLock"
        includeParentalControl:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationIncludeParentalControl"
    KnowYourCustomerAgeVerificationAgeThreshold:
      type: integer
      minimum: 0
      maximum: 120
      description: The age to be verified. The indicated range is a global definition of maximum and minimum values allowed to be requested. It is important to note that this range might be more restrictive in some implementations due to local regulations of a country i.e. A country does not allow to request for an age under 18. This limitation must be informed during the onboarding process.
    KnowYourCustomerAgeVerificationPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    KnowYourCustomerAgeVerificationIdDocument:
      type: string
      description: Id number associated to the official identity document in the country. It may contain alphanumeric characters.
    KnowYourCustomerAgeVerificationName:
      type: string
      description: Complete name of the customer, usually composed of first/given name and last/family/sur- name in a country.  Depending on the country, the order of first/give name and last/family/sur- name varies, and middle name could be included.  It can use givenName, middleNames, familyName and/or familyNameAtBirth. For example, in ESP, name+familyName; in NLD, it can be name+middleNames+familyName or name+middleNames+familyNameAtBirth, etc.
    KnowYourCustomerAgeVerificationGivenName:
      type: string
      description: First/given name or compound first/given name of the customer.
    KnowYourCustomerAgeVerificationFamilyName:
      type: string
      description: Last name, family name, or surname of the customer.
    KnowYourCustomerAgeVerificationMiddleNames:
      type: string
      description: Middle name/s of the customer.
    KnowYourCustomerAgeVerificationFamilyNameAtBirth:
      type: string
      description: Last/family/sur- name at birth of the customer.
    KnowYourCustomerAgeVerificationBirthdate:
      type: string
      format: date
      description: The birthdate of the customer, in RFC 3339 / ISO 8601 calendar date format (YYYY-MM-DD).
    KnowYourCustomerAgeVerificationEmail:
      type: string
      format: email
      description: Email address of the customer in the RFC specified format (local-part@domain).
    KnowYourCustomerAgeVerificationIncludeContentLock:
      type: boolean
      default: false
      description: If this parameter is included in the request with value `true`, the response property `contentLock` will be returned. If it is not included or its value is `false`, the response property will not be returned.
    KnowYourCustomerAgeVerificationIncludeParentalControl:
      type: boolean
      default: false
      description: If this parameter is included in the request with value `true`, the response property `parentalControl` will be returned. If it is not included or its value is `false`, the response property will not be returned.
    KnowYourCustomerAgeVerificationVerifyResponseBody:
      type: object
      description: Response to an age verification request
      required:
        - ageCheck
      properties:
        ageCheck:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationAgeCheck"
        verifiedStatus:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationVerifiedStatus"
        identityMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationIdentityMatchScore"
        contentLock:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationContentLock"
        parentalControl:
          $ref: "#/components/schemas/KnowYourCustomerAgeVerificationParentalControl"
    KnowYourCustomerAgeVerificationAgeCheck:
      type: string
      description: Indicate `"true"` when the age of the user is the same age or older than the age threshold (age >= age threshold), and `"false"` if not (age < age threshold). If the API Provider doesn't have enough information to perform the validation, a `not_available` can be returned.
      enum:
        - "true"
        - "false"
        - not_available
    KnowYourCustomerAgeVerificationVerifiedStatus:
      type: boolean
      description: |
        Indicate `true` if the information provided has been compared against information based on an identification document legally accepted as an age verification document (Note), otherwise indicate `false`.  Note: Depending on the country, credit-check or other mechanism can be used instead of official identification for Age Verification. For details, please contact API Provider.
    KnowYourCustomerAgeVerificationIdentityMatchScore:
      type: integer
      minimum: 0
      maximum: 100
      description: The overall score of identity information available in the API Provider, information either provided in the request body comparing it to the one that the API Provider holds or directly using internal API Provider's information. It is optional for the API Provider to return the Identity match score.
    KnowYourCustomerAgeVerificationContentLock:
      type: string
      description: Indicate `"true"` if the subscription associated with the phone number has any kind of content lock (i.e certain web content blocked) and `"false"` if not. If the information is not available the value `not_available` can be returned.
      enum:
        - "true"
        - "false"
        - not_available
    KnowYourCustomerAgeVerificationParentalControl:
      type: string
      description: Indicate `"true"` if the subscription associated with the phone number has any kind of parental control activated and `"false"` if not. If the information is not available the value `not_available` can be returned.
      enum:
        - "true"
        - "false"
        - not_available
    KnowYourCustomerAgeVerificationErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    KnowYourCustomerAgeVerificationXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    KnowYourCustomerFill-inKYC_FillinRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
          pattern: ^\+[1-9][0-9]{4,14}$
          example: "+123456789"
    KnowYourCustomerFill-inKYC_FillinResponse:
      type: object
      properties:
        phoneNumber:
          type: string
          description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
          pattern: ^\+[1-9][0-9]{4,14}$
          example: "+123456789"
        idDocument:
          type: string
          description: Id number associated to the id_document of the customer stored on the Operator's system.
        idDocumentType:
          type: string
          enum:
            - passport
            - national_id_card
            - residence_permit
            - diplomatic_id
            - driver_licence
            - social_security_id
            - other
          description: Type of the official identity document provided.
        idDocumentExpiryDate:
          type: string
          format: date
          description: Expiration date of the identity document (ISO 8601).
        name:
          type: string
          description: Complete name of the customer stored on the Operator's system.  It is usually composed of first/given name and last/family/sur- name in a country.  Depending on the country, the order of first/give name and last/family/sur- name varies, and middle name could be included.  It can use givenName, middleNames, familyName and/or familyNameAtBirth. For example, in ESP, name+familyName; in NLD, it can be name+middleNames+familyName or name+middleNames+familyNameAtBirth, etc.
        givenName:
          type: string
          description: First/given name or compound first/given name of the customer on the Operator's system.
        familyName:
          type: string
          description: Last name, family name, or surname of the customer stored on the Operator's system.
        nameKanaHankaku:
          type: string
          description: Complete name of the customer in Hankaku-Kana format (reading of name) for Japan, stored on the Operator's system.
        nameKanaZenkaku:
          type: string
          description: Complete name of the customer in Zenkaku-Kana format (reading of name) for Japan, stored on the Operator's system.
        middleNames:
          type: string
          description: Middle name/s of the customer stored on the Operator's system.
        familyNameAtBirth:
          type: string
          description: Last/family/sur- name at birth of the customer stored on the Operator's system.
        address:
          type: string
          description: Complete address of the customer stored on the Operator's system.  For some countries, it is built following the usual concatenation of parameters in a country, but for other countries, this is not the case.  For some countries, it can use streetName, streetNumber and/or houseNumberExtension. For example, in ESP, streetName+streetNumber; in NLD, it can be streetName+streetNumber or streetName+streetNumber+houseNumberExtension.
        streetName:
          type: string
          description: Name of the street of the customer's address on the Operator's system.  It should not include the type of the street.
        streetNumber:
          type: string
          description: The street number of the customer's address on the Operator's system.  Number identifying a specific property on the 'streetName'.
        postalCode:
          type: string
          description: The postal code or Zip code of the customer's address, stored on the Operator's system.
        region:
          type: string
          description: Region/prefecture of the customer's address, stored on the Operator's system.
        locality:
          type: string
          description: Locality of the customer's address, stored on the Operator's system.
        country:
          type: string
          description: Country of the customer's address stored on the Operator's system. Format ISO 3166-1 alpha-2.
        houseNumberExtension:
          type: string
          description: House number extension of the customer stored on the Operator's system.  Specific identifier of the house needed depending on the property type. For example, number of apartment in an apartment building.
        birthdate:
          type: string
          format: date
          description: Birthdate of the customer, in ISO 8601 calendar date format (YYYY-MM-DD), stored on the Operator's system.
        email:
          type: string
          format: email
          description: Email address of the customer in the RFC specified format (local-part@domain), stored on the Operator's system.
        gender:
          type: string
          description: Gender of the customer stored on the Operator's system (Male/Female/Other).
          enum:
            - MALE
            - FEMALE
            - OTHER
        cityOfBirth:
          type: string
          description: City where the customer was born.
        countryOfBirth:
          type: string
          description: Country where the customer was born. Format ISO 3166-1 alpha-2.
        nationality:
          type: string
          description: ISO 3166-1 alpha-2 code of the customer’s nationality. In the case a customer has more than one nationality, it is supposed to be the nationality related to the ID document provided in the match request.
    KnowYourCustomerFill-inErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    KnowYourCustomerFill-inXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    KnowYourCustomerMatchXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    KnowYourCustomerMatchKYC_MatchRequestBody:
      type: object
      description: Payload to validate the customer data.
      properties:
        phoneNumber:
          type: string
          description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
          pattern: ^\+[1-9][0-9]{4,14}$
          example: "+123456789"
        idDocument:
          type: string
          description: Id number associated to the official identity document in the country. It may contain alphanumeric characters.
        idDocumentType:
          type: string
          enum:
            - passport
            - national_id_card
            - residence_permit
            - diplomatic_id
            - driver_licence
            - social_security_id
            - other
          description: Type of the official identity document provided.
        idDocumentExpiryDate:
          type: string
          format: date
          description: Expiration date of the identity document (ISO 8601).
        name:
          type: string
          description: Complete name of the customer, usually composed of first/given name and last/family/sur- name in a country.  Depending on the country, the order of first/give name and last/family/sur- name varies, and middle name could be included.  It can use givenName, middleNames, familyName and/or familyNameAtBirth. For example, in ESP, name+familyName; in NLD, it can be name+middleNames+familyName or name+middleNames+familyNameAtBirth, etc.
        givenName:
          type: string
          description: First/given name or compound first/given name of the customer.
        familyName:
          type: string
          description: Last name, family name, or surname of the customer.
        nameKanaHankaku:
          type: string
          description: Complete name of the customer in Hankaku-Kana format (reading of name) for Japan.
        nameKanaZenkaku:
          type: string
          description: Complete name of the customer in Zenkaku-Kana format (reading of name) for Japan.
        middleNames:
          type: string
          description: Middle name/s of the customer.
        familyNameAtBirth:
          type: string
          description: Last/family/sur- name at birth of the customer.
        address:
          type: string
          description: Complete address of the customer.  For some countries, it is built following the usual concatenation of parameters in a country, but for other countries, this is not the case.  For some countries, it can use streetName, streetNumber and/or houseNumberExtension. For example, in ESP, streetName+streetNumber; in NLD, it can be streetName+streetNumber or streetName+streetNumber+houseNumberExtension.
        streetName:
          type: string
          description: Name of the street of the customer's address. It should not include the type of the street.
        streetNumber:
          type: string
          description: The street number of the customer's address.  Number identifying a specific property on the 'streetName'.
        postalCode:
          type: string
          description: Zip code or postal code
        region:
          type: string
          description: Region/prefecture of the customer's address
        locality:
          type: string
          description: Locality of the customer's address
        country:
          type: string
          description: Country of the customer's address. Format ISO 3166-1 alpha-2
        houseNumberExtension:
          type: string
          description: Specific identifier of the house needed depending on the property type. For example, number of apartment in an apartment building.
        birthdate:
          type: string
          format: date
          description: The birthdate of the customer, in RFC 3339 / ISO 8601 calendar date format (YYYY-MM-DD).
        email:
          type: string
          format: email
          description: Email address of the customer in the RFC specified format (local-part@domain).
        gender:
          type: string
          description: Gender of the customer (Male/Female/Other).
          enum:
            - MALE
            - FEMALE
            - OTHER
        cityOfBirth:
          type: string
          description: City where the customer was born.
        countryOfBirth:
          type: string
          description: Country where the customer was born. Format ISO 3166-1 alpha-2.
        nationality:
          type: string
          description: ISO 3166-1 alpha-2 code of the customer’s nationality. In the case a customer has more than one nationality, it is supposed to be the nationality related to the ID document provided in the match request.
    KnowYourCustomerMatchMatchResult:
      type: string
      description: |
        true -  the attribute provided matches with the one in the Operator systems, which is equal to a `match_score` of 100.
        false - the attribute provided does not match with the one in the Operator systems.
        not_available - the attribute is not available to validate.
      enum:
        - "true"
        - "false"
        - not_available
    KnowYourCustomerMatchMatchScoreResult:
      type: integer
      description: |
        Indicates the similarity score assigned to the input value when it does not exactly match the value stored in the operator's system.
        This property shall only be returned when the value of the corresponding match field is `false`.
        A perfect match with a score of 100 is indicated by `match` being 'true' and no `matchScore` is returned in this case.
      minimum: 0
      maximum: 99
    KnowYourCustomerMatchKYC_MatchResponse:
      type: object
      properties:
        idDocumentMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether Id number associated to the ID document of the customer matches with the one on the Operator's system.
        idDocumentTypeMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether document type associated to the ID document of the customer matches with the one on the Operator's system.
        idDocumentExpiryDateMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether document expiration date associated to the ID document of the customer matches with the one on the Operator's system.
        nameMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the complete name of the customer matches with the one on the Operator's system.
        nameMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        givenNameMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether First name/given name of the customer matches with the one on the Operator's system.
        givenNameMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        familyNameMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether last name/ family name/ surname of the customer matches with the one on the Operator's system.
        familyNameMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        nameKanaHankakuMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether complete name of the customer in Hankaku-Kana format (reading of name) for Japan matches with the one on the Operator's system.
        nameKanaHankakuMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        nameKanaZenkakuMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether complete name of the customer in Zenkaku-Kana format (reading of name) for Japan matches with the one on the Operator's system.
        nameKanaZenkakuMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        middleNamesMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the middle names of the customer matches with the one on the Operator's system.
        middleNamesMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        familyNameAtBirthMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the Family Name At Birth of the customer matches with the one on the Operator's system.
        familyNameAtBirthMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        addressMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether complete address of the customer matches with the one on the Operator's system.
        addressMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        streetNameMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the street name of the customer matches with the one on the Operator's system.
        streetNameMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        streetNumberMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the street number of the customer matches with the one on the Operator's system.
        streetNumberMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        postalCodeMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the postal code / zip code of the customer matches with the one on the Operator's system.
        regionMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the region of the customer's address matches with the one on the Operator's system.
        regionMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        localityMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the locality of the customer's address matches with the one on the Operator's system.
        localityMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        countryMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the country of the customer's address matches with the one on the Operator's system.
        houseNumberExtensionMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the house number extension of the customer's address with the one on the Operator's system.
        birthdateMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the birthdate of the customer matches with the one on the Operator's system.
        emailMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the email address of the customer matches with the one on the Operator's system.
        emailMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        genderMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the gender of the customer matches with the one on the Operator's system.
        cityOfBirthMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the city at birth of the customer matches with the one on the Operator's system
        cityOfBirthMatchScore:
          $ref: "#/components/schemas/KnowYourCustomerMatchMatchScoreResult"
        countryOfBirthMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the country at birth of the customer matches with the one on the Operator's system
        nationalityMatch:
          allOf:
            - $ref: "#/components/schemas/KnowYourCustomerMatchMatchResult"
            - description: Indicates whether the nationality of the customer matches with the one on the Operator's system
    KnowYourCustomerMatchErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        message:
          type: string
          description: A human-readable description of what the event represents
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
    TenureTenure:
      description: Specifies date from which continuous tenure of the identified mobile subscriber is required to be confirmed
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/TenurePhoneNumber"
        tenureDate:
          type: string
          description: The date, in RFC 3339 / ISO 8601 compliant format "YYYY-MM-DD", from which continuous tenure of the identified network subscriber is required to be confirmed
          format: date
          example: "2023-07-03"
      required:
        - tenureDate
    TenurePhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    TenureTenureInfo:
      properties:
        tenureDateCheck:
          description: |
            `true` when the identified mobile subscription has had valid tenure since `tenureDate`, otherwise `false`
          example: true
          type: boolean
        contractType:
          description: |
            If exists, populated with:
            - `PAYG` - prepaid (pay-as-you-go) account
            - `PAYM` - contract account
            - `Business` - Business (enterprise) account

            This attribute may be omitted from the response set if the information is not available
          example: PAYM
          type: string
          enum:
            - PAYG
            - PAYM
            - Business
      required:
        - tenureDateCheck
    TenureErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    TenureXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    NumberRecyclingCreateCheckNumRecycling:
      type: object
      required:
        - specifiedDate
      properties:
        phoneNumber:
          $ref: "#/components/schemas/NumberRecyclingPhoneNumber"
        specifiedDate:
          type: string
          format: date
          description: Specified date to check whether there has been a change in the subscriber associated with the specific phone number, in RFC 3339 calendar date format (YYYY-MM-DD).
          example: "2024-10-31"
    NumberRecyclingPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    NumberRecyclingCheckNumRecyclingInfo:
      type: object
      required:
        - phoneNumberRecycled
      properties:
        phoneNumberRecycled:
          type: boolean
          description: |
            Set to true (Boolean, not string) when there has been a change in the subscriber associated with the specific phone number after “specifiedDate”.
    NumberRecyclingErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    NumberRecyclingXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    OTPValidationXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    OTPValidationSendCodeBody:
      description: Structure to request sending a code to a phone number
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/OTPValidationPhoneNumber"
        message:
          $ref: "#/components/schemas/OTPValidationMessage"
      required:
        - message
        - phoneNumber
    OTPValidationSendCodeResponse:
      description: Structure to provide authentication identifier
      type: object
      properties:
        authenticationId:
          $ref: "#/components/schemas/OTPValidationAuthenticationId"
      required:
        - authenticationId
    OTPValidationValidateCodeBody:
      description: Strcuture to request code verification
      type: object
      properties:
        authenticationId:
          $ref: "#/components/schemas/OTPValidationAuthenticationId"
        code:
          $ref: "#/components/schemas/OTPValidationCode"
      required:
        - authenticationId
        - code
    OTPValidationPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+346661113334"
    OTPValidationMessage:
      type: string
      description: Message template used to compose the content of the SMS sent to the phone number. It must include the following label indicating where to include the short code `{{code}}`
      pattern: .*\{\{code\}\}.*
      maxLength: 160
      example: "{{code}} is your short code to authenticate with Cool App via SMS"
    OTPValidationAuthenticationId:
      type: string
      description: unique id of the verification attempt the code belongs to.
      maxLength: 36
      example: ea0840f3-3663-4149-bd10-c7c6b8912105
    OTPValidationCode:
      type: string
      description: temporal, short code to be validated
      maxLength: 10
      example: AJY3
    OTPValidationErrorInfo:
      description: Structure to describe error
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    CallForwardingSignalUnconditionalCallForwardingSignal:
      description: resource containing the information about the Unconditional Call Forwarding Service for the given phone number (PhoneNumber)
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the unconditional call forwarding service is active.
    CallForwardingSignalCallForwardingSignal:
      description: resource containing the list of the Call Forwarding Services active for the given phone number (PhoneNumber). The possible states are, 'inactive' (no call forwarding service activated), 'unconditional' (call forwarded independently from the device status), 'conditional_busy' (call forwarded if the device is on an active call), 'conditional_not_reachable' (call forwarded if the device is not reachable), 'conditional_no_answer' (call forwarded if the device doesn't answer the incoming call).
      type: array
      items:
        type: string
        enum:
          - inactive
          - unconditional
          - conditional_busy
          - conditional_not_reachable
          - conditional_no_answer
      example:
        - unconditional
        - conditional_busy
        - conditional_no_answer
      minItems: 1
    CallForwardingSignalXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    CallForwardingSignalCreateCallForwardingSignal:
      description: resource containing the phone number (PhoneNumber) regarding which the Call Forwarding Service must be checked. To be provided/valued only in case of two-legged authentication. If provided/valued with three-legged authentication a 422-UNNECESSARY_IDENTIFIER error code is returned.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/CallForwardingSignalPhoneNumber"
    CallForwardingSignalPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    CallForwardingSignalErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    DeviceLocationXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    DeviceLocationErrorInfo:
      description: The error info object for possible error cases.
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code.
        code:
          type: string
          description: A human-readable code to describe the error.
        message:
          type: string
          description: A human-readable description of what the event represents.
    DeviceLocationSubscriptionRequest:
      description: The request for creating an event-type event subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceLocationProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/DeviceLocationSinkCredential"
        types:
          description: |
            Camara Event types which are eligible to be delivered by this subscription.
            Note: As of now we enforce to have only event type per subscription.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceLocationSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceLocationConfigRequest"
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceLocationHTTPSubscriptionRequest"
          MQTT3: "#/components/schemas/DeviceLocationMQTTSubscriptionRequest"
          MQTT5: "#/components/schemas/DeviceLocationMQTTSubscriptionRequest"
          AMQP: "#/components/schemas/DeviceLocationAMQPSubscriptionRequest"
          NATS: "#/components/schemas/DeviceLocationNATSSubscriptionRequest"
          KAFKA: "#/components/schemas/DeviceLocationApacheKafkaSubscriptionRequest"
    DeviceLocationProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: Identifier of a delivery protocol. Only HTTP is allowed for now.
      example: HTTP
    DeviceLocationConfig:
      description: |
        Implementation-specific configuration parameters are needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`.
      type: object
      properties:
        subscriptionExpireTime:
          type: string
          format: date-time
          example: "2023-01-17T13:18:23.682Z"
          description: The subscription expiration time (in date-time format) requested by the API consumer. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
        subscriptionMaxEvents:
          type: integer
          description: |
            Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
            Note on combined usage of `initialEvent` and `subscriptionMaxEvents`:
            If an event is triggered following `initialEvent` set to `true`, this event will be counted towards `subscriptionMaxEvents`.
          minimum: 1
          example: 5
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.
            Example: Consumer request area entered event. If consumer sets initialEvent to true and device is already in the geofence, an event is triggered.
    DeviceLocationConfigRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationConfig"
        - description: |
            Implementation-specific configuration parameters are needed by the subscription manager for acquiring events.
            In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`.
            Specific event type attributes requested by the client must be defined in `subscriptionDetail`.
            Note: If a request is performed for several event types, all subscribed events will use the same `config` parameters.
          type: object
          required:
            - subscriptionDetail
          properties:
            subscriptionDetail:
              $ref: "#/components/schemas/DeviceLocationSubscriptionDetailRequest"
    DeviceLocationConfigResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationConfig"
        - description: |
            Implementation-specific configuration parameters are needed by the subscription manager for acquiring events.
            In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`.
            Specific event type attributes granted by the implementation are included in `subscriptionDetail`.
            Note: If a request is performed for several event types, all subscribed events will use the same `config` parameters.
          type: object
          required:
            - subscriptionDetail
          properties:
            subscriptionDetail:
              $ref: "#/components/schemas/DeviceLocationSubscriptionDetailResponse"
    DeviceLocationSinkCredential:
      type: object
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      properties:
        credentialType:
          type: string
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/DeviceLocationPlainCredential"
          ACCESSTOKEN: "#/components/schemas/DeviceLocationAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/DeviceLocationRefreshTokenCredential"
      required:
        - credentialType
    DeviceLocationPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    DeviceLocationAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    DeviceLocationRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    DeviceLocationSubscriptionDetailRequest:
      description: The detail of the requested event subscription.
      type: object
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDevice"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
      required:
        - area
    DeviceLocationSubscriptionDetailResponse:
      description: The detail of the event subscription granted by the implementation.
      type: object
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDeviceResponse"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
      required:
        - area
    DeviceLocationSubscriptionEventType:
      type: string
      description: |
        area-entered - Event triggered when the device enters the given area

        area-left - Event triggered when the device leaves the given area
      enum:
        - org.camaraproject.geofencing-subscriptions.v0.area-entered
        - org.camaraproject.geofencing-subscriptions.v0.area-left
    DeviceLocationNotificationEventType:
      type: string
      description: |
        area-entered - Event triggered when the device enters the given area

        area-left - Event triggered when the device leaves the given area

        subscription-started - Event triggered when the subscription starts.

        subscription-updated - Event triggered when the subscription is updated.

        subscription-ended - Event triggered when the subscription ends
      enum:
        - org.camaraproject.geofencing-subscriptions.v0.area-entered
        - org.camaraproject.geofencing-subscriptions.v0.area-left
        - org.camaraproject.geofencing-subscriptions.v0.subscription-started
        - org.camaraproject.geofencing-subscriptions.v0.subscription-updated
        - org.camaraproject.geofencing-subscriptions.v0.subscription-ended
    DeviceLocationSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
        - startsAt
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceLocationProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: As of now we enforce to have only event type per subscription.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceLocationSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceLocationConfigResponse"
        id:
          type: string
          description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
          example: "1119920371"
        startsAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will begin/began
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceLocationHTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/DeviceLocationMQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/DeviceLocationMQTTSubscriptionResponse"
          AMQP: "#/components/schemas/DeviceLocationAMQPSubscriptionResponse"
          NATS: "#/components/schemas/DeviceLocationNATSSubscriptionResponse"
          KAFKA: "#/components/schemas/DeviceLocationApacheKafkaSubscriptionResponse"
    DeviceLocationSubscriptionAsync:
      description: Response for an event-type subscription request managed asynchronously (Creation or Deletion).
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
    DeviceLocationSubscriptionId:
      type: string
      description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    DeviceLocationDevice:
      description: |
        End-user device able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`

        NOTE1: the API provider might support only a subset of these options. The API consumer can provide multiple identifiers to be compatible across different API providers. In this case the identifiers MUST belong to the same device. Where more than one device identifier is provided, only one identifier will be selected by the implementation and this choice indicated to the API consumer in the response or event.
        NOTE2: as for this Commonalities release, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceLocationPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/DeviceLocationNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/DeviceLocationDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/DeviceLocationDeviceIpv6Address"
      minProperties: 1
    DeviceLocationPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks, it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    DeviceLocationNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    DeviceLocationDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/DeviceLocationSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/DeviceLocationSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/DeviceLocationPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    DeviceLocationSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask.
      type: string
      format: ipv4
      example: 84.125.93.10
    DeviceLocationPort:
      description: TCP or UDP port number.
      type: integer
      minimum: 0
      maximum: 65535
    DeviceLocationDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    DeviceLocationDeviceResponse:
      description: |
        An identifier for the end-user equipment able to connect to the network that the response refers to. This parameter is only returned when the API consumer includes the `device` parameter in their request (i.e. they are using a two-legged access token), and is relevant when more than one device identifier is specified, as only one of those device identifiers is allowed in the response.
        If the API consumer provides more than one device identifier in their request, the API provider must return a single identifier which is the one they are using to fulfil the request, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationDevice"
        - maxProperties: 1
    DeviceLocationArea:
      type: object
      properties:
        areaType:
          $ref: "#/components/schemas/DeviceLocationAreaType"
      required:
        - areaType
      discriminator:
        propertyName: areaType
        mapping:
          CIRCLE: "#/components/schemas/DeviceLocationCircle"
    DeviceLocationAreaType:
      type: string
      description: |
        Type of this area.
        CIRCLE - The area is defined as a circle.
      enum:
        - CIRCLE
    DeviceLocationCircle:
      description: Circular area
      allOf:
        - $ref: "#/components/schemas/DeviceLocationArea"
        - type: object
          properties:
            center:
              $ref: "#/components/schemas/DeviceLocationPoint"
            radius:
              type: number
              description: |
                Expected accuracy for the subscription event of device location, in meters from `center`.
                Note: The area surface could be restricted locally depending on regulations. Implementations may enforce a larger minimum radius (e.g. 1000 meters).
              minimum: 1
          required:
            - center
            - radius
      example:
        areaType: CIRCLE
        center:
          latitude: 50.735851
          longitude: 7.10066
        radius: 50000
    DeviceLocationPoint:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map.
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: "#/components/schemas/DeviceLocationLatitude"
        longitude:
          $ref: "#/components/schemas/DeviceLocationLongitude"
      example:
        latitude: 50.735851
        longitude: 7.10066
    DeviceLocationLatitude:
      description: Latitude component of a location.
      type: number
      format: double
      minimum: -90
      maximum: 90
      example: 50.735851
    DeviceLocationLongitude:
      description: Longitude component of location.
      type: number
      format: double
      minimum: -180
      maximum: 180
      example: 7.10066
    DeviceLocationCloudEvent:
      description: The notification callback.
      required:
        - id
        - source
        - specversion
        - type
        - time
        - data
      properties:
        id:
          type: string
          description: Identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/DeviceLocationSource"
        type:
          $ref: "#/components/schemas/DeviceLocationNotificationEventType"
        specversion:
          type: string
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version).
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs
          enum:
            - application/json
        data:
          type: object
          description: Event details payload described in each CAMARA API and referenced by its type.
        time:
          $ref: "#/components/schemas/DeviceLocationDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.geofencing-subscriptions.v0.area-left: "#/components/schemas/DeviceLocationEventAreaLeft"
          org.camaraproject.geofencing-subscriptions.v0.area-entered: "#/components/schemas/DeviceLocationEventAreaEntered"
          org.camaraproject.geofencing-subscriptions.v0.subscription-started: "#/components/schemas/DeviceLocationEventSubscriptionStarted"
          org.camaraproject.geofencing-subscriptions.v0.subscription-updated: "#/components/schemas/DeviceLocationEventSubscriptionUpdated"
          org.camaraproject.geofencing-subscriptions.v0.subscription-ended: "#/components/schemas/DeviceLocationEventSubscriptionEnded"
    DeviceLocationSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened - be a non-empty `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    DeviceLocationDateTime:
      type: string
      format: date-time
      description: Timestamp of when the occurrence happened. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
      example: "2018-04-05T17:31:00Z"
    DeviceLocationEventAreaLeft:
      description: Event structure for event when the device leaves the area.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceLocationAreaLeft"
    DeviceLocationEventAreaEntered:
      description: Event structure for event when the device enters the area.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceLocationAreaEntered"
    DeviceLocationEventSubscriptionStarted:
      description: Event structure for event subscription started
      allOf:
        - $ref: "#/components/schemas/DeviceLocationCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceLocationSubscriptionStarted"
    DeviceLocationSubscriptionStarted:
      description: Event detail structure for subscription started event
      type: object
      required:
        - initiationReason
        - subscriptionId
        - area
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDevice"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
        initiationReason:
          $ref: "#/components/schemas/DeviceLocationInitiationReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
        initiationDescription:
          description: Description about the start of the subscription.
          type: string
    DeviceLocationInitiationReason:
      type: string
      description: |
        - SUBSCRIPTION_CREATED - Subscription created by API Server
      enum:
        - SUBSCRIPTION_CREATED
    DeviceLocationEventSubscriptionUpdated:
      description: Event structure for event subscription updated
      allOf:
        - $ref: "#/components/schemas/DeviceLocationCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceLocationSubscriptionUpdated"
    DeviceLocationSubscriptionUpdated:
      description: Event detail structure for subscription updated event
      type: object
      required:
        - area
        - updateReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDevice"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
        updateReason:
          $ref: "#/components/schemas/DeviceLocationUpdateReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
        updateDescription:
          description: Description about the subscription update.
          type: string
    DeviceLocationUpdateReason:
      type: string
      description: |
        - SUBSCRIPTION_ACTIVE - API server transitioned susbcription status to `ACTIVE`
        - SUBSCRIPTION_INACTIVE - API server transitioned susbcription status to `INACTIVE`
      enum:
        - SUBSCRIPTION_ACTIVE
        - SUBSCRIPTION_INACTIVE
    DeviceLocationEventSubscriptionEnded:
      description: Event structure for event subscription ends.
      allOf:
        - $ref: "#/components/schemas/DeviceLocationCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceLocationSubscriptionEnded"
    DeviceLocationAreaLeft:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v0.area-left event.
        Note that the device object is defined as optional and will only to be returned if provided in createGeofencingSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createGeofencingSubscription).
      type: object
      required:
        - area
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDeviceResponse"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
        subscriptionId:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
    DeviceLocationAreaEntered:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v0.area-entered event.
        Note that the device object is defined as optional and will only to be returned if provided in createGeofencingSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createGeofencingSubscription).
      type: object
      required:
        - area
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDeviceResponse"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
        subscriptionId:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
    DeviceLocationSubscriptionEnded:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v0.subscription-ended event.
        Note that the device object is defined as optional and will only to be returned if provided in createGeofencingSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createGeofencingSubscription).
      type: object
      required:
        - area
        - terminationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceLocationDeviceResponse"
        area:
          $ref: "#/components/schemas/DeviceLocationArea"
        terminationReason:
          $ref: "#/components/schemas/DeviceLocationTerminationReason"
        terminationDescription:
          description: Explanation why a subscription ended or had to end.
          type: string
        subscriptionId:
          $ref: "#/components/schemas/DeviceLocationSubscriptionId"
    DeviceLocationTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_UNPROCESSABLE - Subscription cannot be processed due to some reason, e.g. because the specified area cannot be managed. Useful for asynchronous subscription creation.
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_UNPROCESSABLE
        - SUBSCRIPTION_EXPIRED
        - SUBSCRIPTION_DELETED
        - ACCESS_TOKEN_EXPIRED
    DeviceLocationHTTPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationHTTPSettings"
    DeviceLocationHTTPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationHTTPSettings"
    DeviceLocationHTTPSettings:
      type: object
      properties:
        headers:
          type: object
          description: |-
            A set of key/value pairs that is copied into the HTTP request as custom headers.

            NOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.
          additionalProperties:
            type: string
        method:
          type: string
          description: The HTTP method to use for sending the message.
          enum:
            - POST
    DeviceLocationMQTTSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationMQTTSettings"
    DeviceLocationMQTTSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationMQTTSettings"
    DeviceLocationMQTTSettings:
      type: object
      properties:
        topicName:
          type: string
        qos:
          type: integer
          format: int32
        retain:
          type: boolean
        expiry:
          type: integer
          format: int32
        userProperties:
          type: object
      required:
        - topicName
    DeviceLocationAMQPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationAMQPSettings"
    DeviceLocationAMQPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationAMQPSettings"
    DeviceLocationAMQPSettings:
      type: object
      properties:
        address:
          type: string
        linkName:
          type: string
        senderSettlementMode:
          type: string
          enum:
            - settled
            - unsettled
        linkProperties:
          type: object
          additionalProperties:
            type: string
    DeviceLocationApacheKafkaSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationApacheKafkaSettings"
    DeviceLocationApacheKafkaSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationApacheKafkaSettings"
    DeviceLocationApacheKafkaSettings:
      type: object
      properties:
        topicName:
          type: string
        partitionKeyExtractor:
          type: string
        clientId:
          type: string
        ackMode:
          type: integer
      required:
        - topicName
    DeviceLocationNATSSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationNATSSettings"
    DeviceLocationNATSSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceLocationSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceLocationNATSSettings"
    DeviceLocationNATSSettings:
      type: object
      properties:
        subject:
          type: string
      required:
        - subject
    PopulationDensityDataXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    PopulationDensityDataPopulationDensityRequest:
      type: object
      description: "Request object for retrieving population density data in a specified area. **NOTE**: The difference between `startTime` and `endTime` cannot be greater than 7 days."
      properties:
        area:
          $ref: "#/components/schemas/PopulationDensityDataArea"
        startTime:
          type: string
          format: date-time
          description: Start date time. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ
          example: "2023-07-03T12:27:08.312Z"
        endTime:
          type: string
          format: date-time
          description: End date time. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z) The maximum endTime allowed is 3 months from the time of the request.
          example: "2023-07-03T12:27:08.312Z"
        precision:
          type: integer
          description: Precision required of response cells. Precision defines a geohash level and corresponds to the length of the geohash for each cell. More information at [Geohash system](https://en.wikipedia.org/wiki/Geohash)" If not included the default precision level 7 is used by default. In case of using a not supported level by the MNO, the API returns the error response `POPULATION_DENSITY_DATA.UNSUPPORTED_PRECISION`.
          minimum: 1
          maximum: 12
          default: 7
        sink:
          type: string
          format: uri
          description: The address where the API response will be asynchronously delivered, using the HTTP protocol.
          pattern: ^https:\/\/.+$
          example: https://endpoint.example.com/sink
        sinkCredential:
          description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
          allOf:
            - $ref: "#/components/schemas/PopulationDensityDataSinkCredential"
      required:
        - area
        - startTime
        - endTime
    PopulationDensityDataArea:
      description: Base schema for all areas
      type: object
      properties:
        areaType:
          $ref: "#/components/schemas/PopulationDensityDataAreaType"
      required:
        - areaType
      discriminator:
        propertyName: areaType
        mapping:
          POLYGON: "#/components/schemas/PopulationDensityDataPolygon"
    PopulationDensityDataAreaType:
      type: string
      description: |
        Type of this area.
        POLYGON - The area is defined as a polygon.
      enum:
        - POLYGON
    PopulationDensityDataPolygon:
      description: Polygonal area. The Polygon should be a simple polygon, i.e. should not intersect itself.
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataArea"
        - type: object
          required:
            - boundary
          properties:
            boundary:
              $ref: "#/components/schemas/PopulationDensityDataPointList"
    PopulationDensityDataPointList:
      description: List of points defining a polygon
      type: array
      items:
        $ref: "#/components/schemas/PopulationDensityDataPoint"
      minItems: 3
      maxItems: 15
    PopulationDensityDataPoint:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: "#/components/schemas/PopulationDensityDataLatitude"
        longitude:
          $ref: "#/components/schemas/PopulationDensityDataLongitude"
      example:
        latitude: 50.735851
        longitude: 7.10066
    PopulationDensityDataLatitude:
      description: Latitude component of a location
      type: number
      format: double
      minimum: -90
      maximum: 90
    PopulationDensityDataLongitude:
      description: Longitude component of location
      type: number
      format: double
      minimum: -180
      maximum: 180
    PopulationDensityDataSinkCredential:
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/PopulationDensityDataPlainCredential"
          ACCESSTOKEN: "#/components/schemas/PopulationDensityDataAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/PopulationDensityDataRefreshTokenCredential"
      required:
        - credentialType
    PopulationDensityDataPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    PopulationDensityDataAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)). For the current version of the API the type MUST be set to `Bearer`.
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    PopulationDensityDataRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    PopulationDensityDataPopulationDensityResponse:
      type: object
      description: Population density values is represented in time intervals for different cells of the requested area. Each element in `timedPopulationDensityData` array corresponds to a time interval, containing population density data for the grid cells. The intervals are 1 hour long.
      properties:
        timedPopulationDensityData:
          type: array
          description: |-
            Time ranges along with the population density data for the cells within it.
             The request startTime or the request endTime have to be fully covered by the intervals.
             For example, if the intervals are 1-hour long and the input date range were [2024-01-03T11:25:00Z
             to 2024-01-03T12:45:00Z] it would contain 2 intervals (Interval from 2024-01-03T11:00:00Z
             to 2024-01-03T12:00:00Z and interval from 2024-01-03T12:00:00Z to 2024-01-03T13:00:00Z).
          items:
            $ref: "#/components/schemas/PopulationDensityDataTimedPopulationDensityData"
        status:
          $ref: "#/components/schemas/PopulationDensityDataResponseStatus"
        statusInfo:
          type: string
          description: Information about the status, mandatory when property `status` is `OPERATION_NOT_COMPLETED` for adding extra information about the error.
          example: Some error happened during the processing of the request
      required:
        - timedPopulationDensityData
        - status
    PopulationDensityDataAcceptedAsyncResponse:
      type: object
      properties:
        operationId:
          $ref: "#/components/schemas/PopulationDensityDataOperationId"
      required:
        - operationId
    PopulationDensityDataPopulationDensityAsyncResponse:
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataPopulationDensityResponse"
        - type: object
          properties:
            operationId:
              $ref: "#/components/schemas/PopulationDensityDataOperationId"
          required:
            - operationId
    PopulationDensityDataOperationId:
      type: string
      description: The unique identifier of the asynchronous operation that is returned when the operation is initiated.
    PopulationDensityDataResponseStatus:
      type: string
      description: |-
        Represents the state of the response for the input polygon defined in the request, the possible values are:
          - `SUPPORTED_AREA`: The whole request area is supported. Population density data for the entire requested area is returned.
          - `PART_OF_AREA_NOT_SUPPORTED`: Part of the requested area is outside the MNOs coverage area, the cells outside the coverage
          area will have property `dataType` with value `NO_DATA`.
          - `AREA_NOT_SUPPORTED`: The whole requested area is outside the MNOs coverage area. No data will be returned.
          - `OPERATION_NOT_COMPLETED`: An error happened during asynchronous processing of the request. This status will only be returned
          in case the asynchronous API behaviour is used.
      enum:
        - SUPPORTED_AREA
        - PART_OF_AREA_NOT_SUPPORTED
        - AREA_NOT_SUPPORTED
        - OPERATION_NOT_COMPLETED
    PopulationDensityDataTimedPopulationDensityData:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: Interval start time. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T10:00:00Z"
        endTime:
          type: string
          format: date-time
          description: Interval end time. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T11:00:00Z"
        cellPopulationDensityData:
          $ref: "#/components/schemas/PopulationDensityDataCellPopulationDensityDataArray"
      required:
        - startTime
        - endTime
        - cellPopulationDensityData
    PopulationDensityDataCellPopulationDensityDataArray:
      type: array
      description: Population density data for the different cells in a concrete time range.
      items:
        $ref: "#/components/schemas/PopulationDensityDataCellPopulationDensityData"
      minItems: 1
    PopulationDensityDataCellPopulationDensityData:
      type: object
      description: Population density data of a cell in a concrete time range. In case of insufficient data, to guarantee an anonymized prediction due to the k-anonymity within a specific cell and time range, no population density data is returned and the property `dataType` value is "LOW_DENSITY". In case of a cell not supported `dataType` value is "NO_DATA"
      properties:
        geohash:
          type: string
          description: Coordinates of the cell represented as a string using the [Geohash system](https://en.wikipedia.org/wiki/Geohash). Encoding a geographic location into a short string. The value length, and thus, the cell granularity, is determined by the request body property `precision`.
          example: ezdmemd
        dataType:
          type: string
          enum:
            - NO_DATA
            - LOW_DENSITY
            - DENSITY_ESTIMATION
      required:
        - geohash
        - dataType
      discriminator:
        propertyName: dataType
        mapping:
          NO_DATA: "#/components/schemas/PopulationDensityDataNO_DATA"
          LOW_DENSITY: "#/components/schemas/PopulationDensityDataLOW_DENSITY"
          DENSITY_ESTIMATION: "#/components/schemas/PopulationDensityDataDENSITY_ESTIMATION"
    PopulationDensityDataNO_DATA:
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataCellPopulationDensityData"
    PopulationDensityDataLOW_DENSITY:
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataCellPopulationDensityData"
    PopulationDensityDataDENSITY_ESTIMATION:
      allOf:
        - $ref: "#/components/schemas/PopulationDensityDataCellPopulationDensityData"
        - type: object
          properties:
            maxPplDensity:
              type: integer
              description: Maximum people/km2 estimated for the defined area.
            minPplDensity:
              type: integer
              description: Minimum people/km2 estimated for the defined area.
            pplDensity:
              type: integer
              description: people/km2 estimation for the defined area.
          required:
            - maxPplDensity
            - minPplDensity
            - pplDensity
    PopulationDensityDataErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    RegionDeviceCountXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    RegionDeviceCountRegionDeviceCountRequestBody:
      type: object
      description: Payload to get the count of devices in the specific region.
      properties:
        area:
          $ref: "#/components/schemas/RegionDeviceCountArea"
        starttime:
          type: string
          format: date-time
          description: Starting timestamp for counting the number of devices in the area. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          nullable: true
          example: "2023-07-03T14:27:08.312+02:00"
        endtime:
          type: string
          format: date-time
          description: Ending timestamp for counting the number of devices in the area. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          nullable: true
          example: "2023-07-04T14:27:08.312+02:00"
        filter:
          $ref: "#/components/schemas/RegionDeviceCountFilter"
        sink:
          type: string
          format: uri
          description: The URL where the API response will be asynchronously delivered, using the HTTP protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
          allOf:
            - $ref: "#/components/schemas/RegionDeviceCountSinkCredential"
    RegionDeviceCountArea:
      type: object
      properties:
        areaType:
          $ref: "#/components/schemas/RegionDeviceCountAreaType"
      required:
        - areaType
      discriminator:
        propertyName: areaType
        mapping:
          CIRCLE: "#/components/schemas/RegionDeviceCountCircle"
          POLYGON: "#/components/schemas/RegionDeviceCountPolygon"
    RegionDeviceCountAreaType:
      type: string
      description: |
        Type of this area.
        CIRCLE - The area is defined as a circle.
        POLYGON - The area is defined as a polygon.
      enum:
        - CIRCLE
        - POLYGON
    RegionDeviceCountCircle:
      description: Circular area
      allOf:
        - $ref: "#/components/schemas/RegionDeviceCountArea"
        - type: object
          required:
            - center
            - radius
          properties:
            center:
              $ref: "#/components/schemas/RegionDeviceCountPoint"
            radius:
              type: number
              description: Distance from the center in meters
              minimum: 1
    RegionDeviceCountPolygon:
      allOf:
        - $ref: "#/components/schemas/RegionDeviceCountArea"
        - type: object
          required:
            - boundary
          properties:
            boundary:
              $ref: "#/components/schemas/RegionDeviceCountPointList"
    RegionDeviceCountPointList:
      type: array
      items:
        $ref: "#/components/schemas/RegionDeviceCountPoint"
      minItems: 3
      maxItems: 15
    RegionDeviceCountPoint:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: "#/components/schemas/RegionDeviceCountLatitude"
        longitude:
          $ref: "#/components/schemas/RegionDeviceCountLongitude"
      example:
        latitude: 50.735851
        longitude: 7.10066
    RegionDeviceCountLatitude:
      description: Latitude component of a location
      type: number
      format: double
      minimum: -90
      maximum: 90
    RegionDeviceCountLongitude:
      description: Longitude component of location
      type: number
      format: double
      minimum: -180
      maximum: 180
    RegionDeviceCountFilter:
      description: |
        This parameter is used to filter devices. Currently, two filtering criteria are defined, `roamingStatus` and `deviceType`, which can be expanded in the future. `IN` logic is used used for multiple filtering items within a single filtering criterion, `AND` logic is used between multiple filtering criteria.
        - If a filtering critera is not provided, it means that there is no need to filter this item.
        - At least one of the criteria must be provided,a filter without any criteria is not allowed.
        - If no filtering is required, this parameter does not need to be provided.
        For example ,`"filter":{"roamingStatus": ["roaming"],"deviceType": ["human device","IoT device"]}` means the API need to return the count of human network devices and IoT devices that are in roaming mode.`"filter":{"roamingStatus": ["non-roaming"]}` means that the API need to return the count of all devices that are not in roaming mode.
      type: object
      properties:
        roamingStatus:
          description: Filter whether the device is in roaming mode,'roaming' represents the need to filter devices that are in roaming mode,'non-roaming' represents the need to filter devices that are not roaming.
          type: array
          items:
            type: string
            enum:
              - roaming
              - non-roaming
          minItems: 1
        deviceType:
          description: Filtering by device type, 'human device' represents the need to filter for human network devices, 'IoT device' represents the need to filter for IoT devices, and 'other' represents the need to filter for other types of devices.
          type: array
          items:
            type: string
            enum:
              - human device
              - IoT device
              - other
          minItems: 1
      anyOf:
        - required:
            - roamingStatus
        - required:
            - deviceType
    RegionDeviceCountSinkCredential:
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/RegionDeviceCountPlainCredential"
          ACCESSTOKEN: "#/components/schemas/RegionDeviceCountAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/RegionDeviceCountRefreshTokenCredential"
      required:
        - credentialType
    RegionDeviceCountPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/RegionDeviceCountSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    RegionDeviceCountAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/RegionDeviceCountSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)). For the current version of the API the type MUST be set to `Bearer`.
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    RegionDeviceCountRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/RegionDeviceCountSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    RegionDeviceCountRegionDeviceCountResponse:
      type: object
      description: RegionDeviceCount result
      properties:
        count:
          $ref: "#/components/schemas/RegionDeviceCountCount"
        status:
          $ref: "#/components/schemas/RegionDeviceCountStatus"
    RegionDeviceCountCount:
      description: Device Count
      type: number
    RegionDeviceCountStatus:
      description: |
        SUPPORTED_AREA: The whole requested area is supported Region Device Count for the entire requested area is returned - Telco Coverage = 100 %

        PART_OF_AREA_NOT_SUPPORTED: Part of the requested area is outside the MNOs coverage area, the area outside the coverage area are not returned - 100% >Telco Coverage >=50%

        AREA_NOT_SUPPORTED:  The whole requested area is outside the MNO coverage area No data will be returned- Telco Coverage <50%

        DENSITY_BELOW_PRIVACY_THRESHOLD:  The number of connected devices is below privacy threshold of local regulation

        TIME_INTERVAL_NO_DATA_FOUND: Unable to find device count data within the requested time interval
      type: string
      enum:
        - SUPPORTED_AREA
        - PART_OF_AREA_NOT_SUPPORTED
        - AREA_NOT_SUPPORTED
        - DENSITY_BELOW_PRIVACY_THRESHOLD
        - TIME_INTERVAL_NO_DATA_FOUND
    RegionDeviceCountErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    WebRTCXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    WebRTCMediaSessionInformation:
      type: object
      properties:
        originatorAddress:
          $ref: "#/components/schemas/WebRTCAddress"
        originatorName:
          type: string
          description: Friendly name of the call originator
          example: Alice
        receiverAddress:
          $ref: "#/components/schemas/WebRTCAddress"
        receiverName:
          type: string
          description: Friendly name of the call terminator
          example: Bob
        status:
          $ref: "#/components/schemas/WebRTCSessionStatus"
        offer:
          $ref: "#/components/schemas/WebRTCWrtcSDPDescriptor"
        answer:
          $ref: "#/components/schemas/WebRTCWrtcSDPDescriptor"
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular resource representation during a request to create a resource on the server. Note - This allows the client to recover from communication failures during resource creation and therefore avoids re-sending the message in such situations. In case the element is present, the WebRTC GW shall not alter its value, and shall provide it as part of the representation of this resource.
          example: 1c1c3e8d-8f9d-4167-ac78-929ba0b21051
        mediaSessionId:
          type: string
          description: The media session ID created by the network. The mediaSessionId shall not be included in POST requests by the client, but must be included in the notifications from the network to the client device.
          example: 0AEE1B58BAEEDA3EABA42B32EBB3DFE07E9CFF402EAF9EED8EF
        callObjectRef:
          type: string
          description: The reference to the call object
          example: 84c742ba-a117-4e38-a089-1545073ce15c
        serverCorrelator:
          type: string
          description: A correlator that the server instructs the client to use for end to end correlation.
          example: 1492d270-8ca6-4367-9d1b-edd2fbd7f81b
        offerRequired:
          type: boolean
          description: This element shall be included and set to true, if the session updates are received without SDP offer. This element indicates clients to send the offer.
          example: false
        reason:
          type: string
          description: The description of the event that has happened within the session
          example: 183 Progress
        sequenceNumber:
          type: integer
          description: The sequence number of the notification sent to client
          example: 345
    WebRTCWrtcSDPDescriptor:
      type: object
      description: |-
        **OFFER**: An inlined session description in SDP format [RFC4566].If XML syntax
        is used, the content of this element SHALL be embedded in a CDATA
        section.

        **ANSWER**: This type represents an answer in WebRTC Signaling. This element is not
        present in case there is no answer yet, or the session invitation has
        been declined by the Terminating Participant.This element MUST NOT be
        present in a request from the application to the server to create a
        session.
      properties:
        sdp:
          type: string
          description: An inlined session description in SDP format [RFC4566].If XML syntax is used, the content of this element SHALL be embedded in a CDATA section
    WebRTCSessionStatus:
      type: string
      description: Provides the status of the media session. During the session creation, this attribute SHALL NOT be included in the request.
      enum:
        - Initial
        - InProgress
        - Ringing
        - Proceeding
        - Connected
        - Terminated
        - Hold
        - Resume
        - SessionCancelled
        - Declined
        - Failed
        - Waiting
        - NoAnswer
        - NotReachable
        - Busy
      example: Ringing
    WebRTCErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Friendly Code to describe the error
        message:
          type: string
          description: A human readable description of what the event represent
    WebRTCAddress:
      type: string
      description: Subscriber address (Sender or Receiver)
      pattern: ^(tel:\+[0-9]{5,15}|sip:[A-Za-z0-9_.!%+\-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,})$
      example: tel:+11234567899
    ConnectivityInsightsXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    ConnectivityInsightsAdditionalKpis:
      description: additional information about connectivity quality
      type: object
      properties:
        signalStrength:
          description: |
            rough indication of the end user device radio signal conditions
          type: string
          enum:
            - excellent
            - good
            - fair
            - poor
            - no signal
        connectivityType:
          description: |
            the access technology connecting the user device to the operator
            network
          type: string
          enum:
            - 5G-SA
            - 5G-NSA
            - 4G
            - 3G
    ConnectivityInsightsSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
        - startsAt
      properties:
        protocol:
          $ref: "#/components/schemas/ConnectivityInsightsProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: |
            The address to which events shall be delivered using the selected
            protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/ConnectivityInsightsSubscriptionEventType"
        config:
          $ref: "#/components/schemas/ConnectivityInsightsConfig"
        subscriptionId:
          type: string
          description: |
            When this information is contained within an event notification, it SHALL be referred to as `subscriptionId` as per the Commonalities Event Notification Model.
          example: qs15-h556-rt89-1298
        startsAt:
          type: string
          format: date-time
          description: Date when the event subscription will begin/began It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when
            `subscriptionExpireTime` is indicated by API client or Telco
            Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription
            State engine is not mandatory for now. Note not all statuses may
            be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is
              triggered but subscription creation process is not finished
              yet.
              - `ACTIVE`: Subscription creation process is completed.
              Subscription is fully operative.
              - `DEACTIVE`: Subscription is temporarily inactive, but its
              workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active).
              This status applies when subscription is ended due to
              `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer
              active). This status applies when subscription information is
              kept (i.e. subscription workflow is no longer active but its
              metainformation is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - DEACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/HTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/MQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/MQTTSubscriptionResponse"
          AMQP: "#/components/schemas/AMQPSubscriptionResponse"
          NATS: "#/components/schemas/NATSSubscriptionResponse"
          KAFKA: "#/components/schemas/ApacheKafkaSubscriptionResponse"
    ConnectivityInsightsSubscriptionAsync:
      description: |
        Response for a event-type subscription request managed asynchronously
        (Creation or Deletion)
      type: object
      properties:
        subscriptionId:
          $ref: "#/components/schemas/ConnectivityInsightsSubscriptionId"
    ConnectivityInsightsSubscriptionId:
      type: string
      description: |
        When this information is contained within an event notification, it SHALL be referred to as `subscriptionId` as per the Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    ConnectivityInsightsDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.
            The developer can choose to provide the below specified device identifiers:
            * `ipv4Address`
            * `ipv6Address`
            * `phoneNumber`
            * `networkAccessIdentifier`
            NOTE1: the network operator might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different network operators. In this case the identifiers MUST belong to the same device.
            NOTE2: as for this Commonalities release, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/ConnectivityInsightsPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/ConnectivityInsightsDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/ConnectivityInsightsDeviceIpv6Address"
      minProperties: 1
    ConnectivityInsightsNetworkAccessIdentifier:
      description: |
        A public identifier addressing a subscription in a mobile network. In
        3GPP terminology, it corresponds to the GPSI formatted with the
        External Identifier ({Local Identifier}@{Domain Identifier}). Unlike
        the telephone number, the network access identifier is not subjected
        to portability ruling in force, and is individually managed by each
        operator.
      type: string
      example: 123456789@domain.com
    ConnectivityInsightsPhoneNumber:
      description: |
        A public identifier addressing a telephone subscription. In mobile
        networks it corresponds to the MSISDN (Mobile Station International
        Subscriber Directory Number). In order to be globally unique it has to
        be formatted in international format, according to E.164 standard,
        prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    ConnectivityInsightsDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP
        address and port as seen by the application server, or the private
        (local) and any public (observed) IP addresses in use by the device
        (this information can be obtained by various means, for example from
        some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is
        not in use) then  the same address should be specified for both
        publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its
        publicAddress and publicPort, or separately by its allocated IPv6
        address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one
        of either privateAddress or publicPort, dependent upon which is known.
        In general, mobile devices cannot be identified by their public IPv4
        address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/ConnectivityInsightsSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/ConnectivityInsightsSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/ConnectivityInsightsPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    ConnectivityInsightsSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    ConnectivityInsightsDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any
        single IPv6 address from within the subnet allocated to the device
        (e.g. adding ::0 to the /64 prefix).

        The session shall apply to all IP flows between the device subnet and
        the specified application server, unless further restricted by the
        optional parameters devicePorts or applicationServerPorts.
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    ConnectivityInsightsPort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    ConnectivityInsightsPortsSpec:
      description: Specification of several TCP or UDP ports
      type: object
      minProperties: 1
      properties:
        ranges:
          description: Range of TCP or UDP ports
          type: array
          minItems: 1
          items:
            type: object
            required:
              - from
              - to
            properties:
              from:
                $ref: "#/components/schemas/ConnectivityInsightsPort"
              to:
                $ref: "#/components/schemas/ConnectivityInsightsPort"
        ports:
          description: Array of TCP or UDP ports
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ConnectivityInsightsPort"
      example:
        ranges:
          - from: 5010
            to: 5020
        ports:
          - 5060
          - 5070
    ConnectivityInsightsProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: |
        Identifier of a delivery protocol. Only HTTP is allowed for now
      example: HTTP
    ConnectivityInsightsApplicationServer:
      description: |
        A server hosting backend applications to deliver some business logic to
        clients.

        The developer can choose to provide the below specified device
        identifiers:

        * `ipv4Address`
        * `ipv6Address`

        The Operator will use this information to calculate the end to end
        network performance in scenarios where its feasible.
      type: object
      properties:
        ipv4Address:
          $ref: "#/components/schemas/ConnectivityInsightsApplicationServerIpv4Address"
        ipv6Address:
          $ref: "#/components/schemas/ConnectivityInsightsApplicationServerIpv6Address"
      minProperties: 1
    ConnectivityInsightsApplicationServerIpv4Address:
      type: string
      example: 192.168.0.1/24
      description: |
        IPv4 address may be specified in form <address/mask> as:
          - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this
          exact IP number will match the flow control rule.
          - address/mask - an IP number as above with a mask width of the
          form 1.2.3.4/24.
            In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match.
            The bit width MUST be valid for the IP version.
    ConnectivityInsightsApplicationServerIpv6Address:
      type: string
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
      description: |
        IPv6 address may be specified in form <address/mask> as:
          - address - The /128 subnet is optional for single addresses:
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
          - address/mask - an IP v6 number with a mask:
            - 2001:db8:85a3:8d3::0/64
            - 2001:db8:85a3:8d3::/64
    ConnectivityInsightsConfig:
      description: |
        Implementation-specific configuration parameters needed by the
        subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`,
        `subscriptionMaxEvents`, `initialEvent`
        Specific event type attributes must be defined in `subscriptionDetail`
        Note: if a request is performed for several event type, all subscribed
        event will use same `config` parameters.
      type: object
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: "#/components/schemas/ConnectivityInsightsCreateSubscriptionDetail"
        subscriptionExpireTime:
          type: string
          format: date-time
          description: |
            The subscription expiration time (in date-time format) requested by
            the API consumer. Up to API project decision to keep it.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        subscriptionMaxEvents:
          type: integer
          description: |
            Identifies the maximum number of event reports to be generated
            (>=1) requested by the API consumer - Once this number is reached,
            the subscription ends.
            Note on combined usage of `initialEvent` and
            `subscriptionMaxEvents`: If an event is triggered following
            `initialEvent` set to `true`, this event will be counted towards
            `subscriptionMaxEvents`.
          minimum: 1
          example: 5
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as
            soon as the subscription is created and current situation reflects
            event request.
    ConnectivityInsightsSinkCredential:
      type: object
      description: |
        A sink credential provides authentication or authorization information
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/PlainCredential"
          ACCESSTOKEN: "#/components/schemas/AccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/RefreshTokenCredential"
      required:
        - credentialType
    ConnectivityInsightsCreateSubscriptionDetail:
      description: The detail of the requested event subscription
      type: object
      properties:
        device:
          $ref: "#/components/schemas/ConnectivityInsightsDevice"
        applicationServer:
          $ref: "#/components/schemas/ConnectivityInsightsApplicationServer"
        applicationServerPorts:
          description: |
            A list of single ports or port ranges on the application server
          allOf:
            - $ref: "#/components/schemas/ConnectivityInsightsPortsSpec"
        applicationProfileId:
          $ref: "#/components/schemas/ConnectivityInsightsApplicationProfileId"
      required:
        - device
        - applicationProfileId
    ConnectivityInsightsSubscriptionRequest:
      description: The request for creating a event-type event subscription
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/ConnectivityInsightsProtocol"
        sink:
          type: string
          format: uri
          description: |
            The address to which events shall be delivered using the selected
            protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/ConnectivityInsightsSinkCredential"
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/ConnectivityInsightsSubscriptionEventType"
        config:
          $ref: "#/components/schemas/ConnectivityInsightsConfig"
    ConnectivityInsightsNetworkQualityInsight:
      type: object
      description: |
        the network's confidence level at being able to meet the network
        demands of a given application for a given terminal device.
      properties:
        papplicationProfileId:
          $ref: "#/components/schemas/ConnectivityInsightsApplicationProfileId"
        packetDelayBudget:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityThresholdsConfidence"
        targetMinDownstreamRate:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityThresholdsConfidence"
        targetMinUpstreamRate:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityThresholdsConfidence"
        packetlossErrorRate:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityThresholdsConfidence"
        jitter:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityThresholdsConfidence"
        additionalKpis:
          $ref: "#/components/schemas/ConnectivityInsightsAdditionalKpis"
    ConnectivityInsightsNetworkQualityThresholdsConfidence:
      type: string
      description: |
        a plain-language indicator of how confident the network is to meet a
        given network demand.
      enum:
        - meets the application requirements
        - unable to meet the application requirements
    ConnectivityInsightsApplicationProfileId:
      description: Identifier for the Application Profile
      type: string
      format: uuid
    ConnectivityInsightsSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened, as a non-empty
        `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    ConnectivityInsightsCloudEvent:
      description: The Cloud-Event used for the callback.
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          type: string
          description: |
            identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/ConnectivityInsightsSource"
        type:
          $ref: "#/components/schemas/ConnectivityInsightsEventTypeNotification"
        specversion:
          type: string
          description: |
            Version of the specification to which this event conforms (must be
             1.0 if it conforms to cloudevents 1.0.2 version)
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: |
            'media-type that describes the event payload encoding,
            must be "application/json" for CAMARA APIs'
          enum:
            - application/json
        data:
          $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityInsight"
        time:
          $ref: "#/components/schemas/ConnectivityInsightsDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.connectivity-insights-subscriptions.v0.network-quality: "#/components/schemas/ConnectivityInsightsEventNetworkQuality"
          org.camaraproject.connectivityinsights.v0.eventSubscriptionEnded: "#/components/schemas/ConnectivityInsightsEventSubscriptionEnded"
    ConnectivityInsightsEventNetworkQuality:
      description: event structure for Network Quality
      allOf:
        - $ref: "#/components/schemas/ConnectivityInsightsCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectivityInsightsNetworkQualityInsight"
    ConnectivityInsightsEventSubscriptionEnded:
      description: event structure for event subscription ended
      allOf:
        - $ref: "#/components/schemas/ConnectivityInsightsCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectivityInsightsSubscriptionEnded"
    ConnectivityInsightsSubscriptionEnded:
      description: Event detail structure for subscription ended event
      type: object
      required:
        - terminationReason
        - subscriptionId
      properties:
        terminationReason:
          $ref: "#/components/schemas/ConnectivityInsightsTerminationReason"
        subscriptionId:
          $ref: "#/components/schemas/ConnectivityInsightsSubscriptionId"
        terminationDescription:
          description: Explanation why a subscription ended or had to end.
          type: string
    ConnectivityInsightsTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by
        the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the
        requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by
        the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    ConnectivityInsightsDateTime:
      type: string
      format: date-time
      description: |
        Timestamp of when the occurrence happened.
        It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
      example: "2023-07-03T12:27:08.312Z"
    ConnectivityInsightsEventTypeNotification:
      type: string
      description: |
        event-type - Event triggered when an event-type event occurred
        subscription-ended: Event triggered when the subscription ends
      enum:
        - org.camaraproject.connectivity-insights-subscriptions.v0.network-quality
        - org.camaraproject.connectivity-insights-subscriptions.v0.subscription-ended
    ConnectivityInsightsSubscriptionEventType:
      type: string
      description: |
        event-type - Event triggered when an event-type event occurred
      enum:
        - org.camaraproject.connectivity-insights-subscriptions.v0.network-quality
    ConnectivityInsightsErrorInfo:
      type: object
      description: Error information
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    QualityOnDemandXCorrelator:
      description: Value for the x-correlator
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    QualityOnDemandQosProfile:
      description: |
        Data type with attributes of a QosProfile
      type: object
      properties:
        name:
          $ref: "#/components/schemas/QualityOnDemandQosProfileName"
        description:
          description: |
            A description of the QoS profile.
          type: string
          example: QoS profile for video streaming
        status:
          $ref: "#/components/schemas/QualityOnDemandQosProfileStatusEnum"
        countryAvailability:
          description: |
            A list of countries, and optionally networks, for which the API provider makes the profile available.
            - When profiles are filtered for a specific device (i.e. using a 3-legged access token or an explicit device filter parameter), the profile can be used by that device in any of these countries when connected to any of the listed networks (assuming roaming is permitted for networks that are not the device's home network), or the API provider's own network if no networks are listed
            - When there is no device filter, availability for a given country means that the QoS profile may be available to some devices connected to the listed networks in that country (or to the API provider’s default network if none are listed). However, this does not imply that the profile is available to all devices, or that a particular device will be able to use the profile across all listed countries or networks. In particular, the response does not provide enough information to determine availability for roaming for specific devices; consumers should query the API with a specific device identifier to get definitive availability.
            - If this field is not present in the QoS profile, no assumption can be made about the availability of the profile in any given country or for any given network
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandAvailability"
        targetMinUpstreamRate:
          description: |
            This is the target minimum upload speed for the QoS profile.
            It represents the minimum rate that the network attempts to deliver.
            Please note that this is a target value—the network might not always be able to provide this rate under all conditions.
            It helps ensure that applications like video calls or live streaming perform consistently.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        maxUpstreamRate:
          description: |
            The maximum best effort data
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        maxUpstreamBurstRate:
          description: |
            When defined, this is the maximum upstream burst rate for the QoS profile, that will enable
            the network to burst data at a higher rate than the maxUpstreamRate for a period of time.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        targetMinDownstreamRate:
          description: |
            This is the target maximum upload speed for the QoS profile.
            It represents the maximum rate that the network attempts to deliver.
            Please note that this is a target value—the network might not always be able to provide this rate under all conditions.
            It helps ensure that applications like video calls or live streaming perform consistently.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        maxDownstreamRate:
          description: |
            The maximum best effort rate
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        maxDownstreamBurstRate:
          description: |
            When defined, this is the maximum downstream burst rate for the QoS profile, that will enable
            the network to burst data at a higher rate than the maxDownstreamRate for a period of time.
            This can result in improved user experience when there is additional network capacity.
            For instance, when a user is streaming a video, the network can burst data at a higher rate
            to fill the buffer, and then return to the maxUpstreamRate once the buffer is full.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandRate"
        minDuration:
          description: |
            The shortest time period that this profile can be deployed.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandDuration"
        maxDuration:
          description: |
            The maximum time period that this profile can be deployed.
            Overall session duration must not exceed this value. This includes the initial requested duration plus any extensions.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandDuration"
        priority:
          type: integer
          example: 20
          description: |
            Priority levels allow efficient resource allocation and ensure optimal performance
            for various services in each technology, with the highest priority traffic receiving
            preferential treatment.
            The lower value the higher priority.
            Not all access networks use the same priority range, so this priority will be
            scaled to the access network's priority range.
          format: int32
          minimum: 1
          maximum: 100
        packetDelayBudget:
          description: |
            The packet delay budget is the maximum allowable one-way latency between the customer's device
            and the gateway from the operator's network to other networks. By limiting the delay, the network
            can provide an acceptable level of performance for various services, such as voice calls,
            video streaming, and data.
            The end-to-end or round trip latency will be about two times this value plus the latency not controlled
            by the operator
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandDuration"
        jitter:
          description: |
            The jitter requirement aims to limit the maximum variation in round-trip
            packet delay for the 99th percentile of traffic, following ITU Y.1540
            standards. It considers only acknowledged packets in a session, which are
            packets that receive a confirmation of receipt from the recipient (e.g.,
            using TCP). This requirement helps maintain consistent latency, essential
            for real-time applications such as VoIP, video calls, and gaming.
          allOf:
            - $ref: "#/components/schemas/QualityOnDemandDuration"
        packetErrorLossRate:
          type: integer
          description: |
            This field specifies the acceptable level of data loss during transmission.
            The value is an exponent of 10, so a value of 3 means that up to 10⁻³, or 0.1%, of the
            data packets may be lost. This setting is part of a broader system that categorizes
            different types of network traffic (like phone calls, video streams, or data transfers)
            to ensure they perform reliably on the network.
          format: int32
          minimum: 1
          maximum: 10
          example: 3
        l4sQueueType:
          type: string
          enum:
            - non-l4s-queue
            - l4s-queue
            - mixed-queue
          description: |

            **NOTE**: l4sQueueType is experimental and could change or be removed in a future release.

            Specifies the type of queue for L4S (Low Latency, Low Loss, Scalable Throughput) traffic management. L4S is an advanced queue management approach designed to provide ultra-low latency and high throughput for internet traffic, particularly beneficial for interactive applications such as gaming, video conferencing, and virtual reality.

            **Queue Type Descriptions:**

            - **non-l4s-queue**:
              A traditional queue used for legacy internet traffic that does not utilize L4S enhancements. It provides standard latency and throughput levels.

            - **l4s-queue**:
              A dedicated queue optimized for L4S traffic, delivering ultra-low latency, low loss, and scalable throughput to support latency-sensitive applications.

            - **mixed-queue**:
              A shared queue that can handle both L4S and traditional traffic, offering a balance between ultra-low latency for L4S flows and compatibility with non-L4S flows.
          externalDocs:
            description: For more details, refer to the L4S standard.
            url: https://datatracker.ietf.org/doc/rfc9330/
        serviceClass:
          type: string
          description: |

            **NOTE**: serviceClass is experimental and could change or be removed in a future release.

            The name of a Service Class, representing a QoS Profile designed to provide optimized behavior for a specific application type. While DSCP values are commonly associated with Service Classes, their use may vary across network segments and may not be applied throughout the entire end-to-end QoS session. This aligns with the serviceClass concept used in HomeDevicesQoQ for consistent terminology.

            Service classes define specific QoS behaviors that map to DSCP (Differentiated Services Code Point) values or Microsoft QoS traffic types.

            The supported mappings are:
            1. Values aligned with the [RFC4594](https://datatracker.ietf.org/doc/html/rfc4594) guidelines for differentiated traffic classes.
            2. Microsoft [QOS_TRAFFIC_TYPE](https://learn.microsoft.com/en-us/windows/win32/api/qos2/ne-qos2-qos_traffic_type) values for Windows developers.

            **Supported Service Classes**:

            | Service Class Name    | DSCP Name | DSCP value (decimal) | DCSP value (binary) | Microsoft Value | Application Examples                                                 |
            |-----------------------|-----------|----------------------|---------------------|-----------------|----------------------------------------------------------------------|
            | Microsoft Voice       |    CS7    |          56          |        111000       |       4,5       | Microsoft QOSTrafficTypeVoice and QOSTrafficTypeControl              |
            | Microsoft Audio/Video |    CS5    |          40          |        101000       |       2,3       | Microsoft QOSTrafficTypeExcellentEffort and QOSTrafficTypeAudioVideo |
            | Real-Time Interactive |    CS4    |          32          |        100000       |                 | Video conferencing and Interactive gaming                            |
            | Multimedia Streaming  |    AF31   |          26          |        011010       |                 | Streaming video and audio on demand                                  |
            | Broadcast Video       |    CS3    |          24          |        011000       |                 | Broadcast TV & live events                                           |
            | Low-Latency Data      |    AF21   |          18          |        010010       |                 | Client/server transactions Web-based ordering                        |
            | High-Throughput Data  |    AF11   |          10          |        001010       |                 | Store and forward applications                                       |
            | Low-Priority Data     |    CS1    |           8          |        001000       |        1        | Any flow that has no BW assurance - also:                            |
            |                       |           |                      |                     |                 | Microsoft QOSTrafficTypeBackground                                   |
            | Standard              |  DF(CS0)  |           0          |        000000       |        0        | Undifferentiated applications - also:                                |
            |                       |           |                      |                     |                 | Microsoft QOSTrafficTypeBestEffort                                   |
          enum:
            - microsoft_voice
            - microsoft_audio_video
            - real_time_interactive
            - multimedia_streaming
            - broadcast_video
            - low_latency_data
            - high_throughput_data
            - low_priority_data
            - standard
          example: real_time_interactive
      required:
        - name
        - status
    QualityOnDemandQosProfileName:
      description: |
        A unique name for identifying a specific QoS profile.
        This may follow different formats depending on the service providers implementation.
        Some options addresses:
          - A UUID style string
          - Support for predefined profile names like `QOS_E`, `QOS_S`, `QOS_M`, and `QOS_L`
          - A searchable descriptive name
      type: string
      example: voice
      minLength: 3
      maxLength: 256
      format: string
      pattern: ^[a-zA-Z0-9_.-]+$
    QualityOnDemandRate:
      description: Specification of rate
      type: object
      properties:
        value:
          description: Quantity of rate
          type: integer
          example: 10
          format: int32
          minimum: 0
          maximum: 1024
        unit:
          $ref: "#/components/schemas/QualityOnDemandRateUnitEnum"
    QualityOnDemandDuration:
      description: Specification of duration
      type: object
      properties:
        value:
          description: Quantity of duration
          type: integer
          example: 12
          format: int32
          minimum: 1
        unit:
          $ref: "#/components/schemas/QualityOnDemandTimeUnitEnum"
    QualityOnDemandTimeUnitEnum:
      description: Units of time
      type: string
      enum:
        - Days
        - Hours
        - Minutes
        - Seconds
        - Milliseconds
        - Microseconds
        - Nanoseconds
    QualityOnDemandQosProfileStatusEnum:
      description: |
        The current status of the QoS Profile
        - `ACTIVE`- QoS Profile is available to be used
        - `INACTIVE`- QoS Profile is not currently available to be deployed
        - `DEPRECATED`- QoS profile is actively being used in a QoD session, but can not be deployed in new QoD sessions
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DEPRECATED
    QualityOnDemandRateUnitEnum:
      description: Units of rate
      type: string
      enum:
        - bps
        - kbps
        - Mbps
        - Gbps
        - Tbps
    QualityOnDemandQosProfileDeviceRequest:
      description: |
        Request object for QoS Profiles for a given device
      type: object
      properties:
        device:
          $ref: "#/components/schemas/QualityOnDemandDevice"
        name:
          $ref: "#/components/schemas/QualityOnDemandQosProfileName"
        status:
          $ref: "#/components/schemas/QualityOnDemandQosProfileStatusEnum"
    QualityOnDemandAvailability:
      description: A list of countries, and optionally networks, for which the API provider makes the profile available
      type: array
      items:
        type: object
        required:
          - countryName
        properties:
          countryName:
            description: The two letter ISO 3166-2 country code for the country in which the QoS profile is available in at least one network
            type: string
            pattern: ^[A-Z]{2}$
            example: GB
          networks:
            description: A list of networks within the country for which the QoS profile is available from the API provider
            type: array
            items:
              description: The network identifier. For mobile networks, this is the PLMN Identifier (MCC + MNC), which is a 5 or 6 digit integer.
              type: string
              example: "23591"
            example:
              - "23591"
              - "23415"
        example:
          countryName: GB
          networks:
            - "23591"
            - "23415"
      example:
        - countryName: GB
          networks:
            - "23591"
            - "23415"
        - countryName: DE
          networks:
            - "26202"
    QualityOnDemandDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        NOTE1: the network operator might support only a subset of these options. The API consumer can provide multiple identifiers to be compatible across different operators. In this case the identifiers MUST belong to the same device.
        NOTE2: as for this Commonalities release, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/QualityOnDemandPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/QualityOnDemandNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/QualityOnDemandDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/QualityOnDemandDeviceIpv6Address"
      minProperties: 1
    QualityOnDemandNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    QualityOnDemandPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    QualityOnDemandDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/QualityOnDemandSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/QualityOnDemandSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/QualityOnDemandPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 203.0.113.0
        publicPort: 59765
    QualityOnDemandPort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    QualityOnDemandSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 203.0.113.0
    QualityOnDemandDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).

        The session shall apply to all IP flows between the device subnet and the specified application server, unless further restricted by the optional parameters devicePorts or applicationServerPorts.
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    QualityOnDemandErrorInfo:
      description: Common schema for errors
      type: object
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
      required:
        - status
        - code
        - message
    DeviceIdentifierCommonResponseBody:
      description: |
        Common parameters to be included in all responses
      properties:
        device:
          description: The device subscription identifier that was used to identify the device whose identifier is being returned. If this property is not present, then the device subscription identifier specified in the request was used.
          allOf:
            - $ref: "#/components/schemas/DeviceIdentifierDeviceResponse"
            - example:
                phoneNumber: "+123456789"
        lastChecked:
          description: |
            Date and time that the information was last confirmed by the mobile operator to be correct. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          type: string
          format: date-time
          example: "2024-02-20T10:41:38.657Z"
    DeviceIdentifierDeviceIdentifier:
      description: |
        The individual physical mobile device identifier, as expressed by the IMEI and IMEISV
      type: object
      properties:
        imeisv:
          type: string
          description: IMEISV of the device
          example: "49015420323751800"
        imei:
          type: string
          description: IMEI of the device
          example: "4901542032375181"
    DeviceIdentifierDeviceType:
      description: |
        The physical device type, as expressed by Type Approval Code, manufacturer name and model name
      type: object
      properties:
        tac:
          type: string
          description: IMEI TAC of the device
          example: "49015420"
        model:
          type: string
          description: Model of the device
          example: "3110"
        manufacturer:
          type: string
          description: Manufacturer of the device
          example: Nokia
    DeviceIdentifierDevicePPID:
      description: |
        The individual physical mobile device identifier, expressed as a PPID (Pairwise Pseudonymous Identifier)
      type: object
      properties:
        ppid:
          type: string
          description: A PPID for the identified physical device
          example: b083f65ccdad365d7489fff24b6d5074b30c12b6d81db3404d25964ffd908813
    DeviceIdentifierDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.
        The developer can choose to provide the below specified device identifiers:
        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`
        NOTE 1: The MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.
        NOTE 2: For the current Commonalities release, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceIdentifierPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/DeviceIdentifierNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/DeviceIdentifierDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/DeviceIdentifierDeviceIpv6Address"
      minProperties: 1
    DeviceIdentifierDeviceResponse:
      description: |
        An identifier for the end-user equipment able to connect to the network that the response refers to. This parameter is only returned when the API consumer includes the `device` parameter in their request (i.e. they are using a two-legged access token), and is relevant when more than one device identifier is specified, as only one of those device identifiers is allowed in the response.

        If the API consumer provides more than one device identifier in their request, the API provider must return a single identifier which is the one they are using to fulfil the request, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
      allOf:
        - $ref: "#/components/schemas/DeviceIdentifierDevice"
        - maxProperties: 1
    DeviceIdentifierDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/DeviceIdentifierSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/DeviceIdentifierSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/DeviceIdentifierPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    DeviceIdentifierErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    DeviceIdentifierNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    DeviceIdentifierPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    DeviceIdentifierPort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    DeviceIdentifierRequestBody:
      description: Common request body to allow optional Device object to be passed
      type: object
      properties:
        device:
          $ref: "#/components/schemas/DeviceIdentifierDevice"
    DeviceIdentifierSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    DeviceIdentifierDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    DeviceIdentifierXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    SimSwapXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    SimSwapPhoneNumber:
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
    SimSwapErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    SimSwapSubscriptionRequest:
      description: The request for creating a sim swap event subscription
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/SimSwapProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/SimSwapSinkCredential"
        types:
          description: |
            Camara Event types eligible for subscription:
            - org.camaraproject.sim-swap-subscriptions.v0.swapped: receive a notification when a sim swap is performed on the line.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/SimSwapSubscriptionEventType"
        config:
          $ref: "#/components/schemas/SimSwapConfig"
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/SimSwapHTTPSubscriptionRequest"
          MQTT3: "#/components/schemas/SimSwapMQTTSubscriptionRequest"
          MQTT5: "#/components/schemas/SimSwapMQTTSubscriptionRequest"
          AMQP: "#/components/schemas/SimSwapAMQPSubscriptionRequest"
          NATS: "#/components/schemas/SimSwapNATSSubscriptionRequest"
          KAFKA: "#/components/schemas/SimSwapApacheKafkaSubscriptionRequest"
    SimSwapSubscriptionEventType:
      type: string
      description: |
        swapped - Event triggered when a sim swap occurs on the line
      enum:
        - org.camaraproject.sim-swap-subscriptions.v0.swapped
    SimSwapProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: Identifier of a delivery protocol. Only HTTP is allowed for now
      example: HTTP
    SimSwapConfig:
      description: |
        Implementation-specific configuration parameters needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime` or `subscriptionMaxEvents` to limit subscription lifetime.
        Event type attributes must be defined in `subscriptionDetail`
      type: object
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: "#/components/schemas/SimSwapCreateSubscriptionDetail"
        subscriptionExpireTime:
          type: string
          format: date-time
          example: "2025-01-17T13:18:23.682Z"
          description: The subscription expiration time (in date-time format) requested by the API consumer. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
        subscriptionMaxEvents:
          type: integer
          description: |
            Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
          minimum: 1
          example: 5
    SimSwapSinkCredential:
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: The type of the credential. With the current API version the type MUST be set to ACCESSTOKEN.
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/SimSwapPlainCredential"
          ACCESSTOKEN: "#/components/schemas/SimSwapAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/SimSwapRefreshTokenCredential"
      required:
        - credentialType
    SimSwapPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/SimSwapSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    SimSwapAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/SimSwapSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    SimSwapRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/SimSwapSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    SimSwapSubscriptionDetail:
      description: The detail of the requested event subscription
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/SimSwapPhoneNumber"
    SimSwapCreateSubscriptionDetail:
      description: The detail of the requested event subscription
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/SimSwapPhoneNumber"
    SimSwapSimSwapNotificationEventType:
      type: string
      description: |
        swapped - Event triggered when a sim swap was performed for this phone number

        - subscription-started: Event triggered when the subscription starts
        - subscription-updated: Event triggered when the subscription is updated
        - subscription-ended: Event triggered when the subscription ends
      enum:
        - org.camaraproject.sim-swap-subscriptions.v0.swapped
        - org.camaraproject.api-name.v0.subscription-started
        - org.camaraproject.api-name.v0.subscription-updated
        - org.camaraproject.sim-swap-subscriptions.v0.subscription-ended
    SimSwapSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
      properties:
        protocol:
          $ref: "#/components/schemas/SimSwapProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible for subscription:
            - org.camaraproject.sim-swap-subscriptions.v0.swapped: receive a notification when a sim swap is performed on the line.
            Note: for the Commonalities meta-release v0.4 we enforce to have only event type per subscription then for following meta-release use of array MUST be decided
            at API project level.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/SimSwapSubscriptionEventType"
        config:
          $ref: "#/components/schemas/SimSwapConfig"
        id:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
        startsAt:
          description: |
            Date when the event subscription will begin/began
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          type: string
          format: date-time
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its metainformation is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/SimSwapHTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/SimSwapMQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/SimSwapMQTTSubscriptionResponse"
          AMQP: "#/components/schemas/SimSwapAMQPSubscriptionResponse"
          NATS: "#/components/schemas/SimSwapNATSSubscriptionResponse"
          KAFKA: "#/components/schemas/SimSwapApacheKafkaSubscriptionResponse"
    SimSwapSubscriptionAsync:
      description: Response for a event-type subscription request managed asynchronously (Creation or Deletion)
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
    SimSwapSubscriptionId:
      type: string
      description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    SimSwapCloudEvent:
      description: The notification callback
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          type: string
          description: identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/SimSwapSource"
        type:
          $ref: "#/components/schemas/SimSwapSimSwapNotificationEventType"
        specversion:
          type: string
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs
          enum:
            - application/json
        data:
          type: object
          description: Event details payload described in each CAMARA API and referenced by its type
        time:
          $ref: "#/components/schemas/SimSwapDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.sim-swap-subscriptions.v0.swapped: "#/components/schemas/SimSwapEventSimSwap"
          org.camaraproject.sim-swap-subscriptions.v0.subscription-started: "#/components/schemas/SimSwapEventSubscriptionStarted"
          org.camaraproject.sim-swap-subscriptions.v0.subscription-updated: "#/components/schemas/SimSwapEventSubscriptionUpdated"
          org.camaraproject.sim-swap-subscriptions.v0.subscription-ended: "#/components/schemas/SimSwapEventSubscriptionEnded"
    SimSwapSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened, as a non-empty `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    SimSwapDateTime:
      type: string
      format: date-time
      description: Timestamp of when the occurrence happened. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
      example: "2018-04-05T17:31:00Z"
    SimSwapEventSimSwap:
      description: event structure for event sim swapped
      allOf:
        - $ref: "#/components/schemas/SimSwapCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/SimSwapSwapped"
    SimSwapEventSubscriptionStarted:
      description: event structure for event subscription started
      allOf:
        - $ref: "#/components/schemas/SimSwapCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/SimSwapSubscriptionStarted"
    SimSwapSubscriptionStarted:
      description: Event detail structure for subscription started event
      type: object
      required:
        - initiationReason
        - subscriptionId
      properties:
        initiationReason:
          $ref: "#/components/schemas/SimSwapInitiationReason"
        subscriptionId:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
        initiationDescription:
          type: string
    SimSwapInitiationReason:
      type: string
      description: |
        - SUBSCRIPTION_CREATED - Subscription created by API Server
      enum:
        - SUBSCRIPTION_CREATED
    SimSwapEventSubscriptionUpdated:
      description: event structure for event subscription updated
      allOf:
        - $ref: "#/components/schemas/SimSwapCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/SimSwapSubscriptionUpdated"
    SimSwapSubscriptionUpdated:
      description: Event detail structure for subscription updated event
      type: object
      required:
        - updateReason
        - subscriptionId
      properties:
        updateReason:
          $ref: "#/components/schemas/SimSwapUpdateReason"
        subscriptionId:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
        updateDescription:
          type: string
    SimSwapUpdateReason:
      type: string
      description: |
        - SUBSCRIPTION_ACTIVE - API server transitioned susbcription status to `ACTIVE`
        - SUBSCRIPTION_INACTIVE - API server transitioned susbcription status to `INACTIVE`
      enum:
        - SUBSCRIPTION_ACTIVE
        - SUBSCRIPTION_INACTIVE
    SimSwapEventSubscriptionEnded:
      description: event structure for event subscription ended
      allOf:
        - $ref: "#/components/schemas/SimSwapCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/SimSwapSubscriptionEnded"
    SimSwapSwapped:
      description: Event detail structure for ROAMING_ON & ROAMING_OFF event
      type: object
      required:
        - subscriptionId
      properties:
        phoneNumber:
          $ref: "#/components/schemas/SimSwapPhoneNumber"
        subscriptionId:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
    SimSwapSubscriptionEnded:
      description: Event detail structure for subscription ended event
      type: object
      required:
        - terminationReason
        - subscriptionId
      properties:
        terminationReason:
          $ref: "#/components/schemas/SimSwapTerminationReason"
        subscriptionId:
          $ref: "#/components/schemas/SimSwapSubscriptionId"
        terminationDescription:
          description: Explanation why a subscription ended or had to end.
          type: string
    SimSwapTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    SimSwapHTTPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapHTTPSettings"
    SimSwapHTTPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapHTTPSettings"
    SimSwapHTTPSettings:
      type: object
      properties:
        headers:
          type: object
          description: |-
            A set of key/value pairs that is copied into the HTTP request as custom headers.

            NOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.
          additionalProperties:
            type: string
        method:
          type: string
          description: The HTTP method to use for sending the message.
          enum:
            - POST
    SimSwapMQTTSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapMQTTSettings"
    SimSwapMQTTSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapMQTTSettings"
    SimSwapMQTTSettings:
      type: object
      properties:
        topicName:
          type: string
        qos:
          type: integer
          format: int32
        retain:
          type: boolean
        expiry:
          type: integer
          format: int32
        userProperties:
          type: object
      required:
        - topicName
    SimSwapAMQPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapAMQPSettings"
    SimSwapAMQPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapAMQPSettings"
    SimSwapAMQPSettings:
      type: object
      properties:
        address:
          type: string
        linkName:
          type: string
        senderSettlementMode:
          type: string
          enum:
            - settled
            - unsettled
        linkProperties:
          type: object
          additionalProperties:
            type: string
    SimSwapApacheKafkaSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapApacheKafkaSettings"
    SimSwapApacheKafkaSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapApacheKafkaSettings"
    SimSwapApacheKafkaSettings:
      type: object
      properties:
        topicName:
          type: string
        partitionKeyExtractor:
          type: string
        clientId:
          type: string
        ackMode:
          type: integer
      required:
        - topicName
    SimSwapNATSSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapNATSSettings"
    SimSwapNATSSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/SimSwapSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/SimSwapNATSSettings"
    SimSwapNATSSettings:
      type: object
      properties:
        subject:
          type: string
      required:
        - subject
    DeviceRoamingStatusErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    DeviceRoamingStatusSubscriptionRequest:
      description: The request for creating a event-type event subscription
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceRoamingStatusProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/DeviceRoamingStatusSinkCredential"
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: for the current Commonalities version (v0.5) only one event type per subscription is allowed, yet in the following releases use of array of event types SHALL be specified without changing this definition.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceRoamingStatusConfig"
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceRoamingStatusHTTPSubscriptionRequest"
          MQTT3: "#/components/schemas/DeviceRoamingStatusMQTTSubscriptionRequest"
          MQTT5: "#/components/schemas/DeviceRoamingStatusMQTTSubscriptionRequest"
          AMQP: "#/components/schemas/DeviceRoamingStatusAMQPSubscriptionRequest"
          NATS: "#/components/schemas/DeviceRoamingStatusNATSSubscriptionRequest"
          KAFKA: "#/components/schemas/DeviceRoamingStatusApacheKafkaSubscriptionRequest"
    DeviceRoamingStatusProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: Identifier of a delivery protocol. Only HTTP is allowed for now
      example: HTTP
    DeviceRoamingStatusConfig:
      description: |
        Implementation-specific configuration parameters needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`
        Specific event type attributes must be defined in `subscriptionDetail`
        Note: if a request is performed for several event type, all subscribed event will use same `config` parameters.
      type: object
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: "#/components/schemas/DeviceRoamingStatusCreateSubscriptionDetail"
        subscriptionExpireTime:
          type: string
          format: date-time
          example: "2023-01-17T13:18:23.682Z"
          description: The subscription expiration time (in date-time format) requested by the API consumer. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
        subscriptionMaxEvents:
          type: integer
          description: Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
          minimum: 1
          example: 5
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.
            Example: Consumer request Roaming event. If consumer sets initialEvent to true and device is in roaming situation, an event is triggered.
    DeviceRoamingStatusSinkCredential:
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/DeviceRoamingStatusPlainCredential"
          ACCESSTOKEN: "#/components/schemas/DeviceRoamingStatusAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/DeviceRoamingStatusRefreshTokenCredential"
      required:
        - credentialType
    DeviceRoamingStatusPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    DeviceRoamingStatusAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    DeviceRoamingStatusRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    DeviceRoamingStatusCreateSubscriptionDetail:
      description: The detail of the requested event subscription.
      type: object
      properties:
        device:
          $ref: "#/components/schemas/DeviceRoamingStatusDevice"
    DeviceRoamingStatusEventTypeNotification:
      type: string
      description: |
        roaming-status - Event triggered when the device switch from roaming ON to roaming OFF and conversely

        roaming-on - Event triggered when the device switch from roaming OFF to roaming ON

        roaming-off - Event triggered when the device switch from roaming ON to roaming OFF

        roaming-change-country - Event triggered when the device in roaming change country code

        subscription-started - Event triggered when the subscription starts.

        subscription-updated - Event triggered when the subscription is updated.

        subscription-ended - Event triggered when the subscription ends
      enum:
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-off
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-change-country
        - org.camaraproject.device-roaming-status-subscriptions.v0.subscription-started
        - org.camaraproject.device-roaming-status-subscriptions.v0.subscription-updated
        - org.camaraproject.device-roaming-status-subscriptions.v0.subscription-ended
    DeviceRoamingStatusSubscriptionEventType:
      type: string
      description: |
        roaming-status - Event triggered when the device switch from roaming ON to roaming OFF and conversely

        roaming-on - Event triggered when the device switch from roaming OFF to roaming ON

        roaming-off - Event triggered when the device switch from roaming ON to roaming OFF

        roaming-change-country - Event triggered when the device in roaming change country code
      enum:
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-off
        - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-change-country
    DeviceRoamingStatusSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceRoamingStatusProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: for the Commonalities meta-release v0.4 we enforce to have only event type per subscription then for following meta-release use of array MUST be decided
             at API project level.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceRoamingStatusConfig"
        id:
          $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
        startsAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will begin/began
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceRoamingStatusHTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/DeviceRoamingStatusMQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/DeviceRoamingStatusMQTTSubscriptionResponse"
          AMQP: "#/components/schemas/DeviceRoamingStatusAMQPSubscriptionResponse"
          NATS: "#/components/schemas/DeviceRoamingStatusNATSSubscriptionResponse"
          KAFKA: "#/components/schemas/DeviceRoamingStatusApacheKafkaSubscriptionResponse"
      example:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceRoamingStatusDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`

        NOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceRoamingStatusPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/DeviceRoamingStatusNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/DeviceRoamingStatusDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/DeviceRoamingStatusDeviceIpv6Address"
      minProperties: 1
    DeviceRoamingStatusDeviceResponse:
      description: |
        An identifier for the end-user equipment able to connect to the network that the response refers to. This parameter is only returned when the API consumer includes the `device` parameter in their request (i.e. they are using a two-legged access token), and is relevant when more than one device identifier is specified, as only one of those device identifiers is allowed in the response.

        If the API consumer provides more than one device identifier in their request, the API provider must return a single identifier which is the one they are using to fulfil the request, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusDevice"
        - maxProperties: 1
    DeviceRoamingStatusPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    DeviceRoamingStatusNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    DeviceRoamingStatusDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/DeviceRoamingStatusSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/DeviceRoamingStatusSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/DeviceRoamingStatusPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    DeviceRoamingStatusSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    DeviceRoamingStatusPort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    DeviceRoamingStatusDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    DeviceRoamingStatusCountryCode:
      description: The Mobile country code (MCC) as an geographic region identifier for the country and the dependent areas.
      type: integer
    DeviceRoamingStatusCountryName:
      description: The ISO 3166 ALPHA-2 country-codes of mapped to mobile country code(MCC). If there is mapping of one MCC to multiple countries, then we have list of countries. If there is no mapping of MCC to any country, then an empty array [] shall be returned..
      type: array
      items:
        type: string
    DeviceRoamingStatusSubscriptionAsync:
      description: Response for a device reachability status operation managed asynchronously (Creation or Deletion)
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
    DeviceRoamingStatusSubscriptionId:
      type: string
      description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    DeviceRoamingStatusCloudEvent:
      description: The notification callback
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          type: string
          description: identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/DeviceRoamingStatusSource"
        type:
          $ref: "#/components/schemas/DeviceRoamingStatusEventTypeNotification"
        specversion:
          type: string
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs
          enum:
            - application/json
        data:
          type: object
          description: Event details payload described in each CAMARA API and referenced by its type
        time:
          $ref: "#/components/schemas/DeviceRoamingStatusDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status: "#/components/schemas/DeviceRoamingStatusEventRoamingStatus"
          org.camaraproject.device-roaming-status-subscriptions.v0.roaming-change-country: "#/components/schemas/DeviceRoamingStatusEventRoamingChangeCountry"
          org.camaraproject.device-roaming-status-subscriptions.v0.roaming-off: "#/components/schemas/DeviceRoamingStatusEventRoamingOff"
          org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on: "#/components/schemas/DeviceRoamingStatusEventRoamingOn"
          org.camaraproject.device-roaming-status-subscriptions.v0.subscription-started: "#/components/schemas/DeviceRoamingStatusEventSubscriptionStarted"
          org.camaraproject.device-roaming-status-subscriptions.v0.subscription-updated: "#/components/schemas/DeviceRoamingStatusEventSubscriptionUpdated"
          org.camaraproject.device-roaming-status-subscriptions.v0.subscription-ended: "#/components/schemas/DeviceRoamingStatusEventSubscriptionEnded"
    DeviceRoamingStatusSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened - be a non-empty `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    DeviceRoamingStatusDateTime:
      type: string
      format: date-time
      description: Timestamp of when the occurrence happened. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
      example: "2018-04-05T17:31:00Z"
    DeviceRoamingStatusEventRoamingStatus:
      description: event structure for roaming status change
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusRoamingStatus"
    DeviceRoamingStatusEventRoamingOn:
      description: event structure for roaming on change
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusBasicDeviceEventData"
    DeviceRoamingStatusEventRoamingOff:
      description: event structure for roaming off change
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusBasicDeviceEventData"
    DeviceRoamingStatusEventRoamingChangeCountry:
      description: event structure for roaming change country
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusRoamingChangeCountry"
    DeviceRoamingStatusEventSubscriptionEnded:
      description: Event structure for sending subscription-ended event
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionEnded"
    DeviceRoamingStatusEventSubscriptionStarted:
      description: Event structure for event subscription started
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionStarted"
    DeviceRoamingStatusSubscriptionStarted:
      description: Event detail structure for subscription started event
      type: object
      required:
        - initiationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceRoamingStatusDevice"
        initiationReason:
          $ref: "#/components/schemas/DeviceRoamingStatusInitiationReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
        initiationDescription:
          description: Description about the start of the subscription.
          type: string
    DeviceRoamingStatusInitiationReason:
      type: string
      description: |
        - SUBSCRIPTION_CREATED - Subscription created by API Server
      enum:
        - SUBSCRIPTION_CREATED
    DeviceRoamingStatusEventSubscriptionUpdated:
      description: Event structure for event subscription updated
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionUpdated"
    DeviceRoamingStatusSubscriptionUpdated:
      description: Event detail structure for subscription updated event
      type: object
      required:
        - updateReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceRoamingStatusDevice"
        updateReason:
          $ref: "#/components/schemas/DeviceRoamingStatusUpdateReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
        updateDescription:
          description: Description about the subscription update.
          type: string
    DeviceRoamingStatusUpdateReason:
      type: string
      description: |
        - SUBSCRIPTION_ACTIVE - API server transitioned subscription status to `ACTIVE`
        - SUBSCRIPTION_INACTIVE - API server transitioned subscription status to `INACTIVE`
      enum:
        - SUBSCRIPTION_ACTIVE
        - SUBSCRIPTION_INACTIVE
    DeviceRoamingStatusBasicDeviceEventData:
      description: Event detail structure for basic device events
      type: object
      required:
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceRoamingStatusDeviceResponse"
        subscriptionId:
          $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
    DeviceRoamingStatusRoamingStatus:
      description: Event detail structure for org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status event
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusBasicDeviceEventData"
        - type: object
          required:
            - roaming
          properties:
            roaming:
              type: boolean
              description: Roaming status. True, if it is roaming.
            countryCode:
              $ref: "#/components/schemas/DeviceRoamingStatusCountryCode"
            countryName:
              $ref: "#/components/schemas/DeviceRoamingStatusCountryName"
    DeviceRoamingStatusRoamingChangeCountry:
      description: Event detail structure for org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on event
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusBasicDeviceEventData"
        - type: object
          required:
            - countryCode
            - countryName
          properties:
            countryCode:
              $ref: "#/components/schemas/DeviceRoamingStatusCountryCode"
            countryName:
              $ref: "#/components/schemas/DeviceRoamingStatusCountryName"
    DeviceRoamingStatusSubscriptionEnded:
      description: Event detail structure for org.camaraproject.device-roaming-status-subscriptions.v0.subscription-ended event
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusBasicDeviceEventData"
        - type: object
          required:
            - countryCode
      required:
        - terminationReason
      properties:
        terminationReason:
          $ref: "#/components/schemas/DeviceRoamingStatusTerminationReason"
        terminationDescription:
          type: string
    DeviceRoamingStatusTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    DeviceRoamingStatusHTTPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusHTTPSettings"
    DeviceRoamingStatusHTTPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusHTTPSettings"
    DeviceRoamingStatusHTTPSettings:
      type: object
      properties:
        headers:
          type: object
          description: |-
            A set of key/value pairs that is copied into the HTTP request as custom headers.

            NOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.
          additionalProperties:
            type: string
        method:
          type: string
          description: The HTTP method to use for sending the message.
          enum:
            - POST
    DeviceRoamingStatusMQTTSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusMQTTSettings"
    DeviceRoamingStatusMQTTSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusMQTTSettings"
    DeviceRoamingStatusMQTTSettings:
      type: object
      properties:
        topicName:
          type: string
        qos:
          type: integer
          format: int32
        retain:
          type: boolean
        expiry:
          type: integer
          format: int32
        userProperties:
          type: object
      required:
        - topicName
    DeviceRoamingStatusAMQPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusAMQPSettings"
    DeviceRoamingStatusAMQPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusAMQPSettings"
    DeviceRoamingStatusAMQPSettings:
      type: object
      properties:
        address:
          type: string
        linkName:
          type: string
        senderSettlementMode:
          type: string
          enum:
            - settled
            - unsettled
        linkProperties:
          type: object
          additionalProperties:
            type: string
    DeviceRoamingStatusApacheKafkaSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusApacheKafkaSettings"
    DeviceRoamingStatusApacheKafkaSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusApacheKafkaSettings"
    DeviceRoamingStatusApacheKafkaSettings:
      type: object
      properties:
        topicName:
          type: string
        partitionKeyExtractor:
          type: string
        clientId:
          type: string
        ackMode:
          type: integer
      required:
        - topicName
    DeviceRoamingStatusNATSSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusNATSSettings"
    DeviceRoamingStatusNATSSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceRoamingStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceRoamingStatusNATSSettings"
    DeviceRoamingStatusNATSSettings:
      type: object
      properties:
        subject:
          type: string
      required:
        - subject
    DeviceRoamingStatusXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    DeviceReachabilityStatusErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    DeviceReachabilityStatusSubscriptionRequest:
      description: The request for creating a event-type event subscription
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceReachabilityStatusProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/DeviceReachabilityStatusSinkCredential"
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: For the current Commonalities API design guidelines, only one event type per subscription is allowed, yet in the following releases use of array of event types SHALL be specified without changing this definition.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceReachabilityStatusConfig"
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceReachabilityStatusHTTPSubscriptionRequest"
          MQTT3: "#/components/schemas/DeviceReachabilityStatusMQTTSubscriptionRequest"
          MQTT5: "#/components/schemas/DeviceReachabilityStatusMQTTSubscriptionRequest"
          AMQP: "#/components/schemas/DeviceReachabilityStatusAMQPSubscriptionRequest"
          NATS: "#/components/schemas/DeviceReachabilityStatusNATSSubscriptionRequest"
          KAFKA: "#/components/schemas/DeviceReachabilityStatusApacheKafkaSubscriptionRequest"
    DeviceReachabilityStatusProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: Identifier of a delivery protocol. Only HTTP is allowed for now
      example: HTTP
    DeviceReachabilityStatusConfig:
      description: |
        Implementation-specific configuration parameters needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`
        Specific event type attributes must be defined in `subscriptionDetail`
        Note: if a request is performed for several event type, all subscribed event will use same `config` parameters.
      type: object
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: "#/components/schemas/DeviceReachabilityStatusCreateSubscriptionDetail"
        subscriptionExpireTime:
          type: string
          format: date-time
          example: "2023-01-17T13:18:23.682Z"
          description: The subscription expiration time (in date-time format) requested by the API consumer.
        subscriptionMaxEvents:
          type: integer
          description: Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
          minimum: 1
          example: 5
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.
            Example: Consumer subscribes to reachability SMS. If consumer sets initialEvent to true and device is already reachable by SMS, an event is triggered.
    DeviceReachabilityStatusSinkCredential:
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/DeviceReachabilityStatusPlainCredential"
          ACCESSTOKEN: "#/components/schemas/DeviceReachabilityStatusAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/DeviceReachabilityStatusRefreshTokenCredential"
      required:
        - credentialType
    DeviceReachabilityStatusPlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    DeviceReachabilityStatusAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    DeviceReachabilityStatusRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    DeviceReachabilityStatusCreateSubscriptionDetail:
      description: The detail of the requested event subscription.
      type: object
      properties:
        device:
          $ref: "#/components/schemas/DeviceReachabilityStatusDevice"
    DeviceReachabilityStatusEventTypeNotification:
      type: string
      description: |
        reachability-data - Event triggered when the device is connected to the network for Data usage (regardless of the SMS reachability).

        reachability-sms - Event triggered when the device is connected to the network only for SMS usage.

        reachability-disconnected - Event triggered when the device is not connected.

        subscription-started - Event triggered when the subscription starts.

        subscription-updated - Event triggered when the subscription is updated.

        subscription-ended - Event triggered when the subscription ends.
      enum:
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected
        - org.camaraproject.device-reachability-status-subscriptions.v0.subscription-started
        - org.camaraproject.device-reachability-status-subscriptions.v0.subscription-updated
        - org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ended
    DeviceReachabilityStatusSubscriptionEventType:
      type: string
      description: |
        reachability-data - Event triggered when the device is connected to the network for Data usage (regardless of the SMS reachability).

        reachability-sms - Event triggered when the device is connected to the network only for SMS usage

        reachability-disconnected - Event triggered when the device is not connected.
      enum:
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms
        - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected
    DeviceReachabilityStatusSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
      properties:
        protocol:
          $ref: "#/components/schemas/DeviceReachabilityStatusProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: For the current Commonalities API design guidelines, only one event type per subscription is allowed
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionEventType"
        config:
          $ref: "#/components/schemas/DeviceReachabilityStatusConfig"
        id:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
        startsAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will begin/began
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/DeviceReachabilityStatusHTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/DeviceReachabilityStatusMQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/DeviceReachabilityStatusMQTTSubscriptionResponse"
          AMQP: "#/components/schemas/DeviceReachabilityStatusAMQPSubscriptionResponse"
          NATS: "#/components/schemas/DeviceReachabilityStatusNATSSubscriptionResponse"
          KAFKA: "#/components/schemas/DeviceReachabilityStatusApacheKafkaSubscriptionResponse"
      example:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceReachabilityStatusDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`

        NOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/DeviceReachabilityStatusPhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/DeviceReachabilityStatusNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/DeviceReachabilityStatusDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/DeviceReachabilityStatusDeviceIpv6Address"
      minProperties: 1
    DeviceReachabilityStatusDeviceResponse:
      description: |
        An identifier for the end-user equipment able to connect to the network that the response refers to. This parameter is only returned when the API consumer includes the `device` parameter in their request (i.e. they are using a two-legged access token), and is relevant when more than one device identifier is specified, as only one of those device identifiers is allowed in the response.

        If the API consumer provides more than one device identifier in their request, the API provider must return a single identifier which is the one they are using to fulfil the request, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusDevice"
        - maxProperties: 1
    DeviceReachabilityStatusPhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    DeviceReachabilityStatusNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    DeviceReachabilityStatusDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/DeviceReachabilityStatusSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/DeviceReachabilityStatusSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/DeviceReachabilityStatusPort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    DeviceReachabilityStatusSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    DeviceReachabilityStatusPort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    DeviceReachabilityStatusDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    DeviceReachabilityStatusSubscriptionAsync:
      description: Response for a device reachability status operation managed asynchronously (Creation or Deletion)
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
    DeviceReachabilityStatusSubscriptionId:
      type: string
      description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    DeviceReachabilityStatusCloudEvent:
      description: The notification callback
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          type: string
          description: identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/DeviceReachabilityStatusSource"
        type:
          $ref: "#/components/schemas/DeviceReachabilityStatusEventTypeNotification"
        specversion:
          type: string
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs
          enum:
            - application/json
        data:
          type: object
          description: Event details payload described in each CAMARA API and referenced by its type
        time:
          $ref: "#/components/schemas/DeviceReachabilityStatusDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data: "#/components/schemas/DeviceReachabilityStatusEventReachabilityData"
          org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms: "#/components/schemas/DeviceReachabilityStatusEventReachabilitySms"
          org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected: "#/components/schemas/DeviceReachabilityStatusEventReachabilityDisconnected"
          org.camaraproject.device-reachability-status-subscriptions.v0.subscription-started: "#/components/schemas/DeviceReachabilityStatusEventSubscriptionStarted"
          org.camaraproject.device-reachability-status-subscriptions.v0.subscription-updated: "#/components/schemas/DeviceReachabilityStatusEventSubscriptionUpdated"
          org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ended: "#/components/schemas/DeviceReachabilityStatusEventSubscriptionEnded"
    DeviceReachabilityStatusSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened - be a non-empty `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    DeviceReachabilityStatusDateTime:
      type: string
      format: date-time
      description: |
        Timestamp of when the occurrence happened.
        If the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer,
        however all producers for the same source MUST be consistent in this respect. In other words,
        either they all use the actual time of the occurrence or they all use the same algorithm to determine the value used.
        It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
        Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
      example: "2018-04-05T17:31:00Z"
    DeviceReachabilityStatusEventReachabilityData:
      description: event structure for reachability data usage
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusReachabilityDataSmsDisconnected"
    DeviceReachabilityStatusEventReachabilitySms:
      description: event structure for reachability SMS usage
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusReachabilityDataSmsDisconnected"
    DeviceReachabilityStatusEventReachabilityDisconnected:
      description: event structure for disconnection
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusReachabilityDataSmsDisconnected"
    DeviceReachabilityStatusReachabilityDataSmsDisconnected:
      required:
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceReachabilityStatusDeviceResponse"
        subscriptionId:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
    DeviceReachabilityStatusEventSubscriptionEnded:
      description: Event structure for sending subscription-ended event
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionEnded"
    DeviceReachabilityStatusEventSubscriptionStarted:
      description: Event structure for event subscription started
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionStarted"
    DeviceReachabilityStatusSubscriptionStarted:
      description: Event detail structure for subscription started event
      type: object
      required:
        - initiationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceReachabilityStatusDevice"
        initiationReason:
          $ref: "#/components/schemas/DeviceReachabilityStatusInitiationReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
        initiationDescription:
          description: Description about the start of the subscription.
          type: string
    DeviceReachabilityStatusInitiationReason:
      type: string
      description: |
        - SUBSCRIPTION_CREATED - Subscription created by API Server
      enum:
        - SUBSCRIPTION_CREATED
    DeviceReachabilityStatusEventSubscriptionUpdated:
      description: Event structure for event subscription updated
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionUpdated"
    DeviceReachabilityStatusSubscriptionUpdated:
      description: Event detail structure for subscription updated event
      type: object
      required:
        - updateReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceReachabilityStatusDevice"
        updateReason:
          $ref: "#/components/schemas/DeviceReachabilityStatusUpdateReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
        updateDescription:
          description: Description about the subscription update.
          type: string
    DeviceReachabilityStatusUpdateReason:
      type: string
      description: |
        - SUBSCRIPTION_ACTIVE - API server transitioned susbcription status to `ACTIVE`
        - SUBSCRIPTION_INACTIVE - API server transitioned susbcription status to `INACTIVE`
      enum:
        - SUBSCRIPTION_ACTIVE
        - SUBSCRIPTION_INACTIVE
    DeviceReachabilityStatusSubscriptionEnded:
      description: Event detail structure for org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ended event
      type: object
      required:
        - terminationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/DeviceReachabilityStatusDeviceResponse"
        terminationReason:
          $ref: "#/components/schemas/DeviceReachabilityStatusTerminationReason"
        subscriptionId:
          $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
        terminationDescription:
          type: string
    DeviceReachabilityStatusTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    DeviceReachabilityStatusHTTPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusHTTPSettings"
    DeviceReachabilityStatusHTTPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusHTTPSettings"
    DeviceReachabilityStatusHTTPSettings:
      type: object
      properties:
        headers:
          type: object
          description: |-
            A set of key/value pairs that is copied into the HTTP request as custom headers.

            NOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.
          additionalProperties:
            type: string
        method:
          type: string
          description: The HTTP method to use for sending the message.
          enum:
            - POST
    DeviceReachabilityStatusMQTTSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusMQTTSettings"
    DeviceReachabilityStatusMQTTSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusMQTTSettings"
    DeviceReachabilityStatusMQTTSettings:
      type: object
      properties:
        topicName:
          type: string
        qos:
          type: integer
          format: int32
        retain:
          type: boolean
        expiry:
          type: integer
          format: int32
        userProperties:
          type: object
      required:
        - topicName
    DeviceReachabilityStatusAMQPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusAMQPSettings"
    DeviceReachabilityStatusAMQPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusAMQPSettings"
    DeviceReachabilityStatusAMQPSettings:
      type: object
      properties:
        address:
          type: string
        linkName:
          type: string
        senderSettlementMode:
          type: string
          enum:
            - settled
            - unsettled
        linkProperties:
          type: object
          additionalProperties:
            type: string
    DeviceReachabilityStatusApacheKafkaSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusApacheKafkaSettings"
    DeviceReachabilityStatusApacheKafkaSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusApacheKafkaSettings"
    DeviceReachabilityStatusApacheKafkaSettings:
      type: object
      properties:
        topicName:
          type: string
        partitionKeyExtractor:
          type: string
        clientId:
          type: string
        ackMode:
          type: integer
      required:
        - topicName
    DeviceReachabilityStatusNATSSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusNATSSettings"
    DeviceReachabilityStatusNATSSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/DeviceReachabilityStatusSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/DeviceReachabilityStatusNATSSettings"
    DeviceReachabilityStatusNATSSettings:
      type: object
      properties:
        subject:
          type: string
      required:
        - subject
    DeviceReachabilityStatusXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    ConnectedNetworkTypeErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: A human-readable code to describe the error
        message:
          type: string
          description: A human-readable description of what the event represents
    ConnectedNetworkTypeSubscriptionRequest:
      description: The request for creating a event-type event subscription
      type: object
      required:
        - sink
        - protocol
        - config
        - types
      properties:
        protocol:
          $ref: "#/components/schemas/ConnectedNetworkTypeProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        sinkCredential:
          $ref: "#/components/schemas/ConnectedNetworkTypeSinkCredential"
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: As of now we enforce to have only event type per subscription.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionEventType"
        config:
          $ref: "#/components/schemas/ConnectedNetworkTypeConfig"
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/ConnectedNetworkTypeHTTPSubscriptionRequest"
          MQTT3: "#/components/schemas/ConnectedNetworkTypeMQTTSubscriptionRequest"
          MQTT5: "#/components/schemas/ConnectedNetworkTypeMQTTSubscriptionRequest"
          AMQP: "#/components/schemas/ConnectedNetworkTypeAMQPSubscriptionRequest"
          NATS: "#/components/schemas/ConnectedNetworkTypeNATSSubscriptionRequest"
          KAFKA: "#/components/schemas/ConnectedNetworkTypeApacheKafkaSubscriptionRequest"
    ConnectedNetworkTypeProtocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: Identifier of a delivery protocol. Only HTTP is allowed for now
      example: HTTP
    ConnectedNetworkTypeConfig:
      description: |
        Implementation-specific configuration parameters needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`
        Specific event type attributes must be defined in `subscriptionDetail`
        Note: if a request is performed for several event type, all subscribed event will use same `config` parameters.
      type: object
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: "#/components/schemas/ConnectedNetworkTypeCreateSubscriptionDetail"
        subscriptionExpireTime:
          type: string
          format: date-time
          example: "2023-01-17T13:18:23.682Z"
          description: The subscription expiration time (in date-time format) requested by the API consumer.
        subscriptionMaxEvents:
          type: integer
          description: Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
          minimum: 1
          example: 5
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.
            Example: Consumer request area entered event. If consumer sets initialEvent to true and device is already in the geofence, an event is triggered
    ConnectedNetworkTypeSinkCredential:
      description: A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.
      type: object
      properties:
        credentialType:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: |
            The type of the credential.
            Note: Type of the credential - MUST be set to ACCESSTOKEN for now
      discriminator:
        propertyName: credentialType
        mapping:
          PLAIN: "#/components/schemas/ConnectedNetworkTypePlainCredential"
          ACCESSTOKEN: "#/components/schemas/ConnectedNetworkTypeAccessTokenCredential"
          REFRESHTOKEN: "#/components/schemas/ConnectedNetworkTypeRefreshTokenCredential"
      required:
        - credentialType
    ConnectedNetworkTypePlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSinkCredential"
        - type: object
          required:
            - identifier
            - secret
          properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    ConnectedNetworkTypeAccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
          required:
            - accessToken
            - accessTokenExpiresUtc
            - accessTokenType
    ConnectedNetworkTypeRefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSinkCredential"
        - type: object
          properties:
            accessToken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accessTokenExpiresUtc:
              type: string
              format: date-time
              description: |
                REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.
                In the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.
                If the access token is a JWT and registered "exp" (Expiration Time) claim is present, the two expiry times should match.
                It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
              example: "2023-07-03T12:27:08.312Z"
            accessTokenType:
              description: REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).
              type: string
              enum:
                - bearer
            refreshToken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshTokenEndpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - accessToken
        - accessTokenExpiresUtc
        - accessTokenType
        - refreshToken
        - refreshTokenEndpoint
    ConnectedNetworkTypeCreateSubscriptionDetail:
      description: The detail of the requested event subscription.
      type: object
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDevice"
    ConnectedNetworkTypeConnectedNetworkType:
      type: string
      description: Network Type is intended to provide insight to connected network's capabilities from standards perspective. Actual network capabilities may differ based on implementation and MUST be checked with the connected network provider.
      enum:
        - 2G
        - 3G
        - 4G
        - 5G
        - UNKNOWN
    ConnectedNetworkTypeSubscriptionDetail:
      description: The detail of the requested event subscription
      type: object
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDevice"
    ConnectedNetworkTypeEventTypeNotification:
      type: string
      description: |
        network-type-changed - Event triggered when the connected network type of the device changes
        subscription-started - Event triggered when the subscription starts
        subscription-updated - Event triggered when the subscription is updated
        subscription-ended   - Event triggered when the subscription is terminated
      enum:
        - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        - org.camaraproject.connected-network-type-subscriptions.v0.subscription-started
        - org.camaraproject.connected-network-type-subscriptions.v0.subscription-updated
        - org.camaraproject.connected-network-type-subscriptions.v0.subscription-ended
    ConnectedNetworkTypeSubscriptionEventType:
      type: string
      description: |
        network-type-changed - Event triggered when the connected network type of the device changes.
      enum:
        - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
    ConnectedNetworkTypeSubscription:
      description: Represents a event-type subscription.
      type: object
      required:
        - sink
        - protocol
        - config
        - types
        - id
      properties:
        protocol:
          $ref: "#/components/schemas/ConnectedNetworkTypeProtocol"
        sink:
          type: string
          format: uri
          pattern: ^https:\/\/.+$
          description: The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/sink
        types:
          description: |
            Camara Event types eligible to be delivered by this subscription.
            Note: For the current Commonalities API design guidelines, only one event type per subscription is allowed
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionEventType"
        config:
          $ref: "#/components/schemas/ConnectedNetworkTypeConfig"
        id:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
        startsAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will begin/began
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T12:27:08.312Z"
        expiresAt:
          type: string
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.
            It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
            Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          example: "2023-07-03T12:27:08.312Z"
        status:
          type: string
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).
          enum:
            - ACTIVATION_REQUESTED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
      discriminator:
        propertyName: protocol
        mapping:
          HTTP: "#/components/schemas/ConnectedNetworkTypeHTTPSubscriptionResponse"
          MQTT3: "#/components/schemas/ConnectedNetworkTypeMQTTSubscriptionResponse"
          MQTT5: "#/components/schemas/ConnectedNetworkTypeMQTTSubscriptionResponse"
          AMQP: "#/components/schemas/ConnectedNetworkTypeAMQPSubscriptionResponse"
          NATS: "#/components/schemas/ConnectedNetworkTypeNATSSubscriptionResponse"
          KAFKA: "#/components/schemas/ConnectedNetworkTypeApacheKafkaSubscriptionResponse"
      example:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    ConnectedNetworkTypeSubscriptionAsync:
      description: Response for a event-type subscription request managed asynchronously (Creation or Deletion)
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
    ConnectedNetworkTypeSubscriptionId:
      type: string
      description: The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as subscriptionId as per Commonalities Event Notification Model.
      example: qs15-h556-rt89-1298
    ConnectedNetworkTypeDevice:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
        * `phoneNumber`
        * `networkAccessIdentifier`

        NOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/ConnectedNetworkTypePhoneNumber"
        networkAccessIdentifier:
          $ref: "#/components/schemas/ConnectedNetworkTypeNetworkAccessIdentifier"
        ipv4Address:
          $ref: "#/components/schemas/ConnectedNetworkTypeDeviceIpv4Addr"
        ipv6Address:
          $ref: "#/components/schemas/ConnectedNetworkTypeDeviceIpv6Address"
      minProperties: 1
    ConnectedNetworkTypeDeviceResponse:
      description: |
        An identifier for the end-user equipment able to connect to the network that the response refers to. This parameter is only returned when the API consumer includes the `device` parameter in their request (i.e. they are using a two-legged access token), and is relevant when more than one device identifier is specified, as only one of those device identifiers is allowed in the response.

        If the API consumer provides more than one device identifier in their request, the API provider must return a single identifier which is the one they are using to fulfil the request, even if the identifiers do not match the same device. API provider does not perform any logic to validate/correlate that the indicated device identifiers match the same device. No error should be returned if the identifiers are otherwise valid to prevent API consumers correlating different identifiers with a given end user.
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeDevice"
        - maxProperties: 1
    ConnectedNetworkTypePhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: "+123456789"
    ConnectedNetworkTypeNetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    ConnectedNetworkTypeDeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: "#/components/schemas/ConnectedNetworkTypeSingleIpv4Addr"
        privateAddress:
          $ref: "#/components/schemas/ConnectedNetworkTypeSingleIpv4Addr"
        publicPort:
          $ref: "#/components/schemas/ConnectedNetworkTypePort"
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    ConnectedNetworkTypeSingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    ConnectedNetworkTypePort:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    ConnectedNetworkTypeDeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    ConnectedNetworkTypeCloudEvent:
      description: The notification callback
      required:
        - id
        - source
        - specversion
        - type
        - time
      properties:
        id:
          type: string
          description: identifier of this event, that must be unique in the source context.
        source:
          $ref: "#/components/schemas/ConnectedNetworkTypeSource"
        type:
          $ref: "#/components/schemas/ConnectedNetworkTypeEventTypeNotification"
        specversion:
          type: string
          description: Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)
          enum:
            - "1.0"
        datacontenttype:
          type: string
          description: media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs
          enum:
            - application/json
        data:
          type: object
          description: Event details payload described in each CAMARA API and referenced by its type
        time:
          $ref: "#/components/schemas/ConnectedNetworkTypeDateTime"
      discriminator:
        propertyName: type
        mapping:
          org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed: "#/components/schemas/ConnectedNetworkTypeEventNetworkTypeChange"
          org.camaraproject.connected-network-type-subscriptions.v0.subscription-started: "#/components/schemas/ConnectedNetworkTypeEventSubscriptionStarted"
          org.camaraproject.connected-network-type-subscriptions.v0.subscription-updated: "#/components/schemas/ConnectedNetworkTypeEventSubscriptionUpdated"
          org.camaraproject.connected-network-type-subscriptions.v0.subscription-ended: "#/components/schemas/ConnectedNetworkTypeEventSubscriptionEnded"
    ConnectedNetworkTypeSource:
      type: string
      format: uri-reference
      minLength: 1
      description: |
        Identifies the context in which an event happened - be a non-empty `URI-reference` like:
        - URI with a DNS authority:
          * https://github.com/cloudevents
          * mailto:cncf-wg-serverless@lists.cncf.io
        - Universally-unique URN with a UUID:
          * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66
        - Application-specific identifier:
          * /cloudevents/spec/pull/123
          * 1-555-123-4567
      example: https://notificationSendServer12.supertelco.com
    ConnectedNetworkTypeDateTime:
      type: string
      format: date-time
      description: Timestamp of when the occurrence happened. Must adhere to RFC 3339.
      example: "2018-04-05T17:31:00Z"
    ConnectedNetworkTypeEventNetworkTypeChange:
      description: event structure for network type change
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectedNetworkTypeEventNetworkTypeChangeData"
    ConnectedNetworkTypeEventNetworkTypeChangeData:
      description: Event detail structure for network type changed data events
      type: object
      required:
        - connectedNetworkType
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDeviceResponse"
        connectedNetworkType:
          $ref: "#/components/schemas/ConnectedNetworkTypeConnectedNetworkType"
        subscriptionId:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
    ConnectedNetworkTypeEventSubscriptionEnded:
      description: event structure for event subscription ends
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionEnded"
    ConnectedNetworkTypeEventSubscriptionStarted:
      description: Event structure for event subscription started
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionStarted"
    ConnectedNetworkTypeSubscriptionStarted:
      description: Event detail structure for subscription started event
      type: object
      required:
        - initiationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDevice"
        initiationReason:
          $ref: "#/components/schemas/ConnectedNetworkTypeInitiationReason"
        subscriptionId:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
        initiationDescription:
          description: Description about the start of the subscription.
          type: string
    ConnectedNetworkTypeInitiationReason:
      type: string
      description: |
        - SUBSCRIPTION_CREATED - Subscription created by API Server
      enum:
        - SUBSCRIPTION_CREATED
    ConnectedNetworkTypeEventSubscriptionUpdated:
      description: Event structure for event subscription updated
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeCloudEvent"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionUpdated"
    ConnectedNetworkTypeSubscriptionUpdated:
      description: Event detail structure for subscription updated event
      type: object
      required:
        - updateReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDevice"
        updateReason:
          $ref: "#/components/schemas/ConnectedNetworkTypeUpdateReason"
        subscriptionId:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
        updateDescription:
          description: Description about the subscription update.
          type: string
    ConnectedNetworkTypeUpdateReason:
      type: string
      description: |
        - SUBSCRIPTION_ACTIVE - API server transitioned subscription status to `ACTIVE`
        - SUBSCRIPTION_INACTIVE - API server transitioned subscription status to `INACTIVE`
      enum:
        - SUBSCRIPTION_ACTIVE
        - SUBSCRIPTION_INACTIVE
    ConnectedNetworkTypeSubscriptionEnded:
      description: Event detail structure for SUBSCRIPTION_ENDED event
      type: object
      required:
        - terminationReason
        - subscriptionId
      properties:
        device:
          $ref: "#/components/schemas/ConnectedNetworkTypeDeviceResponse"
        terminationReason:
          $ref: "#/components/schemas/ConnectedNetworkTypeTerminationReason"
        subscriptionId:
          $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
        terminationDescription:
          type: string
    ConnectedNetworkTypeTerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    ConnectedNetworkTypeHTTPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeHTTPSettings"
    ConnectedNetworkTypeHTTPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeHTTPSettings"
    ConnectedNetworkTypeHTTPSettings:
      type: object
      properties:
        headers:
          type: object
          description: |-
            A set of key/value pairs that is copied into the HTTP request as custom headers.

            NOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.
          additionalProperties:
            type: string
        method:
          type: string
          description: The HTTP method to use for sending the message.
          enum:
            - POST
    ConnectedNetworkTypeMQTTSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeMQTTSettings"
    ConnectedNetworkTypeMQTTSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeMQTTSettings"
    ConnectedNetworkTypeMQTTSettings:
      type: object
      properties:
        topicName:
          type: string
        qos:
          type: integer
          format: int32
        retain:
          type: boolean
        expiry:
          type: integer
          format: int32
        userProperties:
          type: object
      required:
        - topicName
    ConnectedNetworkTypeAMQPSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeAMQPSettings"
    ConnectedNetworkTypeAMQPSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeAMQPSettings"
    ConnectedNetworkTypeAMQPSettings:
      type: object
      properties:
        address:
          type: string
        linkName:
          type: string
        senderSettlementMode:
          type: string
          enum:
            - settled
            - unsettled
        linkProperties:
          type: object
          additionalProperties:
            type: string
    ConnectedNetworkTypeApacheKafkaSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeApacheKafkaSettings"
    ConnectedNetworkTypeApacheKafkaSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeApacheKafkaSettings"
    ConnectedNetworkTypeApacheKafkaSettings:
      type: object
      properties:
        topicName:
          type: string
        partitionKeyExtractor:
          type: string
        clientId:
          type: string
        ackMode:
          type: integer
      required:
        - topicName
    ConnectedNetworkTypeNATSSubscriptionRequest:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionRequest"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeNATSSettings"
    ConnectedNetworkTypeNATSSubscriptionResponse:
      allOf:
        - $ref: "#/components/schemas/ConnectedNetworkTypeSubscription"
        - type: object
          properties:
            protocolSettings:
              $ref: "#/components/schemas/ConnectedNetworkTypeNATSSettings"
    ConnectedNetworkTypeNATSSettings:
      type: object
      properties:
        subject:
          type: string
      required:
        - subject
    ConnectedNetworkTypeXCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
  securitySchemes:
    CustomerInsightsopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceSwapopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    KnowYourCustomerAgeVerificationopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    KnowYourCustomerFill-inopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    KnowYourCustomerMatchopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    TenureopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    NumberRecyclingopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    OTPValidationopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    CallForwardingSignalopenId:
      description: to support Consent Management
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceLocationopenId:
      description: OpenID Connect authentication.
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceLocationnotificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    notificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    PopulationDensityDataopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    PopulationDensityDatanotificationsBearerAuth:
      description: Bearer authentication for notifications
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#sinkCredential.credentialType}"
    RegionDeviceCountopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    RegionDeviceCountnotificationsBearerAuth:
      description: Bearer authentication for notifications
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#sinkCredential.credentialType}"
    WebRTCopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    ConnectivityInsightsopenId:
      type: openIdConnect
      description: Common security scheme for all CAMARA APIs
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    ConnectivityInsightsnotificationsBearerAuth:
      description: Bearer authorization for notifications
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    QualityOnDemandopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceIdentifieropenId:
      description: Common security scheme for all CAMARA APIs
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    SimSwapopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    SimSwapnotificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    DeviceRoamingStatusopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceRoamingStatusnotificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    DeviceReachabilityStatusopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    DeviceReachabilityStatusnotificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
    ConnectedNetworkTypeopenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    ConnectedNetworkTypenotificationsBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "{$request.body#/sinkCredential.credentialType}"
  responses:
    CustomerInsightsGeneric400:
      description: Problem with the client request.
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            InvalidArgument:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param
    CustomerInsightsGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    CustomerInsightsGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    CustomerInsightsGeneric404:
      description: |-
        Not found

        In addition to regular NOT_FOUND scenario, another scenarios may exist:
        - Phone Number not found ("code": "IDENTIFIER_NOT_FOUND","message": "phoneNumber not found.").
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: Some identifier cannot be matched to a device. In this API it refers to a phoneNumber.
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: phoneNumber not found.
    CustomerInsightsGeneric422:
      description: |-
        Unprocessable Content

        In addition to regular scenario of Unprocessable Content, another scenarios may exist.
        - Service not applicable for the provided identifier ("code": "SERVICE_NOT_APPLICABLE","message": "The service is not available for the provided identifier.")
        - An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token ("code": "MISSING_IDENTIFIER","message": "The phone number cannot be identified.")
        - An explicit identifier is provided when a device or phone number has already been identified from the access token ("code": "UNNECESSARY_IDENTIFIER","message": "The phone number is already identified by the access token.")
        - Provided `scoringType` value is not supported. (`"code": "CUSTOMER_INSIGHTS.SCALE_TYPE_NOT_SUPPORTED","message": "Indicated parameter scoringType is not supported."`)
        - Provided `idDocument` is not consistent with the phone number. (`"code": "CUSTOMER_INSIGHTS.INVALID_IDENTIFIERS","message": "The request contains invalid data."`)
        - Provided `idDocument` field is not supported. (`"code": "CUSTOMER_INSIGHTS.ID_DOCUMENT_NOT_SUPPORTED","message": "Indicated parameter idDocument is not supported"`)
        - Required `idDocument` field and it is not provided. (`"code": "CUSTOMER_INSIGHTS.ID_DOCUMENT_REQUIRED","message": "The idDocument is required to perform the properties validation."`)
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
                      - CUSTOMER_INSIGHTS.SCALE_TYPE_NOT_SUPPORTED
                      - CUSTOMER_INSIGHTS.INVALID_IDENTIFIERS
                      - CUSTOMER_INSIGHTS.ID_DOCUMENT_NOT_SUPPORTED
                      - CUSTOMER_INSIGHTS.ID_DOCUMENT_REQUIRED
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The phone number cannot be identified.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The phone number is already identified by the access token.
            GENERIC_422_NOT_SUPPORTED_SCORING_TYPE_VALUE:
              description: Error when `scoringType` value is not supported.
              value:
                status: 422
                code: CUSTOMER_INSIGHTS.SCALE_TYPE_NOT_SUPPORTED
                message: Indicated parameter `scoringType` is not supported.
            GENERIC_422_INVALID_IDENTIFIERS:
              description: The request contains invalid data identifying customer
              value:
                status: 422
                code: CUSTOMER_INSIGHTS.INVALID_IDENTIFIERS
                message: The request contains invalid data.
            GENERIC_422_ID_DOCUMENT_NOT_SUPPORTED:
              description: Error when `idDocument` field is not supported
              value:
                status: 422
                code: CUSTOMER_INSIGHTS.ID_DOCUMENT_NOT_SUPPORTED
                message: Indicated parameter `idDocument` is not supported
            GENERIC_422_ID_DOCUMENT_REQUIRED:
              description: Error when `idDocument` field is not provided and it is required.
              value:
                status: 422
                code: CUSTOMER_INSIGHTS.ID_DOCUMENT_REQUIRED
                message: The `idDocument` is required to perform the properties validation.
    CustomerInsightsGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/CustomerInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CustomerInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    DeviceSwapGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeviceSwapErrorInfo"
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    DeviceSwapGeneric400Check:
      description: |-
        Bad Request
        In addition to regular scenario of INVALID_ARGUMENT, other scenarios may exist:
        - Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested ("code": "OUT_OF_RANGE","message": "Client specified an invalid range.")
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    DeviceSwapGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    DeviceSwapGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    DeviceSwapGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: Some identifier cannot be matched to a device
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
    DeviceSwapGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: phone number is not included in the request (in case of 2-legged) or the phone number identification cannot be derived from access token (in 3-legged)
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    DeviceSwapGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Rejected due to exceeding a business quota limit.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: API Server request limit is overpassed
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rejected due to request rate limit overpassed.
    KnowYourCustomerAgeVerificationGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerAgeVerificationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    KnowYourCustomerAgeVerificationGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerAgeVerificationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    KnowYourCustomerAgeVerificationGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerAgeVerificationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    KnowYourCustomerAgeVerificationGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerAgeVerificationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: The phone number is not associated with a CSP customer account
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: The phone number provided is not associated with a customer account
    KnowYourCustomerAgeVerificationGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerAgeVerificationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerAgeVerificationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service is not applicable for the provided phone number
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not applicable for the provided phone number
            GENERIC_422_MISSING_IDENTIFIER:
              description: No phone number has been provided either explicitly or associated with the access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: No phone number has been provided
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit phone number has been provided when one is already associated with the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: An explicit phone number has been provided when one is already associated with the access token
    KnowYourCustomerFill-inGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerFill-inErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    KnowYourCustomerFill-inGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerFill-inErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    KnowYourCustomerFill-inGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerFill-inErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    KnowYourCustomerFill-inGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerFill-inErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: The phone number is not associated with a CSP customer account
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: The phone number provided is not associated with a customer account
    KnowYourCustomerFill-inGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerFill-inX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerFill-inErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service is not applicable for the provided phone number
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not applicable for the provided phone number
            GENERIC_422_MISSING_IDENTIFIER:
              description: No phone number has been provided either explicitly or associated with the access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: No phone number has been provided
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit phone number has been provided when one is already associated with the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: An explicit phone number has been provided when one is already associated with the access token
    KnowYourCustomerMatchGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerMatchErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - KNOW_YOUR_CUSTOMER.INVALID_PARAM_COMBINATION
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            KNOW_YOUR_CUSTOMER.INVALID_PARAM_COMBINATION:
              description: Indicated param combination is invalid
              value:
                status: 400
                code: KNOW_YOUR_CUSTOMER.INVALID_PARAM_COMBINATION
                message: Indicated parameter combination is invalid
    KnowYourCustomerMatchGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerMatchErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    KnowYourCustomerMatchGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerMatchErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - INVALID_TOKEN_CONTEXT
                      - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_REQUIRED
                      - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: phoneNumber is not consistent with access token.
            KNOW_YOUR_CUSTOMER.ID_DOCUMENT_REQUIRED:
              description: The idDocument is required by the implementation
              value:
                status: 403
                code: KNOW_YOUR_CUSTOMER.ID_DOCUMENT_REQUIRED
                message: The idDocument is required to perform the properties validation
            KNOW_YOUR_CUSTOMER.ID_DOCUMENT_MISMATCH:
              description: idDocument mismatch
              value:
                status: 403
                code: KNOW_YOUR_CUSTOMER.ID_DOCUMENT_MISMATCH
                message: The idDocument needs to match the one associated with the provided phoneNumber
    KnowYourCustomerMatchGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerMatchErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: The phone number is not associated with a CSP customer account
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: The phone number provided is not associated with a customer account
    KnowYourCustomerMatchGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/KnowYourCustomerMatchx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/KnowYourCustomerMatchErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service is not applicable for the provided phone number
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not applicable for the provided phone number
            GENERIC_422_MISSING_IDENTIFIER:
              description: No phone number has been provided either explicitly or associated with the access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: No phone number has been provided
    TenureGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/TenureX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/TenureErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    TenureGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/TenureX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/TenureErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    TenureGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/TenureX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/TenureErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    TenureGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/TenureX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/TenureErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: The phone number is not associated with a CSP customer account
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: The phone number provided is not associated with a customer account
    TenureGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/TenureX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/TenureErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service is not applicable for the provided phone number
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not applicable for the provided phone number
            GENERIC_422_MISSING_IDENTIFIER:
              description: No phone number has been provided either explicitly or associated with the access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: No phone number has been provided
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit phone number has been provided when one is already associated with the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: An explicit phone number has been provided when one is already associated with the access token
    NumberRecyclingGeneric200:
      description: OK
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NumberRecyclingCheckNumRecyclingInfo"
    NumberRecyclingGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/NumberRecyclingErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            InvalidArgument:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            OutOfRange:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    NumberRecyclingGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/NumberRecyclingErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            Unauthenticated:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    NumberRecyclingGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/NumberRecyclingErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            Permission Denied:
              description: Permission denied. OAuth2 token access not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action
    NumberRecyclingGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/NumberRecyclingErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - IDENTIFIER_NOT_FOUND
          examples:
            Phone Number Used By Different Network Operator:
              description: Provided phone number is used by a different network operator
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Phone number not found.
    NumberRecyclingGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/NumberRecyclingx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/NumberRecyclingErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            Device Not Applicable:
              description: Service not applicable for the provided phone number
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided phone number
            Unnecessary Identifier:
              description: An explicit identifier is provided when a phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The phone number is already identified by the access token
            Missing Identifier:
              description: An identifier is not included in the request and the phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The phone number cannot be identified
    OTPValidationGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    OTPValidationValidateCodeBadRequestError400:
      description: |-
        Problem with the client request. In addition to regular scenario of `INVALID_ARGUMENT`, another scenarios may exist:
          - Too many unsuccessful attempts (`{"code": "ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED","message": "The maximum number of attempts for this authenticationId was exceeded without providing a valid OTP"}`)
          - Expired authenticationId (`{"code": "ONE_TIME_PASSWORD_SMS.VERIFICATION_EXPIRED","message": "The authenticationId is no longer valid"}`)
          - OTP is not valid for the provided authenticationId (`{"code": "ONE_TIME_PASSWORD_SMS.INVALID_OTP","message": "The provided OTP is not valid for this authenticationId"}`)
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED
                      - ONE_TIME_PASSWORD_SMS.VERIFICATION_EXPIRED
                      - ONE_TIME_PASSWORD_SMS.INVALID_OTP
          examples:
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_ARGUMENT:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param
            OTP_VALIDATION_400_VERIFICATION_FAILED:
              value:
                status: 400
                code: ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED
                message: The maximum number of attempts for this authenticationId was exceeded without providing a valid OTP
            OTP_VALIDATION_400_VERIFICATION_EXPIRED:
              value:
                status: 400
                code: ONE_TIME_PASSWORD_SMS.VERIFICATION_EXPIRED
                message: The authenticationId is no longer valid
            OTP_VALIDATION_400_INVALID_OTP:
              value:
                status: 400
                code: ONE_TIME_PASSWORD_SMS.INVALID_OTP
                message: The provided OTP is not valid for this authenticationId
    OTPValidationGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    OTPValidationGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    OTPValidationSendCodeForbiddenError403:
      description: |-
        Client does not have sufficient permissions to perform this action.
        In addition to regular scenario of `PERMISSION_DENIED`, another scenarios may exist:
          - Too many code requests were sent (`{"code": "ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED","message": "Too many OTPs have been requested for this MSISDN. Try later."}`)
          - The given phoneNumber can't receive an SMS due to business reasons in the operator, e.g. fraud, receiving SMS is not supported, etc (`{"code": "ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_NOT_ALLOWED","message": "Phone_number can't receive an SMS due to business reasons in the operator."}`)
          - The given phoneNumber is blocked to receive SMS due to any blocking business reason in the operator (`{"code": "ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_BLOCKED","message": "Phone_number is blocked to receive SMS due to any blocking business reason in the operator."}`)
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED
                      - ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_NOT_ALLOWED
                      - ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_BLOCKED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action
            OTP_VALIDATION_403_MAX_OTP_CODES_EXCEEDED:
              value:
                status: 403
                code: ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED
                message: Too many OTPs have been requested for this MSISDN. Try later.
            OTP_VALIDATION_403_PHONE_NUMBER_NOT_ALLOWED:
              value:
                status: 403
                code: ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_NOT_ALLOWED
                message: Phone_number can't receive an SMS due to business reasons in the operator.
            OTP_VALIDATION_403_PHONE_NUMBER_BLOCKED:
              value:
                status: 403
                code: ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_BLOCKED
                message: Phone_number is blocked to receive SMS due to any blocking business reason in the operator.
    OTPValidationGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    OTPValidationGeneric429:
      description: Either out of resource quota or reaching rate limiting
      headers:
        x-correlator:
          $ref: "#/components/headers/OTPValidationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/OTPValidationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    CallForwardingSignalGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    CallForwardingSignalGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    CallForwardingSignalGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    CallForwardingSignalGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: Call forwarding check can't be done because the phone number is unknown.
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
    CallForwardingSignalGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The phone number cannot be identified.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The phone number is already identified by the access token.
    CallForwardingSignalGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    CallForwardingSignalGeneric501:
      description: Not Implemented
      headers:
        x-correlator:
          $ref: "#/components/headers/CallForwardingSignalx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/CallForwardingSignalErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 501
                  code:
                    enum:
                      - NOT_IMPLEMENTED
          examples:
            GENERIC_501_NOT_IMPLEMENTED:
              description: Service not implemented. The use of this code should be avoided as far as possible to get the objective to reach aligned implementations
              value:
                status: 501
                code: NOT_IMPLEMENTED
                message: This functionality is not implemented yet.
    DeviceLocationCreateSubscriptionBadRequest400:
      description: Problem with the client request.
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - INVALID_CREDENTIAL
                      - INVALID_PROTOCOL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_INVALID_PROTOCOL:
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported.
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported.
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported.
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    DeviceLocationGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    DeviceLocationSubscriptionIdRequired:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              summary: Schema validation failed
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              summary: The subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    DeviceLocationGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    DeviceLocationSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission.
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_TOKEN_MISMATCH:
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription.
    DeviceLocationGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    DeviceLocationGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    DeviceLocationGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    DeviceLocationCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - MISSING_IDENTIFIER
                      - MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                      - SERVICE_NOT_APPLICABLE
                      - UNNECESSARY_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED
                      - GEOFENCING_SUBSCRIPTIONS.INVALID_AREA
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED:
              value:
                status: 422
                code: MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                message: Multi event types subscription not managed.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GEOFENCING_422_AREA_NOT_COVERED:
              summary: The area cannot be covered
              description: The system is not able cover the requested area
              value:
                status: 422
                code: GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED
                message: Unable to cover the requested area
            GEOFENCING_422_INVALID_AREA:
              summary: Invalid area
              description: The requested area is too small to be supported by the system.
              value:
                status: 422
                code: GEOFENCING_SUBSCRIPTIONS.INVALID_AREA
                message: The requested area is too small
    DeviceLocationGeneric429:
      description: Too Many Requests
      headers:
        X-Correlator:
          $ref: "#/components/headers/DeviceLocationx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceLocationErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    PopulationDensityDataRetrieveLocationBadRequest400:
      description: |-
        Problem with the client request. In addition to generic scenarios of `INVALID_ARGUMENT`, `INVALID_CREDENTIAL`, `INVALID_TOKEN`, another scenarios may exist:
          - The area is not a polygon shape or exceeds supported complexity ("code": "POPULATION_DENSITY_DATA.INVALID_AREA", "message": "The area is not a polygon shape or exceeds supported complexity")
          - Indicated `startTime` is greater than the maximum allowed ("code": "POPULATION_DENSITY_DATA.MAX_STARTTIME_EXCEEDED", "message": "Indicated startTime is greater than the maximum allowed")
          - Indicated `startTime` is earlier than the minimum allowed ("code": "POPULATION_DENSITY_DATA.MIN_STARTTIME_EXCEEDED", "message": "Indicated startTime is earlier than the minimum allowed")
          - Indicated `endTime` is earlier than the `startTime` ("code": "POPULATION_DENSITY_DATA.INVALID_END_TIME", "message": "Indicated endTime is earlier than the startTime")
          - Indicated time period is partially in the past and partially in the future ("code": "POPULATION_DENSITY_DATA.INVALID_TIME_PERIOD", "message": "time period is partially in the past and partially in the future")
          - Indicated time period is greater than the maximum allowed (More than maximum hours between startTime and endTime) ("code": "POPULATION_DENSITY_DATA.MAX_TIME_PERIOD_EXCEEDED", "message": "Indicated time period is greater than the maximum allowed (More than maximum hours between startTime and endTime)")
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
                      - POPULATION_DENSITY_DATA.INVALID_AREA
                      - POPULATION_DENSITY_DATA.MAX_STARTTIME_EXCEEDED
                      - POPULATION_DENSITY_DATA.MIN_STARTTIME_EXCEEDED
                      - POPULATION_DENSITY_DATA.INVALID_END_TIME
                      - POPULATION_DENSITY_DATA.MAX_TIME_PERIOD_EXCEEDED
                      - POPULATION_DENSITY_DATA.INVALID_TIME_PERIOD
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Invalid input
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
            POPULATION_DENSITY_DATA_400_INVALID_AREA:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.INVALID_AREA
                message: The area is not a polygon shape or has an arbitrary complexity
            POPULATION_DENSITY_DATA_400_MAX_STARTTIME_EXCEEDED:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MAX_STARTTIME_EXCEEDED
                message: Indicated startTime is greater than the maximum allowed
            POPULATION_DENSITY_DATA_400_MIN_STARTTIME_EXCEEDED:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MIN_STARTTIME_EXCEEDED
                message: Indicated startTime is earlier than the minimum allowed
            POPULATION_DENSITY_DATA_400_INVALID_END_TIME:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.INVALID_END_TIME
                message: Indicated endDate is earlier than the startTime
            POPULATION_DENSITY_DATA_400_MAX_TIME_PERIOD_EXCEEDED:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.MAX_TIME_PERIOD_EXCEEDED
                message: Indicated time period is greater than the maximum allowed (More than maximum hours between startTime and endTime)
            POPULATION_DENSITY_DATA_400_INVALID_TIME_PERIOD:
              value:
                status: 400
                code: POPULATION_DENSITY_DATA.INVALID_TIME_PERIOD
                message: Indicated time period is partially in the past and partially in the future
    PopulationDensityDataGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    PopulationDensityDataGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    PopulationDensityDataGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    PopulationDensityDataGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    PopulationDensityDataGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    PopulationDensityDataRetrieveLocationUnprocessableContent422:
      description: |-
        Problem with the client request. The following scenarios may exist:
          - Indicated combination of area, time interval and precision is too big ("code": "POPULATION_DENSITY_DATA.UNSUPPORTED_REQUEST", "message": "Indicated combination of area, time interval and precision is too big")
          - Indicated cell precision (Geohash level) is not supported ("code": "POPULATION_DENSITY_DATA.UNSUPPORTED_PRECISION", "message": "Indicated cell precision (Geohash level) is not supported")
          - Indicated combination of area, time interval and precision is too big for a sync response ("code": "POPULATION_DENSITY_DATA.UNSUPPORTED_SYNC_RESPONSE", "message": "Indicated combination of area, time interval and precision is too big for a sync response")
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - POPULATION_DENSITY_DATA.UNSUPPORTED_REQUEST
                      - POPULATION_DENSITY_DATA.UNSUPPORTED_PRECISION
                      - POPULATION_DENSITY_DATA.UNSUPPORTED_SYNC_RESPONSE
          examples:
            POPULATION_DENSITY_DATA_422_UNSUPPORTED_REQUEST:
              value:
                status: 422
                code: POPULATION_DENSITY_DATA.UNSUPPORTED_REQUEST
                message: Indicated combination of area, time interval and precision is too big for both synchronous and asynchronous processing
            POPULATION_DENSITY_DATA_422_UNSUPPORTED_PRECISION:
              value:
                status: 422
                code: POPULATION_DENSITY_DATA.UNSUPPORTED_PRECISION
                message: Indicated cell precision (Geohash length) is not supported
            POPULATION_DENSITY_DATA_422_UNSUPPORTED_SYNC_RESPONSE:
              value:
                status: 422
                code: POPULATION_DENSITY_DATA.UNSUPPORTED_SYNC_RESPONSE
                message: Indicated combination of area, time interval and precision is too big for synchronous processing and asynchronous processing is not enabled
    PopulationDensityDataGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/PopulationDensityDatax-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PopulationDensityDataErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    RegionDeviceCountGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/RegionDeviceCountx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/RegionDeviceCountErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - REGION_DEVICE_COUNT.TIME_INVALID_ARGUMENT
                      - REGION_DEVICE_COUNT.INVALID_END_DATE
                      - REGION_DEVICE_COUNT.INVALID_CIRCLE_AREA
                      - REGION_DEVICE_COUNT.INVALID_POLYGON_AREA
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - REGION_DEVICE_COUNT.UNSUPPORTED_SYNC_RESPONSE
                      - REGION_DEVICE_COUNT.UNSUPPPORTED_REQUEST
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_TIME_INTERVAL_NOT_SATISFIABLE:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.TIME_INVALID_ARGUMENT
                message: starttime and endtime cannot be passed separately. Either both are passed or neither is passed.
            GENERIC_400_INVALID_END_DATE:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.INVALID_END_DATE
                message: Indicated endTime is earlier than the startTime.
            GENERIC_400_INVALID_CIRCLE_AREA:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.INVALID_CIRCLE_AREA
                message: Missing circle center or radius.
            GENERIC_400_INVALID_POLYGON_AREA:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.INVALID_POLYGON_AREA
                message: The area is not a polygon shape or has an arbitrary complexity.
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_UNSUPPORTED_SYNC_RESPONSE:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.UNSUPPORTED_SYNC_RESPONSE
                message: Indicated combination of area or time interval is too big for a sync response
            GENERIC_400_UNSUPPORTED_REQUEST:
              value:
                status: 400
                code: REGION_DEVICE_COUNT.UNSUPPPORTED_REQUEST
                message: Indicated combination of area or time interval is too big
    RegionDeviceCountGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/RegionDeviceCountx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/RegionDeviceCountErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    RegionDeviceCountGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/RegionDeviceCountx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/RegionDeviceCountErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - INVALID_TOKEN_CONTEXT
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: "{{field}} is not consistent with access token."
    RegionDeviceCountGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/RegionDeviceCountx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/RegionDeviceCountErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    RegionDeviceCountGeneric429:
      description: Either out of resource quota or reaching rate limiting
      headers:
        x-correlator:
          $ref: "#/components/headers/RegionDeviceCountx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/RegionDeviceCountErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    WebRTCGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/WebRTCx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/WebRTCErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    WebRTCGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/WebRTCx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/WebRTCErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    WebRTCGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/WebRTCx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/WebRTCErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - INVALID_TOKEN_CONTEXT
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: originator info is not consistent with access token.
    WebRTCGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/WebRTCx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/WebRTCErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: Some identifier cannot be matched to a device
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
    ConnectivityInsightsCreateSubscriptionBadRequest400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_PROTOCOL
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_PROTOCOL:
              description: Invalid protocol for events subscription management
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported
            GENERIC_400_INVALID_CREDENTIAL:
              description: Invalid sink credential type
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              description: Invalid token type for sink credential of type ACCESSTOKEN
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    ConnectivityInsightsGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    ConnectivityInsightsSubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              description: subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    ConnectivityInsightsGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    ConnectivityInsightsGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    ConnectivityInsightsSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_SUBSCRIPTION_MISMATCH:
              description: Inconsistent access token for requested subscription
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription
    ConnectivityInsightsGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    ConnectivityInsightsGeneric409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
    ConnectivityInsightsGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    ConnectivityInsightsCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    ConnectivityInsightsGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectivityInsightsx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectivityInsightsErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    QualityOnDemandGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    QualityOnDemandGeneric401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    QualityOnDemandGeneric403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    QualityOnDemandGeneric404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    QualityOnDemandGenericDevice404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_DEVICE_NOT_FOUND:
              description: Device identifier not found
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
    QualityOnDemandGeneric422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    QualityOnDemandGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/QualityOnDemandx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/QualityOnDemandErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    DeviceIdentifier200RetrieveIdentifier:
      description: An device identifier has been found for the specified subscriber
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            required:
              - lastChecked
              - imei
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierCommonResponseBody"
              - $ref: "#/components/schemas/DeviceIdentifierDeviceIdentifier"
              - $ref: "#/components/schemas/DeviceIdentifierDeviceType"
          examples:
            Successful Identifier Retrieval:
              description: Device identifier has been successfully retrieved when the device subscription was identified by a 3-legged access token or single device subscription identifier
              value:
                lastChecked: "2024-02-20T10:41:38.657Z"
                imeisv: "49015420323751800"
                imei: "4901542032375181"
                tac: "49015420"
                model: "3110"
                manufacturer: Nokia
            Successful Identifier Retrieval With Device Disambiguation:
              description: Device identifier has been successfully retrieved when a 2-legged access token and multiple device subscription identifiers were provided
              value:
                device:
                  phoneNumber: "+123456789"
                lastChecked: "2024-02-20T10:41:38.657Z"
                imeisv: "49015420323751800"
                imei: "4901542032375181"
                tac: "49015420"
                model: "3110"
                manufacturer: Nokia
    DeviceIdentifier200RetrieveType:
      description: A device identifier has been found for the specified subscriber
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            required:
              - lastChecked
              - tac
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierCommonResponseBody"
              - $ref: "#/components/schemas/DeviceIdentifierDeviceType"
          examples:
            Successful Type Retrieval:
              description: Device type has been successfully retrieved when the device subcsription was identified by a 3-legged access token or single device subscription identifier
              value:
                lastChecked: "2024-02-20T10:41:38.657Z"
                tac: "49015420"
                model: "3110"
                manufacturer: Nokia
            Successful Type Retrieval With Device Disambiguation:
              description: Device type has been successfully retrieved when a 2-legged access token and multiple device subscription identifiers were provided
              value:
                device:
                  phoneNumber: "+123456789"
                lastChecked: "2024-02-20T10:41:38.657Z"
                tac: "49015420"
                model: "3110"
                manufacturer: Nokia
    DeviceIdentifier200RetrievePPID:
      description: A pseudonymous device identifier has been found for the specified mobile subscriber
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            required:
              - lastChecked
              - ppid
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierCommonResponseBody"
              - $ref: "#/components/schemas/DeviceIdentifierDevicePPID"
          examples:
            Successful PPID Retrieval:
              description: Device PPID has been successfully retrieved when the device subcsription was identified by a 3-legged access token or single device subscription identifier
              value:
                lastChecked: "2024-02-20T10:41:38.657Z"
                ppid: b083f65ccdad365d7489fff24b6d5074b30c12b6d81db3404d25964ffd908813
            Successful PPID Retrieval With Device Disambiguation:
              description: Device PPID has been successfully retrieved when a 2-legged access token and multiple device subscription identifiers were provided
              value:
                device:
                  phoneNumber: "+123456789"
                lastChecked: "2024-02-20T10:41:38.657Z"
                ppid: b083f65ccdad365d7489fff24b6d5074b30c12b6d81db3404d25964ffd908813
    DeviceIdentifier400BadRequest:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
          examples:
            Insufficient Parameters:
              description: Sufficient parameters must be provided to allow the target UE to be identified
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: At least one of phoneNumber, networkAccessIdentifier, ipv4Address and ipv6Address must be specified
            Inconsistent Device Properties:
              description: Device parameters provided identify different devices
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Multiple inconsistent device parameters specified
            Invalid Network Access Identifier:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Invalid format: networkAccessIdentifier"
            Invalid Phone Number:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Invalid format: phoneNumber"
            Invalid IPv4 Address:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Invalid format: ipv4Address"
            Invalid IPv6 Address:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Invalid format: ipv6Address"
            Invalid Port Value:
              value:
                status: 400
                code: OUT_OF_RANGE
                message: "Invalid value: ipv4Address.publicPort"
    DeviceIdentifier401Unauthorized:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            Unauthenticated Request:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    DeviceIdentifier403Forbidden:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            Permision Denied:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    DeviceIdentifier404NotFound:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - IDENTIFIER_NOT_FOUND
          examples:
            Device Cannot Be Found:
              description: The provided identifier cannot be matched to a device known to the API provider
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: The provided identifier cannot be matched to a device.
    DeviceIdentifier422UnprocessableContent:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            Service Not Applicable For Device:
              description: The service is not applicable for the identified device
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not applicable for the identified device.
            Unsupported Identifier:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: None of the provided identifiers is supported by the implementation.
            Unnecessary Identifier:
              description: An explicit identifier has been provided for the device when this is already identified by the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: An explicit identifier has been provided for the device when this is already identified by the access token
            Missing Identifier:
              description: An identifier is not included in the request and the device cannot be identified from the 2-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: An identifier is not included in the request and the device cannot be identified from the 2-legged access token
    DeviceIdentifier429TooManyRequests:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceIdentifierX-Correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceIdentifierErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            Too Many Requests:
              description: Access to the API has been temporarily blocked due to quota or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached
            Quota Exceeded:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota
    SimSwapCreateSubscriptionBadRequest400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_PROTOCOL
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_PROTOCOL:
              description: Invalid protocol for events subscription management
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported
            GENERIC_400_INVALID_CREDENTIAL:
              description: Invalid sink credential type
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              description: Invalid token type for sink credential of type ACCESSTOKEN
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    SimSwapGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    SimSwapSubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              description: subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    SimSwapGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    SimSwapGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    SimSwapSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    SimSwapGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    SimSwapGeneric409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
    SimSwapGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    SimSwapCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    SimSwapGeneric429:
      description: Too Many Requests
      headers:
        X-Correlator:
          $ref: "#/components/headers/SimSwapx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SimSwapErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    DeviceRoamingStatusCreateSubscriptionBadRequest400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_PROTOCOL
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_PROTOCOL:
              description: Invalid protocol for events subscription management
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported
            GENERIC_400_INVALID_CREDENTIAL:
              description: Invalid sink credential type
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              description: Invalid token type for sink credential of type ACCESSTOKEN
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    DeviceRoamingStatusGeneric400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    DeviceRoamingStatusSubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              description: subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    DeviceRoamingStatusGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    DeviceRoamingStatusGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    DeviceRoamingStatusSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_SUBSCRIPTION_MISMATCH:
              description: Inconsistent access token for requested subscription
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription
    DeviceRoamingStatusGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    DeviceRoamingStatusGeneric409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
    DeviceRoamingStatusGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    DeviceRoamingStatusCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
                      - MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
            GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED:
              description: Multi event types subscription is not supported
              value:
                status: 422
                code: MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                message: Multi event types subscription not managed
    DeviceRoamingStatusGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceRoamingStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceRoamingStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    DeviceReachabilityStatusCreateSubscriptionBadRequest400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_PROTOCOL
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_PROTOCOL:
              description: Invalid protocol for events subscription management
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported
            GENERIC_400_INVALID_CREDENTIAL:
              description: Invalid sink credential type
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              description: Invalid token type for sink credential of type ACCESSTOKEN
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    DeviceReachabilityStatusGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    DeviceReachabilityStatusSubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              description: subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    DeviceReachabilityStatusGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    DeviceReachabilityStatusGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    DeviceReachabilityStatusSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_SUBSCRIPTION_MISMATCH:
              description: Inconsistent access token for requested subscription
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription
    DeviceReachabilityStatusGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    DeviceReachabilityStatusGeneric409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
    DeviceReachabilityStatusGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    DeviceReachabilityStatusCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
                      - MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
            GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED:
              description: Multi event types subscription is not supported
              value:
                status: 422
                code: MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                message: Multi event types subscription not managed
    DeviceReachabilityStatusGeneric429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/DeviceReachabilityStatusx-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeviceReachabilityStatusErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    ConnectedNetworkTypeCreateSubscriptionBadRequest400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_PROTOCOL
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
                      - INVALID_SINK
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_PROTOCOL:
              description: Invalid protocol for events subscription management
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported
            GENERIC_400_INVALID_CREDENTIAL:
              description: Invalid sink credential type
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              description: Invalid token type for sink credential of type ACCESSTOKEN
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
            GENERIC_400_INVALID_SINK:
              description: Invalid sink value
              value:
                status: 400
                code: INVALID_SINK
                message: sink not valid for the specified protocol
    ConnectedNetworkTypeGeneric400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    ConnectedNetworkTypeSubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              description: subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: "Expected property is missing: subscriptionId"
    ConnectedNetworkTypeGeneric401:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated and a new authentication is required
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials. A new authentication is required.
    ConnectedNetworkTypeGeneric403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    ConnectedNetworkTypeSubscriptionPermissionDenied403:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_SUBSCRIPTION_MISMATCH:
              description: Inconsistent access token for requested subscription
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription
    ConnectedNetworkTypeGeneric404:
      description: Resource Not Found
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    ConnectedNetworkTypeGeneric409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
    ConnectedNetworkTypeGeneric410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    ConnectedNetworkTypeCreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    ConnectedNetworkTypeGeneric429:
      description: Too Many Requests
      headers:
        X-Correlator:
          $ref: "#/components/headers/ConnectedNetworkTypex-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ConnectedNetworkTypeErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
  parameters:
    CustomerInsightsx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/CustomerInsightsXCorrelator"
    DeviceSwapx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceSwapXCorrelator"
    KnowYourCustomerAgeVerificationx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/KnowYourCustomerAgeVerificationXCorrelator"
    KnowYourCustomerFill-inx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/KnowYourCustomerFill-inXCorrelator"
    KnowYourCustomerMatchx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/KnowYourCustomerMatchXCorrelator"
    NumberRecyclingx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/NumberRecyclingXCorrelator"
    OTPValidationx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/OTPValidationXCorrelator"
    CallForwardingSignalx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/CallForwardingSignalXCorrelator"
    DeviceLocationSubscriptionId:
      name: subscriptionId
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation.
      required: true
      schema:
        $ref: "#/components/schemas/DeviceLocationSubscriptionId"
    DeviceLocationx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services.
      schema:
        $ref: "#/components/schemas/DeviceLocationXCorrelator"
    PopulationDensityDatax-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services.
      schema:
        $ref: "#/components/schemas/PopulationDensityDataXCorrelator"
    RegionDeviceCountx-correlator:
      name: x-correlator
      in: header
      description: Correlation ID for cross-service tracking
      schema:
        $ref: "#/components/schemas/RegionDeviceCountXCorrelator"
    WebRTChdrRegistrationId:
      name: registrationId
      in: header
      description: The device registration identifier assigned by the network
      required: true
      style: simple
      explode: false
      schema:
        type: string
    WebRTCpathParamMediaSessionId:
      name: mediaSessionId
      in: path
      description: The sessionId assigned by the network for the media session
      required: true
      style: simple
      explode: false
      schema:
        type: string
    WebRTCx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/WebRTCXCorrelator"
    ConnectivityInsightsSubscriptionId:
      name: subscriptionId
      in: path
      description: |
        Subscription identifier that was obtained from the create event
        subscription operation
      required: true
      schema:
        $ref: "#/components/schemas/ConnectivityInsightsSubscriptionId"
    ConnectivityInsightsx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/ConnectivityInsightsXCorrelator"
    QualityOnDemandx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/QualityOnDemandXCorrelator"
    DeviceIdentifierx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceIdentifierXCorrelator"
    SimSwapSubscriptionId:
      name: subscriptionId
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation
      required: true
      schema:
        $ref: "#/components/schemas/SimSwapSubscriptionId"
    SimSwapx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/SimSwapXCorrelator"
    DeviceRoamingStatusSubscriptionId:
      name: subscriptionId
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation
      required: true
      schema:
        $ref: "#/components/schemas/DeviceRoamingStatusSubscriptionId"
    DeviceRoamingStatusx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceRoamingStatusXCorrelator"
    DeviceReachabilityStatusSubscriptionId:
      name: subscriptionId
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation
      required: true
      schema:
        $ref: "#/components/schemas/DeviceReachabilityStatusSubscriptionId"
    DeviceReachabilityStatusx-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceReachabilityStatusXCorrelator"
    ConnectedNetworkTypeSubscriptionId:
      name: subscriptionId
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation
      required: true
      schema:
        $ref: "#/components/schemas/ConnectedNetworkTypeSubscriptionId"
    ConnectedNetworkTypex-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/ConnectedNetworkTypeXCorrelator"
  examples:
    DeviceSwapRETRIEVE_DATE:
      summary: Lastest Device swap date is send back
      value:
        latestDeviceChange: "2024-09-18T07:37:53.471829447Z"
    DeviceSwapRETRIEVE_MONITORED_NULL:
      summary: Only null value is retrieved
      value:
        latestDeviceChange: null
    DeviceSwapRETRIEVE_MONITORED_PERIOD:
      summary: null is send back for the date but a monitoredPeriod is provided
      value:
        latestDeviceChange: null
        monitoredPeriod: 120
    DeviceSwapCHECK_2LEGS:
      summary: Check request without 3-legged access tokens
      value:
        phoneNumber: "+346661113334"
        maxAge: 120
    DeviceSwapCHECK_3LEGS:
      summary: Check request with 3-legged access tokens
      value:
        maxAge: 120
    DeviceSwapRETRIEVE_2LEGS:
      summary: Retrieve request without 3-legged access tokens
      value:
        phoneNumber: "+346661113334"
    DeviceSwapRETRIEVE_3LEGS:
      summary: Retrieve request with 3-legged access tokens
      value: {}
    DeviceLocationREQUEST_CIRCLE_AREA_ENTERED:
      description: A sample geofence for entering for a circle area.
      value:
        protocol: HTTP
        sink: https://notificationSendServer12.supertelco.com
        types:
          - org.camaraproject.geofencing-subscriptions.v0.area-entered
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+12345678912"
            area:
              areaType: CIRCLE
              center:
                latitude: 50.735851
                longitude: 7.10066
              radius: 2000
          initialEvent: true
          subscriptionMaxEvents: 10
          subscriptionExpireTime: "2024-03-22T05:40:58.469Z"
    DeviceLocationREQUEST_CIRCLE_AREA_ENTERED_MULTIPLE_IDENTIFIERS:
      description: A sample geofence for entering for a circle area.
      value:
        protocol: HTTP
        sink: https://notificationSendServer12.supertelco.com
        types:
          - org.camaraproject.geofencing-subscriptions.v0.area-entered
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+12345678912"
              ipv4Address:
                publicAddress: 123.234.1.2
                publicPort: 1234
            area:
              areaType: CIRCLE
              center:
                latitude: 50.735851
                longitude: 7.10066
              radius: 2000
          initialEvent: true
          subscriptionMaxEvents: 10
          subscriptionExpireTime: "2024-03-22T05:40:58.469Z"
    DeviceLocationCIRCLE_AREA_ENTERED:
      description: The cloud event when a geofence area was entered.
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.area-entered
        specversion: "1.0"
        datacontenttype: application/json
        time: "2023-03-22T05:40:23.682Z"
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
    DeviceLocationCIRCLE_AREA_LEFT:
      description: The cloud event when a geofence area was left.
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.area-left
        specversion: "1.0"
        datacontenttype: application/json
        time: "2023-03-22T05:40:23.682Z"
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
    DeviceLocationSUBSCRIPTION_STARTED:
      description: The cloud event when a geofence subscription was started.
      value:
        id: "124003"
        source: https://dataUsageServer.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.subscription-started
        specversion: "1.0"
        datacontenttype: application/json
        data:
          initiationReason: SUBSCRIPTION_CREATED
          subscriptionId: dv10-h556-rt89-1403
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
        time: "2024-03-05T15:00:23.682Z"
    DeviceLocationSUBSCRIPTION_UPDATED:
      description: The cloud event when a geofence subscription was updated.
      value:
        id: "124003"
        source: https://dataUsageServer.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.subscription-updated
        specversion: "1.0"
        datacontenttype: application/json
        data:
          updateReason: SUBSCRIPTION_ACTIVE
          subscriptionId: dv10-h556-rt89-1403
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
        time: "2024-03-05T15:00:23.682Z"
    DeviceLocationSUBSCRIPTION_ENDED:
      description: The cloud event when a geofence subscription ended.
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        time: "2023-03-22T05:40:23.682Z"
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
          terminationReason: SUBSCRIPTION_EXPIRED
    DeviceLocationSUBSCRIPTION_UNPROCESSABLE:
      description: The cloud event when the subscription process was aborted.
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        time: "2023-03-22T05:40:23.682Z"
        data:
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
          terminationReason: SUBSCRIPTION_UNPROCESSABLE
          terminationDescription: The requested area cannot be covered by the network.
    PopulationDensityDataPopulationDensitySupportedAreaResponseExample:
      value:
        status: SUPPORTED_AREA
        timedPopulationDensityData:
          - startTime: "2024-01-03T10:00:00Z"
            endTime: "2024-01-03T11:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 150
                minPplDensity: 30
                pplDensity: 60
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 40
                pplDensity: 90
              - geohash: ezdqemu
                dataType: LOW_DENSITY
          - startTime: "2024-01-03T11:00:00Z"
            endTime: "2024-01-03T12:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 30
                pplDensity: 70
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
              - geohash: ezdqemu
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
    PopulationDensityDataPopulationDensityPartOfAreaNotSupportedResponseExample:
      value:
        status: PART_OF_AREA_NOT_SUPPORTED
        timedPopulationDensityData:
          - startTime: "2024-01-03T10:00:00Z"
            endTime: "2024-01-03T11:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 150
                minPplDensity: 30
                pplDensity: 60
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 40
                pplDensity: 90
              - geohash: ezdqemu
                dataType: NO_DATA
          - startTime: "2024-01-03T11:00:00Z"
            endTime: "2024-01-03T12:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 30
                pplDensity: 70
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
              - geohash: ezdqemu
                dataType: NO_DATA
    PopulationDensityDataPopulationDensityAreaNotSupportedResponseExample:
      value:
        status: AREA_NOT_SUPPORTED
        timedPopulationDensityData: []
    PopulationDensityDataPopulationDensitySupportedAreaAsyncResponseExample:
      value:
        status: SUPPORTED_AREA
        timedPopulationDensityData:
          - startTime: "2024-01-03T10:00:00Z"
            endTime: "2024-01-03T11:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 150
                minPplDensity: 30
                pplDensity: 60
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 40
                pplDensity: 90
              - geohash: ezdqemu
                dataType: LOW_DENSITY
          - startTime: "2024-01-03T11:00:00Z"
            endTime: "2024-01-03T12:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 30
                pplDensity: 70
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
              - geohash: ezdqemu
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
        operationId: 2322f362-eaab-4cf3-86d2-efcbdf3a7cb4
    PopulationDensityDataPopulationDensityPartOfAreaNotSupportedAsyncResponseExample:
      value:
        status: PART_OF_AREA_NOT_SUPPORTED
        timedPopulationDensityData:
          - startTime: "2024-01-03T10:00:00Z"
            endTime: "2024-01-03T11:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 150
                minPplDensity: 30
                pplDensity: 60
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 40
                pplDensity: 90
              - geohash: ezdqemu
                dataType: NO_DATA
          - startTime: "2024-01-03T11:00:00Z"
            endTime: "2024-01-03T12:00:00Z"
            cellPopulationDensityData:
              - geohash: ezdqemf
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 100
                minPplDensity: 30
                pplDensity: 70
              - geohash: ezdqemg
                dataType: DENSITY_ESTIMATION
                maxPplDensity: 200
                minPplDensity: 40
                pplDensity: 100
              - geohash: ezdqemu
                dataType: NO_DATA
        operationId: 2322f362-eaab-4cf3-86d2-efcbdf3a7cb4
    PopulationDensityDataPopulationDensityAreaNotSupportedAsyncResponseExample:
      value:
        status: AREA_NOT_SUPPORTED
        timedPopulationDensityData: []
        operationId: 2322f362-eaab-4cf3-86d2-efcbdf3a7cb4
    PopulationDensityDataPopulationDensityOperationNotCompletedExample:
      value:
        status: OPERATION_NOT_COMPLETED
        timedPopulationDensityData: []
        statusInfo: Some error happened during the processing of the request
        operationId: 2322f362-eaab-4cf3-86d2-efcbdf3a7cb4
    RegionDeviceCountRETRIEVAL_CIRCLE:
      value:
        area:
          areaType: CIRCLE
          center:
            latitude: 45.754114
            longitude: 4.860374
          radius: 800
        starttime: "2023-07-03T14:27:08.312+02:00"
        endtime: "2023-07-04T14:27:08.312+02:00"
        filter:
          roamingStatus:
            - roaming
          deviceType:
            - human device
            - IoT device
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: yJ2ZXIiOiIxLjAiLCJ0eXAiO...
          accessTokenExpiresUtc: "1717753038"
          accessTokenType: bearer
    RegionDeviceCountRETRIEVAL_POLYGON:
      value:
        area:
          areaType: POLYGON
          boundary:
            - latitude: 45.754114
              longitude: 4.860374
            - latitude: 45.753845
              longitude: 4.863185
            - latitude: 45.753916
              longitude: 4.866531
            - latitude: 45.754116
              longitude: 4.876353
        starttime: "2023-07-03T14:27:08.312+02:00"
        endtime: "2023-07-04T14:27:08.312+02:00"
        filter:
          roamingStatus:
            - non-roaming
          deviceType:
            - other
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: yJ2ZXIiOiIxLjAiLCJ0eXAiO...
          accessTokenExpiresUtc: "1717753038"
          accessTokenType: bearer
    RegionDeviceCountSUPPORTED_AREA:
      value:
        count: 100
        status: SUPPORTED_AREA
    RegionDeviceCountPART_OF_AREA_NOT_SUPPORTED:
      value:
        count: 100
        status: PART_OF_AREA_NOT_SUPPORTED
    RegionDeviceCountAREA_NOT_SUPPORTED:
      value:
        status: AREA_NOT_SUPPORTED
    RegionDeviceCountDENSITY_BELOW_PRIVACY_THRESHOLD:
      value:
        status: DENSITY_BELOW_PRIVACY_THRESHOLD
    WebRTCexampleMediaSessionRequest:
      value:
        originatorAddress: tel:+17085852753
        originatorName: tel:+17085852753
        receiverAddress: tel:+17085854000
        receiverName: tel:+17085854000
        offer:
          sdp: "v=0\r\no=- 8066321617929821805 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=audio 42988 RTP/SAVPF 102 113\r\nc=IN IP6 2001:e0:410:2448:7a05:9b11:66f2:c9e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:1645903805 1 udp 2122262783 2001:e0:410:2448:7a05:9b11:66f2:c9e 42988 typ host generation 0 network-id 3 network-cost 900\r\na=ice-ufrag:4eKp\r\na=ice-pwd:D4sF5Pv9vx9ggaqxBlHbAFMx\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\r\na=sendrecv\r\na=rtcp-mux\r\na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:Xm3YciqVIWFNSwy19e9MvfZ2YOdAZil7oT/tHjdf\r\na=rtpmap:102 AMR-WB/16000\r\na=fmtp:102 octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\n"
        clientCorrelator: fda6e26d-e7c8-4596-870c-c083c0d39b2c
    WebRTCexampleMediaSessionResponse:
      value:
        originatorAddress: tel:+17085852753
        originatorName: tel:+17085852753
        receiverAddress: tel:+17085854000
        receiverName: tel:+17085854000
        clientCorrelator: fda6e26d-e7c8-4596-870c-c083c0d39b2c
        offer:
          sdp: "v=0\r\no=- 8066321617929821805 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=audio 42988 RTP/SAVPF 102 113\r\nc=IN IP6 2001:e0:410:2448:7a05:9b11:66f2:c9e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:1645903805 1 udp 2122262783 2001:e0:410:2448:7a05:9b11:66f2:c9e 42988 typ host generation 0 network-id 3 network-cost 900\r\na=ice-ufrag:4eKp\r\na=ice-pwd:D4sF5Pv9vx9ggaqxBlHbAFMx\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\r\na=sendrecv\r\na=rtcp-mux\r\na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:Xm3YciqVIWFNSwy19e9MvfZ2YOdAZil7oT/tHjdf\r\na=rtpmap:102 AMR-WB/16000\r\na=fmtp:102 octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\n"
        status: Initial
        mediaSessionId: 0AEE1B58BAEEDA3EABA42B32EBB3DFE0DEAD3F90AE0CEB9EEB0C0F703E199FC00E7C6E648F50EE885FF0CE6C7E1CEE795EDD
    WebRTCexampleSessionStatus183InProgress:
      value:
        receiverSessionStatus:
          status: InProgress
          answer:
            sdp: |
              "v=0\r\no=- 8066321617929821805 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=
              audio 42988 RTP/SAVPF 102 113\r\nc=IN IP6 2001:e0:410:2448:7a05:9b11:66f2
              :c9e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:1645903805 1 udp
              2122262783 2001:e0:410:2448:7a05:9b11:66f2:c9e 42988 typhost generation 0
              network-id 3 network-cost 900\r\na=ice-ufrag:4eKp\r\na=ice-pwd:D4sF5Pv9vx9
              ggaqxBlHbAFMx\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=
              extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions
              -01\r\na=sendrecv\r\na=rtcp-mux\r\na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:Xm
              3YciqVIWFNSwy19e9MvfZ2YOdAZil7oT/tHjdf\r\na=rtpmap:102 AMR-WB/16000\r\na=fmtp:102
              octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\n"
    WebRTCexampleSessionStatus180Ringing:
      value:
        receiverSessionStatus:
          status: Ringing
    WebRTCexampleSessionStatus200Connected:
      value:
        receiverSessionStatus:
          status: Connected
          answer:
            sdp: |
              "v=0\r\no=- 4576312012535546667 4 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=audio 47510 RTP/SAVPF 102 113\r\nc=IN
              IP6 2001:e0:410:243a:a344:cee7:7b39:bb1e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:3108871805 1 udp
              2122262783 2001:e0:410:243a:a344:cee7:7b39:bb1e 47510 typ host generation 0 network-id 3 network-cost 900\r\na=
              ice-ufrag:47Nx\r\na=ice-pwd:ln3CttOSkObcQ7A0tYO1LXqy\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=
              extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\r\na=sendrecv\r\na=rtcp-mux\r
              \na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:ruAnBNYnTJqDVZAIJV59VpQ5DxGI6tMX9h9kkHSz\r\na=rtpmap:102 AMR-WAB/16000
              \r\na=fmtp:102 octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\na=
              ptime:20\r\n"
    WebRTCexampleSessionStatusHold:
      value:
        ReceiverSessionStatus:
          status: Hold
          answer:
            sdp: "v=0\r\no=- 4576312012535546667 4 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=audio 47510 RTP/SAVPF 102 113\r\nc=IN IP6 2001:e0:410:243a:a344:cee7:7b39:bb1e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:3108871805 1 udp 2122262783 2001:e0:410:243a:a344:cee7:7b39:bb1e 47510 typ host generation 0 network-id 3 network-cost 900\r\na=ice-ufrag:47Nx\r\na=ice-pwd:ln3CttOSkObcQ7A0tYO1LXqy\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\r\na=sendrecv\r\na=rtcp-mux\r\na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:ruAnBNYnTJqDVZAIJV59VpQ5DxGI6tMX9h9kkHSz\r\na=rtpmap:102 AMR-WB/16000\r\na=fmtp:102 octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\na=ptime:20\r\n"
    WebRTCexampleSessionStatusResume:
      value:
        ReceiverSessionStatus:
          status: Resume
          answer:
            sdp: "v=0\r\no=- 4576312012535546667 4 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\nm=audio 47510 RTP/SAVPF 102 113\r\nc=IN IP6 2001:e0:410:243a:a344:cee7:7b39:bb1e\r\nb=AS:64\r\na=rtcp:9 IN IP4 0.0.0.0\r\na=candidate:3108871805 1 udp 2122262783 2001:e0:410:243a:a344:cee7:7b39:bb1e 47510 typ host generation 0 network-id 3 network-cost 900\r\na=ice-ufrag:47Nx\r\na=ice-pwd:ln3CttOSkObcQ7A0tYO1LXqy\r\na=ice-options:trickle renomination\r\na=mid:audio\r\na=extmap:2 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\r\na=sendrecv\r\na=rtcp-mux\r\na=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:ruAnBNYnTJqDVZAIJV59VpQ5DxGI6tMX9h9kkHSz\r\na=rtpmap:102 AMR-WB/16000\r\na=fmtp:102 octet-align=0; mode-set=0,1,2; mode-change-capability=2\r\na=rtpmap:113 telephone-event/16000\r\na=ptime:20\r\n"
    QualityOnDemandLIST_OF_QOS_PROFILES:
      summary: A list of QoS profiles with a single entry
      description: Example response when requesting a list of QoS profiles
      value:
        - name: voice
          description: QoS profile for high-quality interactive voice
          status: ACTIVE
          targetMinUpstreamRate:
            value: 100
            unit: kbps
          targetMinDownstreamRate:
            value: 100
            unit: kbps
          minDuration:
            value: 1
            unit: Days
          maxDuration:
            value: 10
            unit: Days
          priority: 10
          packetDelayBudget:
            value: 50
            unit: Milliseconds
          jitter:
            value: 5
            unit: Milliseconds
          packetErrorLossRate: 3
          l4sQueueType: non-l4s-queue
    DeviceIdentifierIdentifyDeviceBy3LeggedToken:
      description: Empty JSON when device is identified by access token
      value: {}
    DeviceIdentifierIdentifyDeviceByPhoneNumber:
      description: Identifying device by phone number
      value:
        device:
          phoneNumber: "+123456789"
    DeviceIdentifierIdentifyDeviceByIPAddress:
      description: Identifying device by IP address
      value:
        device:
          ipv4Address:
            publicAddress: 84.125.93.10
            publicPort: 59765
    DeviceIdentifierIdentifyDeviceByMultipleIdentifiers:
      description: Identifying device by multiple device identifiers
      value:
        device:
          phoneNumber: "+123456789"
          ipv4Address:
            publicAddress: 84.125.93.10
            publicPort: 59765
          networkAccessIdentifier: 123456789@domain.com
    SimSwapSWAPPED:
      value:
        id: "123655"
        source: supertelco.notificationSendServer12
        type: org.camaraproject.sim-swap-subscriptions.v0.swapped
        specversion: "1.0"
        datacontenttype: application/json
        data:
          phoneNumber: "+123456788"
          subscriptionId: 2ghy-55gg-7iup-yuo9
        time: "2023-01-18T13:18:23.682Z"
    SimSwapSUBSCRIPTION_ENDS:
      value:
        id: "123658"
        source: supertelco.notificationSendServer12
        type: org.camaraproject.sim-swap-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        data:
          phoneNumber: "+123456789"
          terminationReason: SUBSCRIPTION_EXPIRED
          subscriptionId: 2ghy-55gg-7iup-yuo9
          terminationDescription: subscription expire time reached
        time: "2023-01-19T13:18:23.682Z"
    SimSwapSUBSCRIPTION_REQUEST:
      value:
        protocol: HTTP
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: yJ2ZXIiOiIxLjAiLCJ0eXAiO...
          accessTokenExpiresUtc: "1717753038"
          accessTokenType: bearer
        types:
          - org.camaraproject.sim-swap-subscriptions.v0.swapped
        config:
          subscriptionDetail:
            phoneNumber: "+123456789"
          subscriptionMaxEvents: 10
          subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
    SimSwapSUBSCRIPTION_REQUEST_3LEGS:
      value:
        protocol: HTTP
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: yJ2ZXIiOiIxLjAiLCJ0eXAiO...
          accessTokenExpiresUtc: "1717753038"
          accessTokenType: bearer
        types:
          - org.camaraproject.sim-swap-subscriptions.v0.swapped
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
    SimSwapSUBSCRIPTION_RESPONSE:
      value:
        protocol: HTTP
        sink: https://endpoint.example.com/sink
        types:
          - org.camaraproject.sim-swap-subscriptions.v0.swapped
        config:
          subscriptionDetail:
            phoneNumber: "+123456789"
          subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
        id: "1119920371"
        startsAt: "2024-06-07T16:10:15.302Z"
        expiresAt: "2024-06-07T16:10:15.302Z"
        status: ACTIVATION_REQUESTED
    SimSwapSUBSCRIPTION_RESPONSE_3LEGS:
      value:
        protocol: HTTP
        sink: https://endpoint.example.com/sink
        types:
          - org.camaraproject.sim-swap-subscriptions.v0.swapped
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
        id: "1119920371"
        startsAt: "2024-06-07T16:10:15.302Z"
        expiresAt: "2024-06-07T16:10:15.302Z"
        status: ACTIVATION_REQUESTED
    SimSwapSUBSCRIPTIONS:
      value:
        - protocol: HTTP
          sink: https://endpoint.example.com/sink
          types:
            - org.camaraproject.sim-swap-subscriptions.v0.swapped
          config:
            subscriptionDetail:
              phoneNumber: "+123456789"
            subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
          id: "1119920371"
          startsAt: "2024-06-07T16:10:15.302Z"
          expiresAt: "2024-06-07T16:10:15.302Z"
          status: ACTIVATION_REQUESTED
    SimSwapSUBSCRIPTIONS_3LEGS:
      value:
        - protocol: HTTP
          sink: https://endpoint.example.com/sink
          types:
            - org.camaraproject.sim-swap-subscriptions.v0.swapped
          config:
            subscriptionDetail: {}
            subscriptionExpireTime: "2025-01-17T13:18:23.682Z"
          id: "1119920371"
          startsAt: "2024-06-07T16:10:15.302Z"
          expiresAt: "2024-06-07T16:10:15.302Z"
          status: ACTIVATION_REQUESTED
    DeviceRoamingStatusROAMING_STATUS:
      value:
        id: "123654"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          roaming: true
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-17T13:18:23.682Z"
    DeviceRoamingStatusROAMING_OFF:
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.roaming-off
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-18T13:18:23.682Z"
    DeviceRoamingStatusROAMING_ON:
      value:
        id: "123656"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceRoamingStatusROAMING_CHANGE_COUNTRY:
      value:
        id: "123657"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.roaming-change-country
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          countryCode: 214
          countryName:
            - ES
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceRoamingStatusSUBSCRIPTION_ENDED:
      description: The cloud event when a device roaming status subscription ends.
      value:
        id: "123658"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          terminationReason: SUBSCRIPTION_EXPIRED
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceRoamingStatusSUBSCRIPTION_STARTED:
      description: The cloud event when a device roaming status subscription was started.
      value:
        id: "124003"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.subscription-started
        specversion: "1.0"
        datacontenttype: application/json
        data:
          initiationReason: SUBSCRIPTION_CREATED
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    DeviceRoamingStatusSUBSCRIPTION_UPDATED:
      description: The cloud event when a device roaming status subscription was updated.
      value:
        id: "124773"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-roaming-status-subscriptions.v0.subscription-updated
        specversion: "1.0"
        datacontenttype: application/json
        data:
          updateReason: SUBSCRIPTION_ACTIVE
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    DeviceRoamingStatusACTIVE_SUBSCRIPTION:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceRoamingStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceRoamingStatusSUBSCRIPTION_ACTIVATION_REQUESTED:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVATION_REQUESTED
    DeviceRoamingStatusSUBSCRIPTION_DELETED:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: DELETED
    DeviceRoamingStatusCREATE_SUBSCRIPTION:
      value:
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: xxx
          accessTokenExpiresUtc: "2024-02-17T16:23:45Z"
          accessTokenType: bearer
        protocol: HTTP
        types:
          - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-status
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2023-01-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
    DeviceRoamingStatusSUBSCRIPTION_LIST:
      description: A list of API consumer subscriptions. If a 3-legged access token is used, the list is specific to the device associated with that token.
      value:
        - id: 550e8400-e29b-41d4-a716-446655440000
          sink: https://endpoint.example.com/sink
          protocol: HTTP
          types:
            - org.camaraproject.device-roaming-status-subscriptions.v0.roaming-on
          config:
            subscriptionDetail: {}
            subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
            subscriptionMaxEvents: 5
            initialEvent: true
          startsAt: "2024-07-03T21:12:02.871Z"
          expiresAt: "2024-07-03T21:12:02.871Z"
          status: ACTIVE
    DeviceRoamingStatusEMPTY_SUBSCRIPTION_LIST:
      description: The API consumer either has no subscriptions or, if a 3-legged access token is used, has none for the device associated with that token.
      value: []
    DeviceReachabilityStatusREACHABILITY_DATA:
      value:
        id: "123656"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceReachabilityStatusREACHABILITY_SMS:
      value:
        id: "123656"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceReachabilityStatusREACHABILITY_DISCONNECTED:
      value:
        id: "123656"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          subscriptionId: qs15-h556-rt89-1298
        time: "2023-01-19T13:18:23.682Z"
    DeviceReachabilityStatusSUBSCRIPTION_ENDED:
      description: The cloud event when a device reachability status subscription ends.
      value:
        id: "123658"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          terminationReason: SUBSCRIPTION_EXPIRED
          subscriptionId: qs15-h556-rt89-1298
          terminationDescription: Subscription expiry time has been reached
        time: "2024-03-22T05:40:23.682Z"
    DeviceReachabilityStatusSUBSCRIPTION_STARTED:
      description: The cloud event when a device reachability status subscription was started.
      value:
        id: "124003"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.subscription-started
        specversion: "1.0"
        datacontenttype: application/json
        data:
          initiationReason: SUBSCRIPTION_CREATED
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    DeviceReachabilityStatusSUBSCRIPTION_UPDATED:
      description: The cloud event when a device reachability status subscription was updated.
      value:
        id: "124773"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.device-reachability-status-subscriptions.v0.subscription-updated
        specversion: "1.0"
        datacontenttype: application/json
        data:
          updateReason: SUBSCRIPTION_ACTIVE
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    DeviceReachabilityStatusACTIVE_SUBSCRIPTION:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceReachabilityStatusACTIVE_SUBSCRIPTION_WITH_DEVICE_DISAMBIGUATION:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVE
    DeviceReachabilityStatusSUBSCRIPTION_ACTIVATION_REQUESTED:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVATION_REQUESTED
    DeviceReachabilityStatusSUBSCRIPTION_DELETED:
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: DELETED
    DeviceReachabilityStatusCREATE_SUBSCRIPTION:
      value:
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: xxx
          accessTokenExpiresUtc: "2024-02-17T16:23:45Z"
          accessTokenType: bearer
        protocol: HTTP
        types:
          - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2023-01-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
    DeviceReachabilityStatusSUBSCRIPTION_LIST:
      description: A list of API consumer subscriptions. If a 3-legged access token is used, the list is specific to the device associated with that token.
      value:
        - id: 550e8400-e29b-41d4-a716-446655440000
          sink: https://endpoint.example.com/sink
          protocol: HTTP
          types:
            - org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
          config:
            subscriptionDetail: {}
            subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
            subscriptionMaxEvents: 5
            initialEvent: true
          startsAt: "2024-07-03T21:12:02.871Z"
          expiresAt: "2024-07-03T21:12:02.871Z"
          status: ACTIVE
    DeviceReachabilityStatusEMPTY_SUBSCRIPTION_LIST:
      description: The API consumer either has no subscriptions or, if a 3-legged access token is used, has none for the device associated with that token.
      value: []
    ConnectedNetworkTypeNETWORK_TYPE_CHANGED:
      description: The cloud event when a connected network type changed
      value:
        id: "123655"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        specversion: "1.0"
        datacontenttype: application/json
        data:
          subscriptionId: "987654321"
          device:
            phoneNumber: "+123456789"
          connectedNetworkType: 5G
        time: "2023-03-22T05:40:23.682Z"
    ConnectedNetworkTypeSUBSCRIPTION_ENDED:
      description: The cloud event when a connected network type subscription ends
      value:
        id: "124003"
        source: https://dataUsageServer.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v0.subscription-ended
        specversion: "1.0"
        datacontenttype: application/json
        data:
          device:
            phoneNumber: "+123456789"
          terminationReason: SUBSCRIPTION_EXPIRED
          subscriptionId: dv10-h556-rt89-1403
          terminationDescription: Subscription expiry time has been reached
        time: "2024-03-05T15:00:23.682Z"
    ConnectedNetworkTypeSUBSCRIPTION_ACTIVATION_REQUESTED:
      description: Subscription details for a subscription whose activation has been requested
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: ACTIVATION_REQUESTED
    ConnectedNetworkTypeSUBSCRIPTION_DELETED:
      description: Subscription details for a subscription that has been deleted
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
        status: DELETED
    ConnectedNetworkTypeSUBSCRIPTION_STARTED:
      description: The cloud event when a connected network type subscription was started.
      value:
        id: "124003"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v0.subscription-started
        specversion: "1.0"
        datacontenttype: application/json
        data:
          initiationReason: SUBSCRIPTION_CREATED
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    ConnectedNetworkTypeSUBSCRIPTION_UPDATED:
      description: The cloud event when a connected network type subscription was updated.
      value:
        id: "124773"
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v0.subscription-updated
        specversion: "1.0"
        datacontenttype: application/json
        data:
          updateReason: SUBSCRIPTION_ACTIVE
          subscriptionId: qs15-h556-rt89-1298
          device:
            phoneNumber: "+123456789"
        time: "2024-03-05T15:00:23.682Z"
    ConnectedNetworkTypeACTIVE_SUBSCRIPTION:
      description: Subscription details for an active subscription
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail: {}
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        status: ACTIVE
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
    ConnectedNetworkTypeACTIVE_SUBSCRIPTION_WITH_DEVICE_IDENTIFIER:
      description: Subscription details for an active subscription when a device identifier is also returned
      value:
        id: 550e8400-e29b-41d4-a716-446655440000
        sink: https://endpoint.example.com/sink
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
        status: ACTIVE
        startsAt: "2024-07-03T21:12:02.871Z"
        expiresAt: "2024-07-03T21:12:02.871Z"
    ConnectedNetworkTypeCREATE_SUBSCRIPTION:
      description: Subscription creation confirmation
      value:
        sink: https://endpoint.example.com/sink
        sinkCredential:
          credentialType: ACCESSTOKEN
          accessToken: xxx
          accessTokenExpiresUtc: "2024-02-17T16:23:45Z"
          accessTokenType: bearer
        protocol: HTTP
        types:
          - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
        config:
          subscriptionDetail:
            device:
              phoneNumber: "+123456789"
          subscriptionExpireTime: "2023-01-17T13:18:23.682Z"
          subscriptionMaxEvents: 5
          initialEvent: true
    ConnectedNetworkTypeSUBSCRIPTION_LIST:
      description: A list of API consumer subscriptions. If a 3-legged access token is used, the list is specific to the device associated with that token.
      value:
        - id: 550e8400-e29b-41d4-a716-446655440000
          sink: https://endpoint.example.com/sink
          protocol: HTTP
          types:
            - org.camaraproject.connected-network-type-subscriptions.v0.network-type-changed
          config:
            subscriptionDetail: {}
            subscriptionExpireTime: "2024-07-17T13:18:23.682Z"
            subscriptionMaxEvents: 5
            initialEvent: true
          startsAt: "2024-07-03T21:12:02.871Z"
          expiresAt: "2024-07-03T21:12:02.871Z"
          status: ACTIVE
    ConnectedNetworkTypeEMPTY_SUBSCRIPTION_LIST:
      description: The API consumer either has no subscriptions or, if a 3-legged access token is used, has none for the device associated with that token.
      value: []
  requestBodies: {}
  headers:
    CustomerInsightsx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/CustomerInsightsXCorrelator"
    DeviceSwapx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceSwapXCorrelator"
    KnowYourCustomerAgeVerificationx-correlator:
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/KnowYourCustomerAgeVerificationXCorrelator"
    KnowYourCustomerFill-inX-Correlator:
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/KnowYourCustomerFill-inXCorrelator"
    KnowYourCustomerMatchx-correlator:
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/KnowYourCustomerMatchXCorrelator"
    TenureX-Correlator:
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/TenureXCorrelator"
    NumberRecyclingx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/NumberRecyclingXCorrelator"
    OTPValidationx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/OTPValidationXCorrelator"
    CallForwardingSignalx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/CallForwardingSignalXCorrelator"
    DeviceLocationx-correlator:
      description: Correlation id for the different services.
      schema:
        $ref: "#/components/schemas/DeviceLocationXCorrelator"
    PopulationDensityDatax-correlator:
      description: Correlation id for the different services.
      schema:
        $ref: "#/components/schemas/PopulationDensityDataXCorrelator"
    RegionDeviceCountx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/RegionDeviceCountXCorrelator"
    WebRTCx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/WebRTCXCorrelator"
    ConnectivityInsightsx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/ConnectivityInsightsXCorrelator"
    QualityOnDemandx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/QualityOnDemandXCorrelator"
    DeviceIdentifierX-Correlator:
      description: Correlation id for the different services
      required: false
      schema:
        $ref: "#/components/schemas/DeviceIdentifierXCorrelator"
    SimSwapx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/SimSwapXCorrelator"
    DeviceRoamingStatusx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceRoamingStatusXCorrelator"
    DeviceReachabilityStatusx-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/DeviceReachabilityStatusXCorrelator"
    ConnectedNetworkTypex-correlator:
      description: Correlation id for the different services
      schema:
        $ref: "#/components/schemas/ConnectedNetworkTypeXCorrelator"
  links: {}
  callbacks: {}
security: []
tags:
  - name: CustomerInsights
    description: Customer Insights
  - name: DeviceSwap
    description: Device Swap
  - name: KnowYourCustomerAgeVerification
    description: Know Your Customer Age Verification
  - name: KnowYourCustomerFill-in
    description: Know Your Customer Fill-in
  - name: KnowYourCustomerMatch
    description: Know Your Customer Match
  - name: Tenure
    description: KYC Tenure
  - name: NumberRecycling
    description: Number Recycling
  - name: OTPValidation
    description: One Time Password SMS
  - name: CallForwardingSignal
    description: Call Forwarding Signal
  - name: DeviceLocation
    description: Device Geofencing Subscriptions
  - name: PopulationDensityData
    description: Population Density Data
  - name: RegionDeviceCount
    description: Region Device Count
  - name: WebRTC
    description: WebRTC Call Handling
  - name: ConnectivityInsights
    description: Connectivity Insights Subscriptions
  - name: QualityOnDemand
    description: QoS Profiles
  - name: DeviceIdentifier
    description: Device Identifier
  - name: SimSwap
    description: Sim Swap Subscriptions
  - name: DeviceRoamingStatus
    description: Device Roaming Status Subscriptions
  - name: DeviceReachabilityStatus
    description: Device Reachability Status Subscriptions
  - name: ConnectedNetworkType
    description: Connected Network Type Subscriptions
